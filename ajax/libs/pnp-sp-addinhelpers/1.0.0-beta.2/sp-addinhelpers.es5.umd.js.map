{"version":3,"file":"sp-addinhelpers.es5.umd.js","sources":["../../../../packages/sp-addinhelpers/src/exceptions.ts","../../../../packages/sp-addinhelpers/src/sprequestexecutorclient.ts"],"sourcesContent":["import { LogLevel, Logger } from \"@pnp/logging\";\r\n\r\nexport class SPRequestExecutorUndefinedException extends Error {\r\n\r\n    constructor() {\r\n        const msg = [\r\n            \"SP.RequestExecutor is undefined. \",\r\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\r\n        ].join(\" \");\r\n        super(msg);\r\n        this.name = \"SPRequestExecutorUndefinedException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: `[${this.name}]::${this.message}` });\r\n    }\r\n}\r\n","import { HttpClientImpl } from \"@pnp/sp\";\r\nimport { Util } from \"@pnp/common\";\r\nimport { SPRequestExecutorUndefinedException } from \"./exceptions\";\r\n\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nexport class SPRequestExecutorClient implements HttpClientImpl {\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    public fetch(url: string, options: any): Promise<Response> {\r\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\r\n            throw new SPRequestExecutorUndefinedException();\r\n        }\r\n\r\n        const addinWebUrl = url.substring(0, url.indexOf(\"/_api\")),\r\n            executor = new SP.RequestExecutor(addinWebUrl);\r\n\r\n        let headers: { [key: string]: string; } = {},\r\n            iterator: IterableIterator<[string, string]>,\r\n            temp: IteratorResult<[string, string]>;\r\n\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = <IterableIterator<[string, string]>>options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        } else {\r\n            headers = <any>options.headers;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let requestOptions = {\r\n                error: (error: SP.ResponseInfo) => {\r\n                    reject(this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: (response: SP.ResponseInfo) => {\r\n                    resolve(this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n\r\n            if (options.body) {\r\n                requestOptions = Util.extend(requestOptions, { body: options.body });\r\n            } else {\r\n                requestOptions = Util.extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Converts a SharePoint REST API response to a fetch API response.\r\n     */\r\n    private convertToResponse = (spResponse: SP.ResponseInfo): Response => {\r\n        const responseHeaders = new Headers();\r\n\r\n        if (typeof spResponse.headers !== \"undefined\") {\r\n            for (const h in spResponse.headers) {\r\n                if (spResponse.headers[h]) {\r\n                    responseHeaders.append(h, spResponse.headers[h]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // issue #256, Cannot have an empty string body when creating a Response with status 204\r\n        const body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n\r\n        return new Response(body, {\r\n            headers: responseHeaders,\r\n            status: spResponse.statusCode,\r\n            statusText: spResponse.statusText,\r\n        });\r\n    }\r\n}\r\n"],"names":["Logger","LogLevel","Util"],"mappings":"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"}