{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sp-addinhelpers.es5.umd.bundle.min.js","webpack:///webpack/bootstrap e403d650fe824d928f39","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./build/packages/sp-addinhelpers/es5/src/exceptions.js","webpack:///./build/packages/sp-addinhelpers/es5/src/sprequestexecutorclient.js","webpack:///./build/packages/sp-addinhelpers/es5/src/sprestaddin.js","webpack:///./dist/packages/sp/dist/sp.es5.js","webpack:///(webpack)/buildin/global.js","webpack:///./dist/packages/odata/dist/odata.es5.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__extends","b","__","constructor","extendStatics","create","__decorate","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","setPrototypeOf","__proto__","Array","assign","readBlobAsArrayBuffer","blob","readBlobAs","mode","Promise","resolve","reject","reader","FileReader","onload","e","result","readAsText","readAsArrayBuffer","mergeOptions","source","Util","objectDefinedNotNull","headers","extend","mergeHeaders","Request","forEach","value","append","Dictionary","UrlException","RuntimeConfig","PnPClientStorage","__WEBPACK_IMPORTED_MODULE_0__pnp_logging__","__WEBPACK_IMPORTED_MODULE_1_tslib__","keys","values","index","indexOf","add","remove","push","merge","_this","sourceAsDictionary_1","getKeys","map","sourceAsHash","val","splice","getValues","clear","count","getCtxCallback","context","method","params","_i","apply","urlParamExists","replace","RegExp","test","location","search","getUrlParamByName","regex","results","exec","decodeURIComponent","getUrlParamBoolByName","stringInsert","substring","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","loadStylesheet","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","createElement","appendChild","setAttribute","combinePaths","paths","filter","stringIsNullOrEmpty","join","getRandomString","chars","text","possible","charAt","Math","floor","random","getGUID","isFunction","candidateFunction","obj","isArray","array","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","_super","FunctionExpectedException","msg","log","data","level","Error","message","CommonRuntimeConfigKeys","defaultCachingStore","defaultCachingTimeoutSeconds","globalCacheDisable","enableCacheExpiration","cacheExpirationIntervalMilliseconds","spfxContext","RuntimeConfigImpl","_v","config","_runtimeConfig","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","write","Info","cacheExpirationHandler","getItem","persistable","JSON","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","then","deleteExpired","defaultTimeout","stringify","pnp","Verbose","_","setTimeout","catch","MemoryStorage","_store","_local","_session","localStorage","sessionStorage","Logger","LogLevel","instance","activeLogLevel","set","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","json","entry","measure","f","subscribers","Warning","slice","subscriber","console","profile","profileEnd","ConsoleListener","format","warn","error","FunctionListener","SPRequestExecutorUndefinedException","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__pnp_logging__","__WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__","__WEBPACK_IMPORTED_MODULE_0__sprequestexecutorclient__","__WEBPACK_IMPORTED_MODULE_1__exceptions__","__WEBPACK_IMPORTED_MODULE_2__sprestaddin__","SPRequestExecutorClient","__WEBPACK_IMPORTED_MODULE_0__pnp_common__","convertToResponse","spResponse","responseHeaders","Headers","h","body","statusCode","Response","status","statusText","fetch","options","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","entries","next","done","requestOptions","success","response","binaryStringRequestBody","executeAsync","SPRestAddIn","sp","__WEBPACK_IMPORTED_MODULE_1__pnp_sp__","__WEBPACK_IMPORTED_MODULE_2__pnp_common__","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","query","configure","_options","global","extractWebUrl","candidateUrl","substr","spExtractODataId","candidate","__metadata","id","SPODataIdException","spGetEntityUrl","entity","__WEBPACK_IMPORTED_MODULE_1__pnp_common__","uri","__WEBPACK_IMPORTED_MODULE_2__pnp_logging__","setup","toAbsoluteUrl","SPRuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","SPRest","Site","Web","PrincipalType","__WEBPACK_IMPORTED_MODULE_3__pnp_odata__","SPBatchParseException","MaxCommentLengthException","NotSupportedInBatchException","operation","APIUrlException","FetchClient","SPODataEntityParserImpl","SPODataEntityArrayParserImpl","SPRuntimeConfigImpl","spPart","pageContext","web","absoluteUrl","fetchClientFactory","CachedDigest","digests","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","Accept","Content-Type","fetchRaw","cache","credentials","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","HttpClient","_impl","_digestCache","opts","has","toUpperCase","digest","rawHeaders","retry","ctx","delay","attempts","retryCount","retryContext","post","patch","SharePointQueryable","urlStr","lastIndexOf","_parentUrl","_url","q","_query","as","toUrlAndQuery","aliasedParams","toUrl","match","labelName","getParent","batch","parentUrl","parent","inBatch","clone","additionalPath","includeBatch","hasBatch","toRequestContext","verb","parser","pipeline","default","dependencyDispose","addBatchDependency","batchDependency","cachingOptions","_cachingOptions","clientFactory","isBatched","isCached","_useCaching","requestAbsoluteUrl","requestId","SharePointQueryableCollection","select","selects","expand","expands","orderBy","ascending","asc","skip","top","SharePointQueryableInstance","SiteUsers","getByEmail","email","SiteUser","getById","getByLoginName","loginName","su","concat","removeById","postCore","removeByLoginName","type","LoginName","SiteGroups","update","properties","postBody","X-HTTP-Method","user","CurrentUser","ControlMode","group","Id","getByName","groupName","SiteGroup","sg","retGroup","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinitions","RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","Description","Name","Order","definition","retDef","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType$1","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","CheckinType","SharePointQueryableSecurable","getUserEffectivePermissions","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","getAs","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","postAsCore","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","login","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","g","Guest","getShareObjectWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","SharePointQueryableShareableFile","SharePointQueryableShareableFolder","shareEverything","LimitedWebPartManager","WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","moveTo","zoneId","zoneIndex","close","open","Folders","Folder","folder","Files","eTag","IF-Match","recycle","listItemAllFields","Item","ContentTypes","ct","ContentType","addAvailableContentType","contentTypeId","contentType","additionalSettings","Group","StringValue","FieldLinks","fl","FieldLink","AttachmentFiles","AttachmentFile","content","file","addMultiple","files","chain","getText","getBlob","getBuffer","getJSON","setContent","Views","getByTitle","title","personalView","PersonalView","Title","view","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","Fields","Field","getByInternalNameOrTitle","createFieldAsXml","info","SchemaXml","parameters","fieldType","addText","maxLength","props","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","Forms","Form","Subscriptions","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","resource","patchCore","deleteCore","UserCustomActions","uca","UserCustomAction","action","Lists","List","list","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","ListData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","getPaged","PagedItemCollectionParser","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","promise","item","candidatelistItemEntityTypeFullName","File","ItemUpdatedParser","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","formValues","newDocumentUpdate","bNewDocumentUpdate","PagedItemCollection","nextUrl","getNext","hasNext","handleError","__next","parseODataJSON","odata.etag","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","moveOperations","MoveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","self","fileSize","size","blockCount","parseInt","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","parseFloat","fileOffset","ServerRelativeUrl","versionId","Version","deleteAll","deleteById","deleteByLabel","label","restoreByLabel","TemplateFileType","SortDirection","NavigationNodes","node","NavigationNode","visible","IsVisible","Url","moveAfter","nodeId","previousNodeId","Navigation","SearchQueryBuilder","queryText","extendQuery","Querytext","queryTemplate","QueryTemplate","sourceId","SourceId","EnableInterleaving","EnableStemming","TrimDuplicates","trimDuplicatesIncludeId","TrimDuplicatesIncludeId","EnableNicknames","EnableFQL","EnablePhonetic","BypassResultTypes","ProcessBestBets","EnableQueryRules","EnableSorting","GenerateBlockRankLog","rankingModelId","RankingModelId","startRow","StartRow","rowLimit","RowLimit","rowsPerPage","RowsPerPage","selectProperties","SelectProperties","culture","Culture","timeZoneId","TimeZoneId","refinementFilters","filters","RefinementFilters","refiners","Refiners","hiddenConstraints","constraints","HiddenConstraints","sortList","sorts","SortList","timeout","milliseconds","Timeout","hithighlightedProperties","HitHighlightedProperties","clientType","ClientType","personalizationData","PersonalizationData","resultsURL","ResultsUrl","queryTag","tags","QueryTag","Properties","ProcessPersonalFavorites","queryTemplatePropertiesUrl","QueryTemplatePropertiesUrl","reorderingRules","rules","ReorderingRules","hitHighlightedMultivaluePropertyLimit","limit","HitHighlightedMultivaluePropertyLimit","EnableOrderingHitHighlightedProperty","collapseSpecification","spec","CollapseSpecification","uiLanguage","lang","UILanguage","desiredSnippetLength","len","DesiredSnippetLength","maxSnippetLength","MaxSnippetLength","summaryLength","SummaryLength","toSearchQuery","part","Search","execute","formattedBody","fixupProp","HithighlightedProperties","SearchResults","prop","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","res","cell","Value","writable","ReorderingRuleMatchType","QueryPropertyValueType","SearchSuggest","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","mapQueryToQueryString","SearchSuggestResult","querytext","personalCount","preQuery","hitHighlighting","capitalize","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","SPBatch","executeImpl","batchId","requests","client","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","_parseResponse","responses","statusRegExp","lines","split","state","line","trim","parts","Features","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","RelatedItemManagerImpl","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","Webs","webPath","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","WebInfos","fromUrl","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFileByServerRelativeUrl","fileRelativeUrl","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","filename","progId","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","openWebById","webId","UserProfileQuery","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","buffer","String","fromCharCode","Uint16Array","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","emailIDs","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","_baseUrl","searchSuggest","finalQuery","Function","eval","window","ODataValue","ODataValueParserImpl","returnResult","setResult","hasResult","_next","shift","pipe","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","ODataParserBase","ODataDefaultParser","TextFileParser","BlobFileParser","JSONFileParser","BufferFileParser","PipelineMethods","ODataQueryable","ODataBatch","CachingOptions","storeName","storage","local","session","CachingParserWrapper","_parser","_cacheOptions","ProcessHttpClientResponseException","AlreadyInBatchException","txt","ok","responseBody","ODataRawParserImpl","arrayBuffer","logStart","caching","cacheOptions","send","logEnd","_batch","pathPart","usingCaching","addDependency","_batchId","_requests","_dependencies","resolver","all"],"mappings":"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","file":"sp-addinhelpers.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","// TODO:: banner\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = __extends;\n/* unused harmony export __assign */\n/* unused harmony export __rest */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = __decorate;\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* unused harmony export __awaiter */\n/* unused harmony export __generator */\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Util; });\n/* unused harmony export readBlobAsText */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return readBlobAsArrayBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Dictionary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return mergeOptions; });\n/* unused harmony export deprecated */\n/* unused harmony export beta */\n/* unused harmony export FunctionExpectedException */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return UrlException; });\n/* unused harmony export CommonRuntimeConfigKeys */\n/* unused harmony export RuntimeConfigImpl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return RuntimeConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return mergeHeaders; });\n/* unused harmony export PnPClientStorageWrapper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PnPClientStorage; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_logging__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n\n\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    /**\r\n     * Gets a count of the items currently in the dictionary\r\n     */\r\n    Dictionary.prototype.count = function () {\r\n        return this.keys.length;\r\n    };\r\n    return Dictionary;\r\n}());\n\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = function (context, method) {\r\n        var params = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            params[_i - 2] = arguments[_i];\r\n        }\r\n        return function () {\r\n            method.apply(context, params);\r\n        };\r\n    };\r\n    /**\r\n     * Tests if a url param exists\r\n     *\r\n     * @param name The name of the url paramter to check\r\n     */\r\n    Util.urlParamExists = function (name) {\r\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\r\n        return regex.test(location.search);\r\n    };\r\n    /**\r\n     * Gets a url param value by name\r\n     *\r\n     * @param name The name of the paramter for which we want the value\r\n     */\r\n    Util.getUrlParamByName = function (name) {\r\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\r\n        var results = regex.exec(location.search);\r\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n    };\r\n    /**\r\n     * Gets a url param by name and attempts to parse a bool value\r\n     *\r\n     * @param name The name of the paramter for which we want the boolean value\r\n     */\r\n    Util.getUrlParamBoolByName = function (name) {\r\n        var p = this.getUrlParamByName(name);\r\n        var isFalse = (p === \"\" || /false|0/i.test(p));\r\n        return !isFalse;\r\n    };\r\n    /**\r\n     * Inserts the string s into the string target as the index specified by index\r\n     *\r\n     * @param target The string into which we will insert s\r\n     * @param index The location in target to insert s (zero based)\r\n     * @param s The string to insert into target at position index\r\n     */\r\n    Util.stringInsert = function (target, index, s) {\r\n        if (index > 0) {\r\n            return target.substring(0, index) + s + target.substring(index, target.length);\r\n        }\r\n        return s + target;\r\n    };\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = function (date, interval, units) {\r\n        var ret = new Date(date); // don't change original date\r\n        switch (interval.toLowerCase()) {\r\n            case \"year\":\r\n                ret.setFullYear(ret.getFullYear() + units);\r\n                break;\r\n            case \"quarter\":\r\n                ret.setMonth(ret.getMonth() + 3 * units);\r\n                break;\r\n            case \"month\":\r\n                ret.setMonth(ret.getMonth() + units);\r\n                break;\r\n            case \"week\":\r\n                ret.setDate(ret.getDate() + 7 * units);\r\n                break;\r\n            case \"day\":\r\n                ret.setDate(ret.getDate() + units);\r\n                break;\r\n            case \"hour\":\r\n                ret.setTime(ret.getTime() + units * 3600000);\r\n                break;\r\n            case \"minute\":\r\n                ret.setTime(ret.getTime() + units * 60000);\r\n                break;\r\n            case \"second\":\r\n                ret.setTime(ret.getTime() + units * 1000);\r\n                break;\r\n            default:\r\n                ret = undefined;\r\n                break;\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * Loads a stylesheet into the current page\r\n     *\r\n     * @param path The url to the stylesheet\r\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\r\n     */\r\n    Util.loadStylesheet = function (path, avoidCache) {\r\n        if (avoidCache) {\r\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\r\n        }\r\n        var head = document.getElementsByTagName(\"head\");\r\n        if (head.length > 0) {\r\n            var e = document.createElement(\"link\");\r\n            head[0].appendChild(e);\r\n            e.setAttribute(\"type\", \"text/css\");\r\n            e.setAttribute(\"rel\", \"stylesheet\");\r\n            e.setAttribute(\"href\", path);\r\n        }\r\n    };\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = function () {\r\n        var paths = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            paths[_i] = arguments[_i];\r\n        }\r\n        return paths\r\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\r\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n            .join(\"/\")\r\n            .replace(/\\\\/g, \"/\");\r\n    };\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = function (chars) {\r\n        var text = new Array(chars);\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < chars; i++) {\r\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return text.join(\"\");\r\n    };\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    /* tslint:disable no-bitwise */\r\n    Util.getGUID = function () {\r\n        var d = new Date().getTime();\r\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return guid;\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param candidateFunction The thing to test for being a function\r\n     */\r\n    Util.isFunction = function (candidateFunction) {\r\n        return typeof candidateFunction === \"function\";\r\n    };\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = function (obj) {\r\n        return typeof obj !== \"undefined\" && obj !== null;\r\n    };\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = function (array) {\r\n        if (Array.isArray) {\r\n            return Array.isArray(array);\r\n        }\r\n        return array && typeof array.length === \"number\" && array.constructor === Array;\r\n    };\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = function (s) {\r\n        return typeof s === \"undefined\" || s === null || s.length < 1;\r\n    };\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = function (target, source, noOverwrite) {\r\n        if (noOverwrite === void 0) { noOverwrite = false; }\r\n        if (!Util.objectDefinedNotNull(source)) {\r\n            return target;\r\n        }\r\n        // ensure we don't overwrite things we don't want overwritten\r\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n        return Object.getOwnPropertyNames(source)\r\n            .filter(function (v) { return check(target, v); })\r\n            .reduce(function (t, v) {\r\n            t[v] = source[v];\r\n            return t;\r\n        }, target);\r\n    };\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = function (url) {\r\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n    };\r\n    return Util;\r\n}());\n\nfunction mergeOptions(target, source) {\r\n    if (Util.objectDefinedNotNull(source)) {\r\n        var headers = Util.extend(target.headers || {}, source.headers);\r\n        target = Util.extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\n\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Warning,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Warning,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\nvar FunctionExpectedException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FunctionExpectedException, _super);\r\n    function FunctionExpectedException(msg) {\r\n        if (msg === void 0) { msg = \"Expected a function.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"FunctionExpectedException\";\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return FunctionExpectedException;\r\n}(Error));\r\nvar UrlException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nvar CommonRuntimeConfigKeys = /** @class */ (function () {\r\n    function CommonRuntimeConfigKeys() {\r\n    }\r\n    CommonRuntimeConfigKeys.defaultCachingStore = \"defaultCachingStore\";\r\n    CommonRuntimeConfigKeys.defaultCachingTimeoutSeconds = \"defaultCachingTimeoutSeconds\";\r\n    CommonRuntimeConfigKeys.globalCacheDisable = \"globalCacheDisable\";\r\n    CommonRuntimeConfigKeys.enableCacheExpiration = \"enableCacheExpiration\";\r\n    CommonRuntimeConfigKeys.cacheExpirationIntervalMilliseconds = \"cacheExpirationIntervalMilliseconds\";\r\n    CommonRuntimeConfigKeys.spfxContext = \"spfxContext\";\r\n    return CommonRuntimeConfigKeys;\r\n}());\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(CommonRuntimeConfigKeys.defaultCachingStore, \"session\");\r\n        this._v.add(CommonRuntimeConfigKeys.defaultCachingTimeoutSeconds, 60);\r\n        this._v.add(CommonRuntimeConfigKeys.globalCacheDisable, false);\r\n        this._v.add(CommonRuntimeConfigKeys.enableCacheExpiration, false);\r\n        this._v.add(CommonRuntimeConfigKeys.cacheExpirationIntervalMilliseconds, 750);\r\n        this._v.add(CommonRuntimeConfigKeys.spfxContext, null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.defaultCachingStore);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.defaultCachingTimeoutSeconds);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.globalCacheDisable);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.enableCacheExpiration);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.cacheExpirationIntervalMilliseconds);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.spfxContext);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].write(\"Enabling cache expiration.\", __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = Util.dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].write(\"Called cache expiration handler.\", __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Verbose);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(Util.getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\" /* Logger */].log({\r\n                data: e,\r\n                level: __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* LogLevel */].Error,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\n\n//# sourceMappingURL=common.es5.js.map\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LogLevel; });\n/* unused harmony export ConsoleListener */\n/* unused harmony export FunctionListener */\n/**\r\n * A set of logging levels\r\n *\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = LogLevel.Verbose; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = LogLevel.Verbose; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\r\n     *\r\n     * @param name The name of this profile boundary\r\n     * @param f The function to execute and track within this performance boundary\r\n     */\r\n    Logger.measure = function (name, f) {\r\n        return Logger.instance.measure(name, f);\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = LogLevel.Verbose; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\r\n            return;\r\n        }\r\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n    };\r\n    LoggerImpl.prototype.measure = function (name, f) {\r\n        console.profile(name);\r\n        try {\r\n            return f();\r\n        }\r\n        finally {\r\n            console.profileEnd();\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * Implementation of ILogListener which logs to the browser console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case LogLevel.Verbose:\r\n            case LogLevel.Info:\r\n                console.log(msg);\r\n                break;\r\n            case LogLevel.Warning:\r\n                console.warn(msg);\r\n                break;\r\n            case LogLevel.Error:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of ILogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\n\n//# sourceMappingURL=logging.es5.js.map\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPRequestExecutorUndefinedException; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_logging__ = __webpack_require__(2);\n\r\n\r\nvar SPRequestExecutorUndefinedException = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](SPRequestExecutorUndefinedException, _super);\r\n    function SPRequestExecutorUndefinedException() {\r\n        var _this = this;\r\n        var msg = [\r\n            \"SP.RequestExecutor is undefined. \",\r\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\r\n        ].join(\" \");\r\n        _this = _super.call(this, msg) || this;\r\n        _this.name = \"SPRequestExecutorUndefinedException\";\r\n        __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return SPRequestExecutorUndefinedException;\r\n}(Error));\r\n\r\n//# sourceMappingURL=exceptions.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__ = __webpack_require__(5);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPRequestExecutorClient\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPRequestExecutorUndefinedException\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPRestAddIn\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"sp\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__[\"d\"]; });\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sprequestexecutorclient__ = __webpack_require__(6);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__sprequestexecutorclient__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exceptions__ = __webpack_require__(3);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__exceptions__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sprestaddin__ = __webpack_require__(7);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__sprestaddin__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_2__sprestaddin__[\"b\"]; });\n\r\n\r\n\r\n//# sourceMappingURL=addinhelpers.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPRequestExecutorClient; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exceptions__ = __webpack_require__(3);\n\r\n\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (typeof spResponse.headers !== \"undefined\") {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\r\n            throw new __WEBPACK_IMPORTED_MODULE_1__exceptions__[\"a\" /* SPRequestExecutorUndefinedException */]();\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\n\r\n//# sourceMappingURL=sprequestexecutorclient.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPRestAddIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sp; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_sp__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_common__ = __webpack_require__(1);\n\r\n\r\n\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(__WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"b\" /* Site */], addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(__WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"c\" /* Web */], addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"e\" /* Util */].isUrlAbsolute(addInWebUrl)) {\r\n            throw new __WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"d\" /* UrlException */](\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!__WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"e\" /* Util */].isUrlAbsolute(hostWebUrl)) {\r\n            throw new __WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"d\" /* UrlException */](\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = __WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"e\" /* Util */].combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(__WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"a\" /* SPRest */]));\r\n\r\nvar sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export spExtractODataId */\n/* unused harmony export spODataEntity */\n/* unused harmony export spODataEntityArray */\n/* unused harmony export SharePointQueryable */\n/* unused harmony export SharePointQueryableInstance */\n/* unused harmony export SharePointQueryableCollection */\n/* unused harmony export SharePointQueryableSecurable */\n/* unused harmony export FileFolderShared */\n/* unused harmony export SharePointQueryableShareable */\n/* unused harmony export SharePointQueryableShareableFile */\n/* unused harmony export SharePointQueryableShareableFolder */\n/* unused harmony export SharePointQueryableShareableItem */\n/* unused harmony export SharePointQueryableShareableWeb */\n/* unused harmony export CheckinType */\n/* unused harmony export WebPartsPersonalizationScope */\n/* unused harmony export MoveOperations */\n/* unused harmony export TemplateFileType */\n/* unused harmony export File */\n/* unused harmony export Files */\n/* unused harmony export Folder */\n/* unused harmony export Folders */\n/* unused harmony export HttpClient */\n/* unused harmony export Item */\n/* unused harmony export Items */\n/* unused harmony export PagedItemCollection */\n/* unused harmony export NavigationNodes */\n/* unused harmony export NavigationNode */\n/* unused harmony export List */\n/* unused harmony export Lists */\n/* unused harmony export sp */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPRest; });\n/* unused harmony export RoleDefinitionBindings */\n/* unused harmony export Search */\n/* unused harmony export SearchQueryBuilder */\n/* unused harmony export SearchResults */\n/* unused harmony export SortDirection */\n/* unused harmony export ReorderingRuleMatchType */\n/* unused harmony export QueryPropertyValueType */\n/* unused harmony export SearchBuiltInSourceId */\n/* unused harmony export SearchSuggest */\n/* unused harmony export SearchSuggestResult */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Site; });\n/* unused harmony export UtilityMethod */\n/* unused harmony export WebPartDefinitions */\n/* unused harmony export WebPartDefinition */\n/* unused harmony export WebPart */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Web; });\n/* unused harmony export ControlMode */\n/* unused harmony export FieldTypes */\n/* unused harmony export DateTimeFieldFormatType */\n/* unused harmony export AddFieldOptions */\n/* unused harmony export CalendarType */\n/* unused harmony export UrlFieldFormatType */\n/* unused harmony export PermissionKind */\n/* unused harmony export PrincipalType */\n/* unused harmony export PrincipalSource */\n/* unused harmony export RoleType */\n/* unused harmony export PageType */\n/* unused harmony export SharingLinkKind */\n/* unused harmony export SharingRole */\n/* unused harmony export SharingOperationStatusCode */\n/* unused harmony export SPSharedObjectType */\n/* unused harmony export SharingDomainRestrictionMode */\n/* unused harmony export RenderListDataOptions */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_odata__ = __webpack_require__(10);\n\n\n\n\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (candidateUrl === null) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nvar SPBatchParseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPBatchParseException, _super);\r\n    function SPBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"BatchParseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return SPBatchParseException;\r\n}(Error));\r\nvar SPODataIdException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPODataIdException, _super);\r\n    function SPODataIdException(data, msg) {\r\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"ODataIdException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({ data: data, level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return SPODataIdException;\r\n}(Error));\r\nvar MaxCommentLengthException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(MaxCommentLengthException, _super);\r\n    function MaxCommentLengthException(msg) {\r\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"MaxCommentLengthException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return MaxCommentLengthException;\r\n}(Error));\r\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NotSupportedInBatchException, _super);\r\n    function NotSupportedInBatchException(operation) {\r\n        if (operation === void 0) { operation = \"This operation\"; }\r\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\r\n        _this.name = \"NotSupportedInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return NotSupportedInBatchException;\r\n}(Error));\r\nvar APIUrlException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(APIUrlException, _super);\r\n    function APIUrlException(msg) {\r\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"APIUrlException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return APIUrlException;\r\n}(Error));\n\nfunction spExtractODataId(candidate) {\r\n    if (candidate.hasOwnProperty(\"odata.id\")) {\r\n        return candidate[\"odata.id\"];\r\n    }\r\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\r\n        return candidate.__metadata.id;\r\n    }\r\n    else {\r\n        throw new SPODataIdException(candidate);\r\n    }\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(spGetEntityUrl(d), null);\r\n            return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* ODataParserBase */]));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spGetEntityUrl(v), null);\r\n                return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* ODataParserBase */]));\r\nfunction spGetEntityUrl(entity) {\r\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\r\n        // we are dealign with minimal metadata (default)\r\n        return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\r\n    }\r\n    else if (entity.hasOwnProperty(\"__metadata\")) {\r\n        // we are dealing with verbose, which has an absolute uri\r\n        return entity.__metadata.uri;\r\n    }\r\n    else {\r\n        // we are likely dealing with nometadata, so don't error but we won't be able to\r\n        // chain off these objects\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Warning);\r\n        return \"\";\r\n    }\r\n}\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\n/**\r\n * Makes requests using the fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\n\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\" /* RuntimeConfig */].extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (typeof spPart !== \"undefined\" && typeof spPart.headers !== \"undefined\") {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== null && typeof spPart.baseUrl !== \"undefined\") {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext !== null) {\r\n                return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== null && typeof spPart.fetchClientFactory !== \"undefined\") {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"a\" /* Dictionary */]();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== null) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"e\" /* ODataDefaultParser */]();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.add(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n        this._impl = SPRuntimeConfig.fetchClientFactory();\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    HttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* mergeHeaders */])(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n        }\r\n        opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                var index = url.indexOf(\"_api/\");\r\n                if (index < 0) {\r\n                    throw new APIUrlException();\r\n                }\r\n                var webUrl = url.substr(0, index);\r\n                return this._digestCache.getDigest(webUrl)\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    HttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* mergeHeaders */])(rawHeaders, options.headers);\r\n        options = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    HttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    HttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return HttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (typeof global._spPageContextInfo !== \"undefined\") {\r\n            // operating in classic pages\r\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\r\n                return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\r\n                return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (typeof global.location !== \"undefined\") {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            var urlStr = baseUrl;\r\n            if (__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = urlStr;\r\n                _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(urlStr, path);\r\n            }\r\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = urlStr.lastIndexOf(\"/\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                path = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(urlStr.slice(index), path);\r\n                _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = urlStr.lastIndexOf(\"(\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(urlStr, path);\r\n            }\r\n        }\r\n        else {\r\n            var q = baseUrl;\r\n            _this._parentUrl = q._url;\r\n            _this._options = q._options;\r\n            var target = q._query.get(\"@target\");\r\n            if (target !== null) {\r\n                _this._query.add(\"@target\", target);\r\n            }\r\n            _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(_this._parentUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n         * Creates a new instance of the supplied factory and extends this into that new instance\r\n         *\r\n         * @param factory constructor for the new SharePointQueryable\r\n         */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"a\" /* Dictionary */]();\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Verbose);\r\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        // inlude our explicitly set query string params\r\n        aliasedParams.merge(this._query);\r\n        if (aliasedParams.count() > 0) {\r\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path);\r\n        parent.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            parent.query.add(\"@target\", target);\r\n        }\r\n        if (typeof batch !== \"undefined\") {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        if (pipeline === void 0) { pipeline = __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* PipelineMethods */].default; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"g\" /* mergeOptions */])(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new HttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataQueryable */]));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields ascending\r\n     *\r\n     * @param orderby The name of the field to sort on\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var keys = this._query.getKeys();\r\n        var query = [];\r\n        var asc = ascending ? \" asc\" : \" desc\";\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"$orderby\") {\r\n                query.push(this._query.get(\"$orderby\"));\r\n                break;\r\n            }\r\n        }\r\n        query.push(\"\" + orderBy + asc);\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this._query.add(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteUsers, _super);\r\n    /**\r\n     * Creates a new instance of the SiteUsers class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\r\n     */\r\n    function SiteUsers(baseUrl, path) {\r\n        if (path === void 0) { path = \"siteusers\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\r\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers, null).postCore({\r\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteUser, _super);\r\n    function SiteUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this user instance with the supplied properties\r\n    *\r\n    * @param properties A plain object of property names and values to update for the user\r\n    */\r\n    SiteUser.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this user\r\n     *\r\n     */\r\n    SiteUser.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(CurrentUser, _super);\r\n    function CurrentUser(baseUrl, path) {\r\n        if (path === void 0) { path = \"currentuser\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteGroups, _super);\r\n    /**\r\n     * Creates a new instance of the SiteGroups class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\r\n     */\r\n    function SiteGroups(baseUrl, path) {\r\n        if (path === void 0) { path = \"sitegroups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this group instance with the supplied properties\r\n    *\r\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\r\n    */\r\n    /* tslint:disable no-string-literal */\r\n    SiteGroup.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retGroup = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                group: retGroup,\r\n            };\r\n        });\r\n    };\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleAssignments, _super);\r\n    /**\r\n     * Creates a new instance of the RoleAssignments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\r\n     */\r\n    function RoleAssignments(baseUrl, path) {\r\n        if (path === void 0) { path = \"roleassignments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this role assignment\r\n     *\r\n     */\r\n    RoleAssignment.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleDefinitions, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\r\n     *\r\n     */\r\n    function RoleDefinitions(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            BasePermissions: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\r\n            properties[\"BasePermissions\"] = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\r\n        }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (properties.hasOwnProperty(\"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Deletes this role definition\r\n     *\r\n     */\r\n    RoleDefinition.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleDefinitionBindings, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitionBindings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\r\n     */\r\n    function RoleDefinitionBindings(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").getAs().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postAsCore({\r\n            body: JSON.stringify({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (typeof emailData !== \"undefined\") {\r\n                postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postAsCore({\r\n                body: JSON.stringify(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\r\n                postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore({\r\n            body: JSON.stringify({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postAsCore({\r\n            body: JSON.stringify({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postAsCore({\r\n            body: JSON.stringify({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postAsCore({\r\n            body: JSON.stringify({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: JSON.stringify({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (typeof group !== \"undefined\" && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: JSON.stringify(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(spGetEntityUrl(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebPart, _super);\r\n    /**\r\n     * Creates a new instance of the WebPart class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\r\n     */\r\n    function WebPart(baseUrl, path) {\r\n        if (path === void 0) { path = \"webpart\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Folders, _super);\r\n    /**\r\n     * Creates a new instance of the Folders class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Folders(baseUrl, path) {\r\n        if (path === void 0) { path = \"folders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Folder, _super);\r\n    function Folder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Folder.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.Folder\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                folder: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ContentTypes, _super);\r\n    /**\r\n     * Creates a new instance of the ContentTypes class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\r\n     */\r\n    function ContentTypes(baseUrl, path) {\r\n        if (path === void 0) { path = \"contenttypes\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes, \"addAvailableContentType\").postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ContentType, _super);\r\n    function ContentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Delete this content type\r\n     */\r\n    ContentType.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FieldLinks, _super);\r\n    /**\r\n     * Creates a new instance of the ContentType class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\r\n     */\r\n    function FieldLinks(baseUrl, path) {\r\n        if (path === void 0) { path = \"fieldlinks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AttachmentFiles, _super);\r\n    /**\r\n     * Creates a new instance of the AttachmentFiles class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\r\n     */\r\n    function AttachmentFiles(baseUrl, path) {\r\n        if (path === void 0) { path = \"AttachmentFiles\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"j\" /* TextFileParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"a\" /* BlobFileParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BufferFileParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* JSONFileParser */]());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Views, _super);\r\n    /**\r\n     * Creates a new instance of the Views class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Views(baseUrl, path) {\r\n        if (path === void 0) { path = \"views\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, additionalSettings));\r\n        return this.clone(Views, null).postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(View, _super);\r\n    function View() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this view intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the view\r\n     */\r\n    View.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this view\r\n     *\r\n     */\r\n    View.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ViewFields, _super);\r\n    function ViewFields(baseUrl, path) {\r\n        if (path === void 0) { path = \"viewfields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\r\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Fields, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Fields(baseUrl, path) {\r\n        if (path === void 0) { path = \"fields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param title The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n                \"__metadata\": {\r\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\r\n                },\r\n            }, info),\r\n        });\r\n        return this.clone(Fields, \"createfieldasxml\").postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.clone(Fields, null).postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(props, properties));\r\n    };\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Field, _super);\r\n    function Field() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this fields\r\n     *\r\n     */\r\n    Field.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Forms, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Forms(baseUrl, path) {\r\n        if (path === void 0) { path = \"forms\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Subscriptions, _super);\r\n    /**\r\n     * Creates a new instance of the Subscriptions class\r\n     *\r\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\r\n     */\r\n    function Subscriptions(baseUrl, path) {\r\n        if (path === void 0) { path = \"subscriptions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var subscription = new Subscription(this);\r\n        subscription.concat(\"('\" + subscriptionId + \"')\");\r\n        return subscription;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UserCustomActions, _super);\r\n    /**\r\n     * Creates a new instance of the UserCustomActions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\r\n     */\r\n    function UserCustomActions(baseUrl, path) {\r\n        if (path === void 0) { path = \"usercustomactions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions, \"clear\").postCore();\r\n    };\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Updates this user custom action with the supplied properties\r\n    *\r\n    * @param properties An information object of property names and values to update for this user custom action\r\n    */\r\n    UserCustomAction.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                action: _this,\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Lists, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Lists(baseUrl, path) {\r\n        if (path === void 0) { path = \"lists\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new NotSupportedInBatchException(\"The ensure list method\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\r\n            }, overrideParameters),\r\n            parameters: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\r\n            }, parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: JSON.stringify(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Items, _super);\r\n    /**\r\n     * Creates a new instance of the Items class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Items(baseUrl, path) {\r\n        if (path === void 0) { path = \"items\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Item by id\r\n     *\r\n     * @param id The integer id of the item to retrieve\r\n     */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     */\r\n    Items.prototype.skip = function (skip) {\r\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.getAs(new PagedItemCollectionParser());\r\n    };\r\n    //\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": listItemEntityType },\r\n            }, properties));\r\n            var promise = _this.clone(Items, null).postAsCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Item, _super);\r\n    function Item() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n                    \"__metadata\": { \"type\": listItemEntityType },\r\n                }, properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Delete this item\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    Item.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i._query.add(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(nextUrl, results) {\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* ODataParserBase */]));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* ODataParserBase */]));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Files, _super);\r\n    /**\r\n     * Creates a new instance of the Files class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Files(baseUrl, path) {\r\n        if (path === void 0) { path = \"files\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"j\" /* TextFileParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"a\" /* BlobFileParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BufferFileParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* JSONFileParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (typeof progress === \"undefined\") {\r\n            progress = function () { return null; };\r\n        }\r\n        var self = this;\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        }).then(function (_) {\r\n            return self;\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false).postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false).postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postAsCore({ body: fragment }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(response.ServerRelativeUrl),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Versions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Versions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Version, _super);\r\n    function Version() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Version.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = JSON.stringify({\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        });\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = JSON.stringify({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this node based on the supplied properties\r\n     *\r\n     * @param properties The hash of key/value pairs to update\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Navigation, _super);\r\n    /**\r\n     * Creates a new instance of the Navigation class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\r\n     */\r\n    function Navigation(baseUrl, path) {\r\n        if (path === void 0) { path = \"navigation\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Navigation;\r\n}(SharePointQueryable));\n\n/**\r\n * Allows for the fluent construction of search queries\r\n */\r\nvar SearchQueryBuilder = /** @class */ (function () {\r\n    function SearchQueryBuilder(queryText, _query) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (_query === void 0) { _query = {}; }\r\n        this._query = _query;\r\n        if (typeof queryText === \"string\" && queryText.length > 0) {\r\n            this.extendQuery({ Querytext: queryText });\r\n        }\r\n    }\r\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (queryTemplate === void 0) { queryTemplate = {}; }\r\n        return new SearchQueryBuilder(queryText, queryTemplate);\r\n    };\r\n    SearchQueryBuilder.prototype.text = function (queryText) {\r\n        return this.extendQuery({ Querytext: queryText });\r\n    };\r\n    SearchQueryBuilder.prototype.template = function (template) {\r\n        return this.extendQuery({ QueryTemplate: template });\r\n    };\r\n    SearchQueryBuilder.prototype.sourceId = function (id) {\r\n        return this.extendQuery({ SourceId: id });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableInterleaving: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableStemming: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\r\n        get: function () {\r\n            return this.extendQuery({ TrimDuplicates: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\r\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableNicknames: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableFQL: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnablePhonetic: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\r\n        get: function () {\r\n            return this.extendQuery({ BypassResultTypes: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessBestBets: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableQueryRules: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableSorting: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\r\n        get: function () {\r\n            return this.extendQuery({ GenerateBlockRankLog: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\r\n        return this.extendQuery({ RankingModelId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.startRow = function (n) {\r\n        return this.extendQuery({ StartRow: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\r\n        return this.extendQuery({ RowLimit: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\r\n        return this.extendQuery({ RowsPerPage: n });\r\n    };\r\n    SearchQueryBuilder.prototype.selectProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SelectProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.culture = function (culture) {\r\n        return this.extendQuery({ Culture: culture });\r\n    };\r\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\r\n        return this.extendQuery({ TimeZoneId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.refinementFilters = function () {\r\n        var filters = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filters[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ RefinementFilters: filters });\r\n    };\r\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\r\n        return this.extendQuery({ Refiners: refiners });\r\n    };\r\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\r\n        return this.extendQuery({ HiddenConstraints: constraints });\r\n    };\r\n    SearchQueryBuilder.prototype.sortList = function () {\r\n        var sorts = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sorts[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SortList: sorts });\r\n    };\r\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\r\n        return this.extendQuery({ Timeout: milliseconds });\r\n    };\r\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ HitHighlightedProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\r\n        return this.extendQuery({ ClientType: clientType });\r\n    };\r\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\r\n        return this.extendQuery({ PersonalizationData: data });\r\n    };\r\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\r\n        return this.extendQuery({ ResultsUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.queryTag = function () {\r\n        var tags = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tags[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ QueryTag: tags });\r\n    };\r\n    SearchQueryBuilder.prototype.properties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ Properties: properties });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessPersonalFavorites: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\r\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.reorderingRules = function () {\r\n        var rules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            rules[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ ReorderingRules: rules });\r\n    };\r\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\r\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\r\n        return this.extendQuery({ CollapseSpecification: spec });\r\n    };\r\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\r\n        return this.extendQuery({ UILanguage: lang });\r\n    };\r\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\r\n        return this.extendQuery({ DesiredSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\r\n        return this.extendQuery({ MaxSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\r\n        return this.extendQuery({ SummaryLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\r\n        return this._query;\r\n    };\r\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\r\n        this._query = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(this._query, part);\r\n        return this;\r\n    };\r\n    return SearchQueryBuilder;\r\n}());\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Search, _super);\r\n    /**\r\n     * Creates a new instance of the Search class\r\n     *\r\n     * @param baseUrl The url for the search context\r\n     * @param query The SearchQuery object to execute\r\n     */\r\n    function Search(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/postquery\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * .......\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = JSON.stringify({\r\n            request: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\r\n            }, formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        if (prop.hasOwnProperty(\"results\")) {\r\n            return prop;\r\n        }\r\n        return { results: prop };\r\n    };\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: false,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SearchSuggest, _super);\r\n    function SearchSuggest(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/suggest\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        if (query.hasOwnProperty(\"count\")) {\r\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"personalCount\")) {\r\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"preQuery\")) {\r\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\r\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"capitalize\")) {\r\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"culture\")) {\r\n            this.query.add(\"culture\", query.culture.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"stemming\")) {\r\n            this.query.add(\"enablestemming\", query.stemming.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"includePeople\")) {\r\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"queryRules\")) {\r\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"prefixMatch\")) {\r\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\r\n        }\r\n    };\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nvar SearchSuggestResult = /** @class */ (function () {\r\n    function SearchSuggestResult(json) {\r\n        if (json.hasOwnProperty(\"suggest\")) {\r\n            // verbose\r\n            this.PeopleNames = json.suggest.PeopleNames.results;\r\n            this.PersonalResults = json.suggest.PersonalResults.results;\r\n            this.Queries = json.suggest.Queries.results;\r\n        }\r\n        else {\r\n            this.PeopleNames = json.PeopleNames;\r\n            this.PersonalResults = json.PersonalResults;\r\n            this.Queries = json.Queries;\r\n        }\r\n    }\r\n    return SearchSuggestResult;\r\n}());\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"Resolving empty batch.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new HttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].isUrlAbsolute(reqInfo.url) ? reqInfo.url : __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(absoluteRequestUrl, reqInfo.url);\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Verbose);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof castHeaders[\"X-HTTP-Method\"] !== \"undefined\") {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* mergeHeaders */])(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n            return client.fetch(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(_this._parseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new SPBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Verbose);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.prototype._parseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new SPBatchParseException(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new SPBatchParseException(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new SPBatchParseException(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"d\" /* ODataBatch */]));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Features, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Features(baseUrl, path) {\r\n        if (path === void 0) { path = \"features\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"add\").postCore({\r\n            body: JSON.stringify({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"remove\").postCore({\r\n            body: JSON.stringify({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.getAs().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Webs, _super);\r\n    /**\r\n     * Creates a new instance of the Webs class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     */\r\n    function Webs(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webs\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(spExtractODataId(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebInfos, _super);\r\n    /**\r\n     * Creates a new instance of the WebInfos class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\r\n     */\r\n    function WebInfos(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webinfos\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Web, _super);\r\n    /**\r\n     * Creates a new instance of the Web class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\r\n     */\r\n    function Web(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = JSON.stringify({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.add(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = JSON.stringify({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(spExtractODataId(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(spExtractODataId(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Site, _super);\r\n    /**\r\n     * Creates a new instance of the Site class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\r\n     */\r\n    function Site(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/site\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\r\n            return {\r\n                data: d,\r\n                web: Web.fromUrl(spExtractODataId(d)),\r\n            };\r\n        });\r\n    };\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(Object(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"h\" /* ODataValue */])());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(Object(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"h\" /* ODataValue */])());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"h\" /* readBlobAsArrayBuffer */])(profilePicSource).then(function (buffer) {\r\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n                request.postCore({\r\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n                }).then(function (_) { return resolve(); });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ProfileLoader, _super);\r\n    /**\r\n   * Creates a new instance of the ProfileLoader class\r\n   *\r\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\r\n   */\r\n    function ProfileLoader(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: JSON.stringify({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postAsCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader, \"getuserprofile\").postAsCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postAsCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\r\n            },\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\" /* Util */].extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.create(\"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\r\n        var clone = new UtilityMethod(this.parentUrl, methodName);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return new SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query instanceof SearchQueryBuilder) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return new Search(this._baseUrl).configure(this._options).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Site(this._baseUrl).configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this._baseUrl).configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this._baseUrl).configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return new UtilityMethod(this._baseUrl, \"\").configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\n\n//# sourceMappingURL=sp.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(9)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export CachingOptions */\n/* unused harmony export CachingParserWrapper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return ODataParserBase; });\n/* unused harmony export ProcessHttpClientResponseException */\n/* unused harmony export AlreadyInBatchException */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return ODataDefaultParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ODataValue; });\n/* unused harmony export ODataRawParserImpl */\n/* unused harmony export ODataRaw */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return TextFileParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BlobFileParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return JSONFileParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BufferFileParser; });\n/* unused harmony export setResult */\n/* unused harmony export pipe */\n/* unused harmony export requestPipelineMethod */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return PipelineMethods; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return ODataQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return ODataBatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(2);\n\n\n\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].dateAdd(new Date(), \"second\", __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingTimeoutSeconds);\r\n        this.storeName = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* PnPClientStorage */]();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(_parser, _cacheOptions) {\r\n        this._parser = _parser;\r\n        this._cacheOptions = _cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        // add this to the cache based on the options\r\n        return this._parser.parse(response).then(function (data) {\r\n            if (_this._cacheOptions.store !== null) {\r\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({ data: _this.data, level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({ data: {}, level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\n\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\") || \"-1\") === 0) || r.status === 204) {\r\n                    resolve({});\r\n                }\r\n                else {\r\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n                    r.text()\r\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                        .catch(function (e) { return reject(e); });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\r\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({\r\n                    data: e,\r\n                    level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Warning,\r\n                    message: \"There was an error parsing the error response body. See data for details.\",\r\n                });\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: \"[[body not available]]\",\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (json.hasOwnProperty(\"d\")) {\r\n            if (json.d.hasOwnProperty(\"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (json.hasOwnProperty(\"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\n\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar ODataValueParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataValueParserImpl, _super);\r\n    function ODataValueParserImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ODataValueParserImpl.prototype.parse = function (r) {\r\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\r\n    };\r\n    return ODataValueParserImpl;\r\n}(ODataParserBase));\r\nfunction ODataValue() {\r\n    return new ODataValueParserImpl();\r\n}\r\nvar ODataRawParserImpl = /** @class */ (function () {\r\n    function ODataRawParserImpl() {\r\n    }\r\n    ODataRawParserImpl.prototype.parse = function (r) {\r\n        return r.json();\r\n    };\r\n    return ODataRawParserImpl;\r\n}());\r\nvar ODataRaw = new ODataRawParserImpl();\r\nvar TextFileParser = /** @class */ (function () {\r\n    function TextFileParser() {\r\n    }\r\n    TextFileParser.prototype.parse = function (r) {\r\n        return r.text();\r\n    };\r\n    return TextFileParser;\r\n}());\r\nvar BlobFileParser = /** @class */ (function () {\r\n    function BlobFileParser() {\r\n    }\r\n    BlobFileParser.prototype.parse = function (r) {\r\n        return r.blob();\r\n    };\r\n    return BlobFileParser;\r\n}());\r\nvar JSONFileParser = /** @class */ (function () {\r\n    function JSONFileParser() {\r\n    }\r\n    JSONFileParser.prototype.parse = function (r) {\r\n        return r.json();\r\n    };\r\n    return JSONFileParser;\r\n}());\r\nvar BufferFileParser = /** @class */ (function () {\r\n    function BufferFileParser() {\r\n    }\r\n    BufferFileParser.prototype.parse = function (r) {\r\n        if (__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].isFunction(r.arrayBuffer)) {\r\n            return r.arrayBuffer();\r\n        }\r\n        return r.buffer();\r\n    };\r\n    return BufferFileParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({\r\n        data: context.result,\r\n        level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Verbose,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    var _next = c.pipeline.shift();\r\n    if (typeof _next !== \"undefined\") {\r\n        return _next(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    return next(context)\r\n        .then(function (ctx) { return returnResult(ctx); })\r\n        .catch(function (e) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({\r\n            data: e,\r\n            level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Error,\r\n            message: \"Error in request pipeline: \" + e.message,\r\n        });\r\n        throw e;\r\n    });\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Verbose);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Verbose);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({\r\n                data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].activeLogLevel === __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info ? {} : context,\r\n                level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.verb === \"GET\" && context.isCached) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (typeof context.cachingOptions !== \"undefined\") {\r\n                    cacheOptions = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any help batch dependency we are resolving from the cache\r\n                        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({\r\n                            data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].activeLogLevel === __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info ? {} : data,\r\n                            level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        context.batchDependency();\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                context.batchDependency();\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].activeLogLevel === __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info ? {} : context,\r\n                    level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"b\" /* Logger */].activeLogLevel === __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info ? {} : context,\r\n                    level: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* LogLevel */].Info,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    Object.defineProperty(PipelineMethods, \"default\", {\r\n        get: function () {\r\n            return [\r\n                PipelineMethods.logStart,\r\n                PipelineMethods.caching,\r\n                PipelineMethods.send,\r\n                PipelineMethods.logEnd,\r\n            ];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\n\nvar ODataQueryable = /** @class */ (function () {\r\n    function ODataQueryable() {\r\n        this._batch = null;\r\n        this._query = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* Dictionary */]();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    ODataQueryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    ODataQueryable.prototype.configure = function (options) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* mergeOptions */])(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    ODataQueryable.prototype.usingCaching = function (options) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (typeof options !== \"undefined\") {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.getAs = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postAsCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    ODataQueryable.prototype.append = function (pathPart) {\r\n        this._url = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].combinePaths(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}());\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* Util */].getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._requests = [];\r\n        this._dependencies = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._requests;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser) {\r\n        var info = {\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._requests.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        var promise = new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        });\r\n        this._dependencies.push(promise);\r\n        return resolver;\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added after the first set resolve\r\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\n\n//# sourceMappingURL=odata.es5.js.map\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sp-addinhelpers.es5.umd.bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e403d650fe824d928f39","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 0","import { LogLevel, Logger } from '@pnp/logging';\nimport { __extends } from 'tslib';\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    /**\r\n     * Gets a count of the items currently in the dictionary\r\n     */\r\n    Dictionary.prototype.count = function () {\r\n        return this.keys.length;\r\n    };\r\n    return Dictionary;\r\n}());\n\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = function (context, method) {\r\n        var params = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            params[_i - 2] = arguments[_i];\r\n        }\r\n        return function () {\r\n            method.apply(context, params);\r\n        };\r\n    };\r\n    /**\r\n     * Tests if a url param exists\r\n     *\r\n     * @param name The name of the url paramter to check\r\n     */\r\n    Util.urlParamExists = function (name) {\r\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\r\n        return regex.test(location.search);\r\n    };\r\n    /**\r\n     * Gets a url param value by name\r\n     *\r\n     * @param name The name of the paramter for which we want the value\r\n     */\r\n    Util.getUrlParamByName = function (name) {\r\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\r\n        var results = regex.exec(location.search);\r\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n    };\r\n    /**\r\n     * Gets a url param by name and attempts to parse a bool value\r\n     *\r\n     * @param name The name of the paramter for which we want the boolean value\r\n     */\r\n    Util.getUrlParamBoolByName = function (name) {\r\n        var p = this.getUrlParamByName(name);\r\n        var isFalse = (p === \"\" || /false|0/i.test(p));\r\n        return !isFalse;\r\n    };\r\n    /**\r\n     * Inserts the string s into the string target as the index specified by index\r\n     *\r\n     * @param target The string into which we will insert s\r\n     * @param index The location in target to insert s (zero based)\r\n     * @param s The string to insert into target at position index\r\n     */\r\n    Util.stringInsert = function (target, index, s) {\r\n        if (index > 0) {\r\n            return target.substring(0, index) + s + target.substring(index, target.length);\r\n        }\r\n        return s + target;\r\n    };\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = function (date, interval, units) {\r\n        var ret = new Date(date); // don't change original date\r\n        switch (interval.toLowerCase()) {\r\n            case \"year\":\r\n                ret.setFullYear(ret.getFullYear() + units);\r\n                break;\r\n            case \"quarter\":\r\n                ret.setMonth(ret.getMonth() + 3 * units);\r\n                break;\r\n            case \"month\":\r\n                ret.setMonth(ret.getMonth() + units);\r\n                break;\r\n            case \"week\":\r\n                ret.setDate(ret.getDate() + 7 * units);\r\n                break;\r\n            case \"day\":\r\n                ret.setDate(ret.getDate() + units);\r\n                break;\r\n            case \"hour\":\r\n                ret.setTime(ret.getTime() + units * 3600000);\r\n                break;\r\n            case \"minute\":\r\n                ret.setTime(ret.getTime() + units * 60000);\r\n                break;\r\n            case \"second\":\r\n                ret.setTime(ret.getTime() + units * 1000);\r\n                break;\r\n            default:\r\n                ret = undefined;\r\n                break;\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * Loads a stylesheet into the current page\r\n     *\r\n     * @param path The url to the stylesheet\r\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\r\n     */\r\n    Util.loadStylesheet = function (path, avoidCache) {\r\n        if (avoidCache) {\r\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\r\n        }\r\n        var head = document.getElementsByTagName(\"head\");\r\n        if (head.length > 0) {\r\n            var e = document.createElement(\"link\");\r\n            head[0].appendChild(e);\r\n            e.setAttribute(\"type\", \"text/css\");\r\n            e.setAttribute(\"rel\", \"stylesheet\");\r\n            e.setAttribute(\"href\", path);\r\n        }\r\n    };\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = function () {\r\n        var paths = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            paths[_i] = arguments[_i];\r\n        }\r\n        return paths\r\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\r\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n            .join(\"/\")\r\n            .replace(/\\\\/g, \"/\");\r\n    };\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = function (chars) {\r\n        var text = new Array(chars);\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < chars; i++) {\r\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return text.join(\"\");\r\n    };\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    /* tslint:disable no-bitwise */\r\n    Util.getGUID = function () {\r\n        var d = new Date().getTime();\r\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return guid;\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param candidateFunction The thing to test for being a function\r\n     */\r\n    Util.isFunction = function (candidateFunction) {\r\n        return typeof candidateFunction === \"function\";\r\n    };\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = function (obj) {\r\n        return typeof obj !== \"undefined\" && obj !== null;\r\n    };\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = function (array) {\r\n        if (Array.isArray) {\r\n            return Array.isArray(array);\r\n        }\r\n        return array && typeof array.length === \"number\" && array.constructor === Array;\r\n    };\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = function (s) {\r\n        return typeof s === \"undefined\" || s === null || s.length < 1;\r\n    };\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = function (target, source, noOverwrite) {\r\n        if (noOverwrite === void 0) { noOverwrite = false; }\r\n        if (!Util.objectDefinedNotNull(source)) {\r\n            return target;\r\n        }\r\n        // ensure we don't overwrite things we don't want overwritten\r\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n        return Object.getOwnPropertyNames(source)\r\n            .filter(function (v) { return check(target, v); })\r\n            .reduce(function (t, v) {\r\n            t[v] = source[v];\r\n            return t;\r\n        }, target);\r\n    };\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = function (url) {\r\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n    };\r\n    return Util;\r\n}());\n\nfunction mergeOptions(target, source) {\r\n    if (Util.objectDefinedNotNull(source)) {\r\n        var headers = Util.extend(target.headers || {}, source.headers);\r\n        target = Util.extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\n\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: LogLevel.Warning,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: LogLevel.Warning,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\nvar FunctionExpectedException = /** @class */ (function (_super) {\r\n    __extends(FunctionExpectedException, _super);\r\n    function FunctionExpectedException(msg) {\r\n        if (msg === void 0) { msg = \"Expected a function.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"FunctionExpectedException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return FunctionExpectedException;\r\n}(Error));\r\nvar UrlException = /** @class */ (function (_super) {\r\n    __extends(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nvar CommonRuntimeConfigKeys = /** @class */ (function () {\r\n    function CommonRuntimeConfigKeys() {\r\n    }\r\n    CommonRuntimeConfigKeys.defaultCachingStore = \"defaultCachingStore\";\r\n    CommonRuntimeConfigKeys.defaultCachingTimeoutSeconds = \"defaultCachingTimeoutSeconds\";\r\n    CommonRuntimeConfigKeys.globalCacheDisable = \"globalCacheDisable\";\r\n    CommonRuntimeConfigKeys.enableCacheExpiration = \"enableCacheExpiration\";\r\n    CommonRuntimeConfigKeys.cacheExpirationIntervalMilliseconds = \"cacheExpirationIntervalMilliseconds\";\r\n    CommonRuntimeConfigKeys.spfxContext = \"spfxContext\";\r\n    return CommonRuntimeConfigKeys;\r\n}());\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(CommonRuntimeConfigKeys.defaultCachingStore, \"session\");\r\n        this._v.add(CommonRuntimeConfigKeys.defaultCachingTimeoutSeconds, 60);\r\n        this._v.add(CommonRuntimeConfigKeys.globalCacheDisable, false);\r\n        this._v.add(CommonRuntimeConfigKeys.enableCacheExpiration, false);\r\n        this._v.add(CommonRuntimeConfigKeys.cacheExpirationIntervalMilliseconds, 750);\r\n        this._v.add(CommonRuntimeConfigKeys.spfxContext, null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.defaultCachingStore);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.defaultCachingTimeoutSeconds);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.globalCacheDisable);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.enableCacheExpiration);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.cacheExpirationIntervalMilliseconds);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(CommonRuntimeConfigKeys.spfxContext);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            Logger.write(\"Enabling cache expiration.\", LogLevel.Info);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", LogLevel.Info);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = Util.dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        Logger.write(\"Called cache expiration handler.\", LogLevel.Verbose);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(Util.getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            Logger.log({\r\n                data: e,\r\n                level: LogLevel.Error,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\nexport { Util, readBlobAsText, readBlobAsArrayBuffer, Dictionary, mergeOptions, deprecated, beta, FunctionExpectedException, UrlException, CommonRuntimeConfigKeys, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, PnPClientStorageWrapper, PnPClientStorage };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 1\n// module chunks = 0","/**\r\n * A set of logging levels\r\n *\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = LogLevel.Verbose; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = LogLevel.Verbose; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\r\n     *\r\n     * @param name The name of this profile boundary\r\n     * @param f The function to execute and track within this performance boundary\r\n     */\r\n    Logger.measure = function (name, f) {\r\n        return Logger.instance.measure(name, f);\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = LogLevel.Verbose; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\r\n            return;\r\n        }\r\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n    };\r\n    LoggerImpl.prototype.measure = function (name, f) {\r\n        console.profile(name);\r\n        try {\r\n            return f();\r\n        }\r\n        finally {\r\n            console.profileEnd();\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * Implementation of ILogListener which logs to the browser console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case LogLevel.Verbose:\r\n            case LogLevel.Info:\r\n                console.log(msg);\r\n                break;\r\n            case LogLevel.Warning:\r\n                console.warn(msg);\r\n                break;\r\n            case LogLevel.Error:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of ILogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, LogLevel, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 2\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { LogLevel, Logger } from \"@pnp/logging\";\r\nvar SPRequestExecutorUndefinedException = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPRequestExecutorUndefinedException, _super);\r\n    function SPRequestExecutorUndefinedException() {\r\n        var _this = this;\r\n        var msg = [\r\n            \"SP.RequestExecutor is undefined. \",\r\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\r\n        ].join(\" \");\r\n        _this = _super.call(this, msg) || this;\r\n        _this.name = \"SPRequestExecutorUndefinedException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return SPRequestExecutorUndefinedException;\r\n}(Error));\r\nexport { SPRequestExecutorUndefinedException };\r\n//# sourceMappingURL=exceptions.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-addinhelpers/es5/src/exceptions.js\n// module id = 3\n// module chunks = 0","import { Util } from \"@pnp/common\";\r\nimport { SPRequestExecutorUndefinedException } from \"./exceptions\";\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (typeof spResponse.headers !== \"undefined\") {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\r\n            throw new SPRequestExecutorUndefinedException();\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = Util.extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = Util.extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\nexport { SPRequestExecutorClient };\r\n//# sourceMappingURL=sprequestexecutorclient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-addinhelpers/es5/src/sprequestexecutorclient.js\n// module id = 6\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { SPRest, Web, Site, } from \"@pnp/sp\";\r\nimport { Util, UrlException, } from \"@pnp/common\";\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Site, addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Web, addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!Util.isUrlAbsolute(addInWebUrl)) {\r\n            throw new UrlException(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!Util.isUrlAbsolute(hostWebUrl)) {\r\n            throw new UrlException(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(SPRest));\r\nexport { SPRestAddIn };\r\nexport var sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-addinhelpers/es5/src/sprestaddin.js\n// module id = 7\n// module chunks = 0","import { __extends } from 'tslib';\nimport { Dictionary, RuntimeConfig, Util, mergeHeaders, mergeOptions, readBlobAsArrayBuffer } from '@pnp/common';\nimport { LogLevel, Logger } from '@pnp/logging';\nimport { BlobFileParser, BufferFileParser, JSONFileParser, ODataBatch, ODataDefaultParser, ODataParserBase, ODataQueryable, ODataValue, PipelineMethods, TextFileParser } from '@pnp/odata';\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (candidateUrl === null) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nvar SPBatchParseException = /** @class */ (function (_super) {\r\n    __extends(SPBatchParseException, _super);\r\n    function SPBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"BatchParseException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return SPBatchParseException;\r\n}(Error));\r\nvar SPODataIdException = /** @class */ (function (_super) {\r\n    __extends(SPODataIdException, _super);\r\n    function SPODataIdException(data, msg) {\r\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"ODataIdException\";\r\n        Logger.log({ data: data, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return SPODataIdException;\r\n}(Error));\r\nvar MaxCommentLengthException = /** @class */ (function (_super) {\r\n    __extends(MaxCommentLengthException, _super);\r\n    function MaxCommentLengthException(msg) {\r\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"MaxCommentLengthException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return MaxCommentLengthException;\r\n}(Error));\r\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\r\n    __extends(NotSupportedInBatchException, _super);\r\n    function NotSupportedInBatchException(operation) {\r\n        if (operation === void 0) { operation = \"This operation\"; }\r\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\r\n        _this.name = \"NotSupportedInBatchException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return NotSupportedInBatchException;\r\n}(Error));\r\nvar APIUrlException = /** @class */ (function (_super) {\r\n    __extends(APIUrlException, _super);\r\n    function APIUrlException(msg) {\r\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"APIUrlException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return APIUrlException;\r\n}(Error));\n\nfunction spExtractODataId(candidate) {\r\n    if (candidate.hasOwnProperty(\"odata.id\")) {\r\n        return candidate[\"odata.id\"];\r\n    }\r\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\r\n        return candidate.__metadata.id;\r\n    }\r\n    else {\r\n        throw new SPODataIdException(candidate);\r\n    }\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(spGetEntityUrl(d), null);\r\n            return Util.extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spGetEntityUrl(v), null);\r\n                return Util.extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nfunction spGetEntityUrl(entity) {\r\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\r\n        // we are dealign with minimal metadata (default)\r\n        return Util.combinePaths(extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\r\n    }\r\n    else if (entity.hasOwnProperty(\"__metadata\")) {\r\n        // we are dealing with verbose, which has an absolute uri\r\n        return entity.__metadata.uri;\r\n    }\r\n    else {\r\n        // we are likely dealing with nometadata, so don't error but we won't be able to\r\n        // chain off these objects\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", LogLevel.Warning);\r\n        return \"\";\r\n    }\r\n}\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\n/**\r\n * Makes requests using the fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (typeof spPart !== \"undefined\" && typeof spPart.headers !== \"undefined\") {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== null && typeof spPart.baseUrl !== \"undefined\") {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== null && typeof spPart.fetchClientFactory !== \"undefined\") {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Dictionary();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== null) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = Util.combinePaths(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: Util.extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.add(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n        this._impl = SPRuntimeConfig.fetchClientFactory();\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    HttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n        }\r\n        opts = Util.extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                var index = url.indexOf(\"_api/\");\r\n                if (index < 0) {\r\n                    throw new APIUrlException();\r\n                }\r\n                var webUrl = url.substr(0, index);\r\n                return this._digestCache.getDigest(webUrl)\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    HttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = Util.extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(Util.getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    HttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    HttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return HttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (Util.isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(Util.combinePaths(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (typeof global._spPageContextInfo !== \"undefined\") {\r\n            // operating in classic pages\r\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\r\n                return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\r\n                return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (typeof global.location !== \"undefined\") {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            var urlStr = baseUrl;\r\n            if (Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = urlStr;\r\n                _this._url = Util.combinePaths(urlStr, path);\r\n            }\r\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = urlStr.lastIndexOf(\"/\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                path = Util.combinePaths(urlStr.slice(index), path);\r\n                _this._url = Util.combinePaths(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = urlStr.lastIndexOf(\"(\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                _this._url = Util.combinePaths(urlStr, path);\r\n            }\r\n        }\r\n        else {\r\n            var q = baseUrl;\r\n            _this._parentUrl = q._url;\r\n            _this._options = q._options;\r\n            var target = q._query.get(\"@target\");\r\n            if (target !== null) {\r\n                _this._query.add(\"@target\", target);\r\n            }\r\n            _this._url = Util.combinePaths(_this._parentUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n         * Creates a new instance of the supplied factory and extends this into that new instance\r\n         *\r\n         * @param factory constructor for the new SharePointQueryable\r\n         */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Util.extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Dictionary();\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, LogLevel.Verbose);\r\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        // inlude our explicitly set query string params\r\n        aliasedParams.merge(this._query);\r\n        if (aliasedParams.count() > 0) {\r\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path);\r\n        parent.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            parent.query.add(\"@target\", target);\r\n        }\r\n        if (typeof batch !== \"undefined\") {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        if (pipeline === void 0) { pipeline = PipelineMethods.default; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new HttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Util.getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields ascending\r\n     *\r\n     * @param orderby The name of the field to sort on\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var keys = this._query.getKeys();\r\n        var query = [];\r\n        var asc = ascending ? \" asc\" : \" desc\";\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"$orderby\") {\r\n                query.push(this._query.get(\"$orderby\"));\r\n                break;\r\n            }\r\n        }\r\n        query.push(\"\" + orderBy + asc);\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this._query.add(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    __extends(SiteUsers, _super);\r\n    /**\r\n     * Creates a new instance of the SiteUsers class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\r\n     */\r\n    function SiteUsers(baseUrl, path) {\r\n        if (path === void 0) { path = \"siteusers\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\r\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers, null).postCore({\r\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    __extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this user instance with the supplied properties\r\n    *\r\n    * @param properties A plain object of property names and values to update for the user\r\n    */\r\n    SiteUser.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this user\r\n     *\r\n     */\r\n    SiteUser.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    __extends(CurrentUser, _super);\r\n    function CurrentUser(baseUrl, path) {\r\n        if (path === void 0) { path = \"currentuser\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    __extends(SiteGroups, _super);\r\n    /**\r\n     * Creates a new instance of the SiteGroups class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\r\n     */\r\n    function SiteGroups(baseUrl, path) {\r\n        if (path === void 0) { path = \"sitegroups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    __extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this group instance with the supplied properties\r\n    *\r\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\r\n    */\r\n    /* tslint:disable no-string-literal */\r\n    SiteGroup.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retGroup = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                group: retGroup,\r\n            };\r\n        });\r\n    };\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    __extends(RoleAssignments, _super);\r\n    /**\r\n     * Creates a new instance of the RoleAssignments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\r\n     */\r\n    function RoleAssignments(baseUrl, path) {\r\n        if (path === void 0) { path = \"roleassignments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    __extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this role assignment\r\n     *\r\n     */\r\n    RoleAssignment.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitions, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\r\n     *\r\n     */\r\n    function RoleDefinitions(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            BasePermissions: Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    __extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\r\n            properties[\"BasePermissions\"] = Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\r\n        }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (properties.hasOwnProperty(\"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Deletes this role definition\r\n     *\r\n     */\r\n    RoleDefinition.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitionBindings, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitionBindings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\r\n     */\r\n    function RoleDefinitionBindings(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").getAs().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postAsCore({\r\n            body: JSON.stringify({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (typeof emailData !== \"undefined\") {\r\n                postBody = Util.extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postAsCore({\r\n                body: JSON.stringify(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = Util.extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\r\n                postBody = Util.extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore({\r\n            body: JSON.stringify({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postAsCore({\r\n            body: JSON.stringify({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postAsCore({\r\n            body: JSON.stringify({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postAsCore({\r\n            body: JSON.stringify({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postAsCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: JSON.stringify({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (typeof group !== \"undefined\" && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: JSON.stringify(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    __extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(spGetEntityUrl(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    __extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    __extends(WebPart, _super);\r\n    /**\r\n     * Creates a new instance of the WebPart class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\r\n     */\r\n    function WebPart(baseUrl, path) {\r\n        if (path === void 0) { path = \"webpart\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    __extends(Folders, _super);\r\n    /**\r\n     * Creates a new instance of the Folders class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Folders(baseUrl, path) {\r\n        if (path === void 0) { path = \"folders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    __extends(Folder, _super);\r\n    function Folder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Folder.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.Folder\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                folder: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Util.extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    __extends(ContentTypes, _super);\r\n    /**\r\n     * Creates a new instance of the ContentTypes class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\r\n     */\r\n    function ContentTypes(baseUrl, path) {\r\n        if (path === void 0) { path = \"contenttypes\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes, \"addAvailableContentType\").postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    __extends(ContentType, _super);\r\n    function ContentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Delete this content type\r\n     */\r\n    ContentType.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    __extends(FieldLinks, _super);\r\n    /**\r\n     * Creates a new instance of the ContentType class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\r\n     */\r\n    function FieldLinks(baseUrl, path) {\r\n        if (path === void 0) { path = \"fieldlinks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    __extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    __extends(AttachmentFiles, _super);\r\n    /**\r\n     * Creates a new instance of the AttachmentFiles class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\r\n     */\r\n    function AttachmentFiles(baseUrl, path) {\r\n        if (path === void 0) { path = \"AttachmentFiles\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    __extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new TextFileParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new BlobFileParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new BufferFileParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(new JSONFileParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    __extends(Views, _super);\r\n    /**\r\n     * Creates a new instance of the Views class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Views(baseUrl, path) {\r\n        if (path === void 0) { path = \"views\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, additionalSettings));\r\n        return this.clone(Views, null).postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    function View() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this view intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the view\r\n     */\r\n    View.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this view\r\n     *\r\n     */\r\n    View.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    __extends(ViewFields, _super);\r\n    function ViewFields(baseUrl, path) {\r\n        if (path === void 0) { path = \"viewfields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\r\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    __extends(Fields, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Fields(baseUrl, path) {\r\n        if (path === void 0) { path = \"fields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param title The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": Util.extend({\r\n                \"__metadata\": {\r\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\r\n                },\r\n            }, info),\r\n        });\r\n        return this.clone(Fields, \"createfieldasxml\").postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.clone(Fields, null).postAsCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = Util.extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = Util.extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = Util.extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = Util.extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", Util.extend(props, properties));\r\n    };\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this fields\r\n     *\r\n     */\r\n    Field.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    __extends(Forms, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Forms(baseUrl, path) {\r\n        if (path === void 0) { path = \"forms\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    __extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    __extends(Subscriptions, _super);\r\n    /**\r\n     * Creates a new instance of the Subscriptions class\r\n     *\r\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\r\n     */\r\n    function Subscriptions(baseUrl, path) {\r\n        if (path === void 0) { path = \"subscriptions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var subscription = new Subscription(this);\r\n        subscription.concat(\"('\" + subscriptionId + \"')\");\r\n        return subscription;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    __extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    __extends(UserCustomActions, _super);\r\n    /**\r\n     * Creates a new instance of the UserCustomActions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\r\n     */\r\n    function UserCustomActions(baseUrl, path) {\r\n        if (path === void 0) { path = \"usercustomactions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions, \"clear\").postCore();\r\n    };\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    __extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Updates this user custom action with the supplied properties\r\n    *\r\n    * @param properties An information object of property names and values to update for this user custom action\r\n    */\r\n    UserCustomAction.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                action: _this,\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    __extends(Lists, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Lists(baseUrl, path) {\r\n        if (path === void 0) { path = \"lists\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = Util.extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new NotSupportedInBatchException(\"The ensure list method\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    __extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: Util.extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\r\n            }, overrideParameters),\r\n            parameters: Util.extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\r\n            }, parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: JSON.stringify(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    __extends(Items, _super);\r\n    /**\r\n     * Creates a new instance of the Items class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Items(baseUrl, path) {\r\n        if (path === void 0) { path = \"items\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Item by id\r\n     *\r\n     * @param id The integer id of the item to retrieve\r\n     */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     */\r\n    Items.prototype.skip = function (skip) {\r\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.getAs(new PagedItemCollectionParser());\r\n    };\r\n    //\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = JSON.stringify(Util.extend({\r\n                \"__metadata\": { \"type\": listItemEntityType },\r\n            }, properties));\r\n            var promise = _this.clone(Items, null).postAsCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = JSON.stringify(Util.extend({\r\n                    \"__metadata\": { \"type\": listItemEntityType },\r\n                }, properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Delete this item\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    Item.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i._query.add(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(nextUrl, results) {\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    __extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    __extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    __extends(Files, _super);\r\n    /**\r\n     * Creates a new instance of the Files class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Files(baseUrl, path) {\r\n        if (path === void 0) { path = \"files\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Util.extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (typeof progress === \"undefined\") {\r\n            progress = function () { return null; };\r\n        }\r\n        var self = this;\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = Util.getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        }).then(function (_) {\r\n            return self;\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false).postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false).postAsCore({ body: fragment }).then(function (n) { return parseFloat(n); });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postAsCore({ body: fragment }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(response.ServerRelativeUrl),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    __extends(Versions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Versions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    __extends(Version, _super);\r\n    function Version() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Version.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    __extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = JSON.stringify({\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        });\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = JSON.stringify({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    __extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this node based on the supplied properties\r\n     *\r\n     * @param properties The hash of key/value pairs to update\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    __extends(Navigation, _super);\r\n    /**\r\n     * Creates a new instance of the Navigation class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\r\n     */\r\n    function Navigation(baseUrl, path) {\r\n        if (path === void 0) { path = \"navigation\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Navigation;\r\n}(SharePointQueryable));\n\n/**\r\n * Allows for the fluent construction of search queries\r\n */\r\nvar SearchQueryBuilder = /** @class */ (function () {\r\n    function SearchQueryBuilder(queryText, _query) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (_query === void 0) { _query = {}; }\r\n        this._query = _query;\r\n        if (typeof queryText === \"string\" && queryText.length > 0) {\r\n            this.extendQuery({ Querytext: queryText });\r\n        }\r\n    }\r\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (queryTemplate === void 0) { queryTemplate = {}; }\r\n        return new SearchQueryBuilder(queryText, queryTemplate);\r\n    };\r\n    SearchQueryBuilder.prototype.text = function (queryText) {\r\n        return this.extendQuery({ Querytext: queryText });\r\n    };\r\n    SearchQueryBuilder.prototype.template = function (template) {\r\n        return this.extendQuery({ QueryTemplate: template });\r\n    };\r\n    SearchQueryBuilder.prototype.sourceId = function (id) {\r\n        return this.extendQuery({ SourceId: id });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableInterleaving: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableStemming: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\r\n        get: function () {\r\n            return this.extendQuery({ TrimDuplicates: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\r\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableNicknames: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableFQL: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnablePhonetic: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\r\n        get: function () {\r\n            return this.extendQuery({ BypassResultTypes: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessBestBets: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableQueryRules: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableSorting: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\r\n        get: function () {\r\n            return this.extendQuery({ GenerateBlockRankLog: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\r\n        return this.extendQuery({ RankingModelId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.startRow = function (n) {\r\n        return this.extendQuery({ StartRow: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\r\n        return this.extendQuery({ RowLimit: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\r\n        return this.extendQuery({ RowsPerPage: n });\r\n    };\r\n    SearchQueryBuilder.prototype.selectProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SelectProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.culture = function (culture) {\r\n        return this.extendQuery({ Culture: culture });\r\n    };\r\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\r\n        return this.extendQuery({ TimeZoneId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.refinementFilters = function () {\r\n        var filters = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filters[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ RefinementFilters: filters });\r\n    };\r\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\r\n        return this.extendQuery({ Refiners: refiners });\r\n    };\r\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\r\n        return this.extendQuery({ HiddenConstraints: constraints });\r\n    };\r\n    SearchQueryBuilder.prototype.sortList = function () {\r\n        var sorts = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sorts[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SortList: sorts });\r\n    };\r\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\r\n        return this.extendQuery({ Timeout: milliseconds });\r\n    };\r\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ HitHighlightedProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\r\n        return this.extendQuery({ ClientType: clientType });\r\n    };\r\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\r\n        return this.extendQuery({ PersonalizationData: data });\r\n    };\r\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\r\n        return this.extendQuery({ ResultsUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.queryTag = function () {\r\n        var tags = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tags[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ QueryTag: tags });\r\n    };\r\n    SearchQueryBuilder.prototype.properties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ Properties: properties });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessPersonalFavorites: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\r\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.reorderingRules = function () {\r\n        var rules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            rules[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ ReorderingRules: rules });\r\n    };\r\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\r\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\r\n        return this.extendQuery({ CollapseSpecification: spec });\r\n    };\r\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\r\n        return this.extendQuery({ UILanguage: lang });\r\n    };\r\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\r\n        return this.extendQuery({ DesiredSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\r\n        return this.extendQuery({ MaxSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\r\n        return this.extendQuery({ SummaryLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\r\n        return this._query;\r\n    };\r\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\r\n        this._query = Util.extend(this._query, part);\r\n        return this;\r\n    };\r\n    return SearchQueryBuilder;\r\n}());\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    __extends(Search, _super);\r\n    /**\r\n     * Creates a new instance of the Search class\r\n     *\r\n     * @param baseUrl The url for the search context\r\n     * @param query The SearchQuery object to execute\r\n     */\r\n    function Search(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/postquery\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * .......\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = JSON.stringify({\r\n            request: Util.extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\r\n            }, formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        if (prop.hasOwnProperty(\"results\")) {\r\n            return prop;\r\n        }\r\n        return { results: prop };\r\n    };\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = Util.extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: false,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    __extends(SearchSuggest, _super);\r\n    function SearchSuggest(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/suggest\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        if (query.hasOwnProperty(\"count\")) {\r\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"personalCount\")) {\r\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"preQuery\")) {\r\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\r\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"capitalize\")) {\r\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"culture\")) {\r\n            this.query.add(\"culture\", query.culture.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"stemming\")) {\r\n            this.query.add(\"enablestemming\", query.stemming.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"includePeople\")) {\r\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"queryRules\")) {\r\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"prefixMatch\")) {\r\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\r\n        }\r\n    };\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nvar SearchSuggestResult = /** @class */ (function () {\r\n    function SearchSuggestResult(json) {\r\n        if (json.hasOwnProperty(\"suggest\")) {\r\n            // verbose\r\n            this.PeopleNames = json.suggest.PeopleNames.results;\r\n            this.PersonalResults = json.suggest.PersonalResults.results;\r\n            this.Queries = json.suggest.Queries.results;\r\n        }\r\n        else {\r\n            this.PeopleNames = json.PeopleNames;\r\n            this.PersonalResults = json.PersonalResults;\r\n            this.Queries = json.Queries;\r\n        }\r\n    }\r\n    return SearchSuggestResult;\r\n}());\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    __extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", LogLevel.Info);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", LogLevel.Info);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new HttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = Util.getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : Util.combinePaths(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", LogLevel.Verbose);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof castHeaders[\"X-HTTP-Method\"] !== \"undefined\") {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", LogLevel.Info);\r\n            return client.fetch(Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(_this._parseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new SPBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", LogLevel.Info);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", LogLevel.Verbose);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.prototype._parseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new SPBatchParseException(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new SPBatchParseException(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new SPBatchParseException(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    __extends(Features, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Features(baseUrl, path) {\r\n        if (path === void 0) { path = \"features\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"add\").postCore({\r\n            body: JSON.stringify({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"remove\").postCore({\r\n            body: JSON.stringify({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.getAs().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    __extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    __extends(Webs, _super);\r\n    /**\r\n     * Creates a new instance of the Webs class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     */\r\n    function Webs(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webs\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": Util.extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(spExtractODataId(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    __extends(WebInfos, _super);\r\n    /**\r\n     * Creates a new instance of the WebInfos class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\r\n     */\r\n    function WebInfos(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webinfos\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    __extends(Web, _super);\r\n    /**\r\n     * Creates a new instance of the Web class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\r\n     */\r\n    function Web(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = JSON.stringify({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.add(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = JSON.stringify({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(spExtractODataId(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(spExtractODataId(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    __extends(Site, _super);\r\n    /**\r\n     * Creates a new instance of the Site class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\r\n     */\r\n    function Site(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/site\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\r\n            return {\r\n                data: d,\r\n                web: Web.fromUrl(spExtractODataId(d)),\r\n            };\r\n        });\r\n    };\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    __extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(ODataValue());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(ODataValue());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\r\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n                request.postCore({\r\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n                }).then(function (_) { return resolve(); });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    __extends(ProfileLoader, _super);\r\n    /**\r\n   * Creates a new instance of the ProfileLoader class\r\n   *\r\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\r\n   */\r\n    function ProfileLoader(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: JSON.stringify({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postAsCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader, \"getuserprofile\").postAsCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    __extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postAsCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\r\n            },\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = Util.extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = Util.extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = Util.extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = Util.extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.create(\"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\r\n        var clone = new UtilityMethod(this.parentUrl, methodName);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return new SearchSuggest(this._baseUrl).configure(this._options).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query instanceof SearchQueryBuilder) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return new Search(this._baseUrl).configure(this._options).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Site(this._baseUrl).configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this._baseUrl).configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this._baseUrl).configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return new UtilityMethod(this._baseUrl, \"\").configure(this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\nexport { spExtractODataId, spODataEntity, spODataEntityArray, SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, SharePointQueryableSecurable, FileFolderShared, SharePointQueryableShareable, SharePointQueryableShareableFile, SharePointQueryableShareableFolder, SharePointQueryableShareableItem, SharePointQueryableShareableWeb, CheckinType, WebPartsPersonalizationScope, MoveOperations, TemplateFileType, File, Files, Folder, Folders, HttpClient, Item, Items, PagedItemCollection, NavigationNodes, NavigationNode, List, Lists, sp, SPRest, RoleDefinitionBindings, Search, SearchQueryBuilder, SearchResults, SortDirection, ReorderingRuleMatchType, QueryPropertyValueType, SearchBuiltInSourceId, SearchSuggest, SearchSuggestResult, Site, UtilityMethod, WebPartDefinitions, WebPartDefinition, WebPart, Web, ControlMode, FieldTypes, DateTimeFieldFormatType, AddFieldOptions, CalendarType, UrlFieldFormatType, PermissionKind, PrincipalType$1 as PrincipalType, PrincipalSource, RoleType, PageType, SharingLinkKind, SharingRole, SharingOperationStatusCode, SPSharedObjectType, SharingDomainRestrictionMode, RenderListDataOptions };\n//# sourceMappingURL=sp.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp/dist/sp.es5.js\n// module id = 8\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0","import { Dictionary, PnPClientStorage, RuntimeConfig, Util, mergeOptions } from '@pnp/common';\nimport { __decorate, __extends } from 'tslib';\nimport { LogLevel, Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = Util.dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(_parser, _cacheOptions) {\r\n        this._parser = _parser;\r\n        this._cacheOptions = _cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        // add this to the cache based on the options\r\n        return this._parser.parse(response).then(function (data) {\r\n            if (_this._cacheOptions.store !== null) {\r\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    __extends(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        Logger.log({ data: _this.data, level: LogLevel.Error, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    __extends(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        Logger.log({ data: {}, level: LogLevel.Error, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\n\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\") || \"-1\") === 0) || r.status === 204) {\r\n                    resolve({});\r\n                }\r\n                else {\r\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n                    r.text()\r\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                        .catch(function (e) { return reject(e); });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\r\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\r\n                Logger.log({\r\n                    data: e,\r\n                    level: LogLevel.Warning,\r\n                    message: \"There was an error parsing the error response body. See data for details.\",\r\n                });\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: \"[[body not available]]\",\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (json.hasOwnProperty(\"d\")) {\r\n            if (json.d.hasOwnProperty(\"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (json.hasOwnProperty(\"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\n\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar ODataValueParserImpl = /** @class */ (function (_super) {\r\n    __extends(ODataValueParserImpl, _super);\r\n    function ODataValueParserImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ODataValueParserImpl.prototype.parse = function (r) {\r\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\r\n    };\r\n    return ODataValueParserImpl;\r\n}(ODataParserBase));\r\nfunction ODataValue() {\r\n    return new ODataValueParserImpl();\r\n}\r\nvar ODataRawParserImpl = /** @class */ (function () {\r\n    function ODataRawParserImpl() {\r\n    }\r\n    ODataRawParserImpl.prototype.parse = function (r) {\r\n        return r.json();\r\n    };\r\n    return ODataRawParserImpl;\r\n}());\r\nvar ODataRaw = new ODataRawParserImpl();\r\nvar TextFileParser = /** @class */ (function () {\r\n    function TextFileParser() {\r\n    }\r\n    TextFileParser.prototype.parse = function (r) {\r\n        return r.text();\r\n    };\r\n    return TextFileParser;\r\n}());\r\nvar BlobFileParser = /** @class */ (function () {\r\n    function BlobFileParser() {\r\n    }\r\n    BlobFileParser.prototype.parse = function (r) {\r\n        return r.blob();\r\n    };\r\n    return BlobFileParser;\r\n}());\r\nvar JSONFileParser = /** @class */ (function () {\r\n    function JSONFileParser() {\r\n    }\r\n    JSONFileParser.prototype.parse = function (r) {\r\n        return r.json();\r\n    };\r\n    return JSONFileParser;\r\n}());\r\nvar BufferFileParser = /** @class */ (function () {\r\n    function BufferFileParser() {\r\n    }\r\n    BufferFileParser.prototype.parse = function (r) {\r\n        if (Util.isFunction(r.arrayBuffer)) {\r\n            return r.arrayBuffer();\r\n        }\r\n        return r.buffer();\r\n    };\r\n    return BufferFileParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: context.result,\r\n        level: LogLevel.Verbose,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    var _next = c.pipeline.shift();\r\n    if (typeof _next !== \"undefined\") {\r\n        return _next(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    return next(context)\r\n        .then(function (ctx) { return returnResult(ctx); })\r\n        .catch(function (e) {\r\n        Logger.log({\r\n            data: e,\r\n            level: LogLevel.Error,\r\n            message: \"Error in request pipeline: \" + e.message,\r\n        });\r\n        throw e;\r\n    });\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", LogLevel.Verbose);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", LogLevel.Verbose);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === LogLevel.Info ? {} : context,\r\n                level: LogLevel.Info,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.verb === \"GET\" && context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", LogLevel.Info);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (typeof context.cachingOptions !== \"undefined\") {\r\n                    cacheOptions = Util.extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any help batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === LogLevel.Info ? {} : data,\r\n                            level: LogLevel.Info,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        context.batchDependency();\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", LogLevel.Info);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                context.batchDependency();\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", LogLevel.Info);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", LogLevel.Info);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = Util.extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === LogLevel.Info ? {} : context,\r\n                    level: LogLevel.Info,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === LogLevel.Info ? {} : context,\r\n                    level: LogLevel.Info,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    Object.defineProperty(PipelineMethods, \"default\", {\r\n        get: function () {\r\n            return [\r\n                PipelineMethods.logStart,\r\n                PipelineMethods.caching,\r\n                PipelineMethods.send,\r\n                PipelineMethods.logEnd,\r\n            ];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\n\nvar ODataQueryable = /** @class */ (function () {\r\n    function ODataQueryable() {\r\n        this._batch = null;\r\n        this._query = new Dictionary();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    ODataQueryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    ODataQueryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    ODataQueryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (typeof options !== \"undefined\") {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.getAs = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postAsCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, PipelineMethods.default).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Util.objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    ODataQueryable.prototype.append = function (pathPart) {\r\n        this._url = Util.combinePaths(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}());\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = Util.getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._requests = [];\r\n        this._dependencies = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._requests;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser) {\r\n        var info = {\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._requests.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        var promise = new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        });\r\n        this._dependencies.push(promise);\r\n        return resolver;\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added after the first set resolve\r\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, ODataParserBase, ProcessHttpClientResponseException, AlreadyInBatchException, ODataDefaultParser, ODataValue, ODataRawParserImpl, ODataRaw, TextFileParser, BlobFileParser, JSONFileParser, BufferFileParser, setResult, pipe, requestPipelineMethod, PipelineMethods, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/odata/dist/odata.es5.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}