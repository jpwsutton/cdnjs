{"version":3,"sources":["../../../../packages/pnpjs/src/pnpjs.ts","../../../../packages/pnpjs/src/config/pnplibconfig.ts"],"names":["util","Util","sp","_sp","graph","_graph","storage","PnPClientStorage","config","Settings","log","Logger","setup","RuntimeConfig","extend","Def"],"mappings":"ukBAwBA,IAAaA,EAAOC,EAAAA,KAKPC,EAAkBC,EAAAA,GAKlBC,EAAmBC,EAAAA,MAKnBC,EAA4B,IAAIC,EAAAA,iBAKhCC,EAAS,IAAIC,EAAAA,SAKbC,EAAMC,EAAAA,OAKNC,WChDSJ,GAClBK,EAAAA,cAAcC,OAAON,IDsDnBO,EAAM,CAIRP,OAAQA,EAIRJ,MAAOA,EAIPM,IAAKA,EAILE,MAAOA,EAIPV,GAAIA,EAIJI,QAASA,EAITN,KAAMA","sourcesContent":["import { Logger } from \"@pnp/logging\";\nimport { Util, PnPClientStorage } from \"@pnp/common\";\nimport { Settings } from \"@pnp/config-store\";\nimport { GraphRest, graph as _graph } from \"@pnp/graph\";\nimport { sp as _sp, SPRestAddIn } from \"@pnp/sp-addinhelpers\";\nimport { setup as _setup, PnPConfiguration } from \"./config/pnplibconfig\";\n\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n\n/**\n * Re-export everything from the dependencies to match the previous pattern\n */\nexport * from \"@pnp/sp\";\nexport * from \"@pnp/graph\";\nexport * from \"@pnp/common\";\nexport * from \"@pnp/logging\";\nexport * from \"@pnp/config-store\";\nexport * from \"@pnp/odata\";\n\n/**\n * Utility methods\n */\nexport const util = Util;\n\n/**\n * Provides access to the SharePoint REST interface\n */\nexport const sp = <SPRestAddIn>_sp;\n\n/**\n * Provides access to the Microsoft Graph REST interface\n */\nexport const graph = <GraphRest>_graph;\n\n/**\n * Provides access to local and session storage\n */\nexport const storage: PnPClientStorage = new PnPClientStorage();\n\n/**\n * Global configuration instance to which providers can be added\n */\nexport const config = new Settings();\n\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexport const log = Logger;\n\n/**\n * Allows for the configuration of the library\n */\nexport const setup: (config: PnPConfiguration) => void = _setup;\n\n// /**\n//  * Expose a subset of classes from the library for public consumption\n//  */\n\n// creating this class instead of directly assigning to default fixes issue #116\nconst Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: config,\n    /**\n     * Provides access to the Microsoft Graph REST interface\n     */\n    graph: graph,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: storage,\n    /**\n     * Utility methods\n     */\n    util: util,\n};\n\n/**\n * Enables use of the import pnp from syntax\n */\nexport default Def;\n","import { LibraryConfiguration, RuntimeConfig } from \"@pnp/common\";\nimport { SPConfigurationPart } from \"@pnp/sp\";\nimport { GraphConfigurationPart } from \"@pnp/graph\";\n\nexport interface PnPConfiguration extends LibraryConfiguration, SPConfigurationPart, GraphConfigurationPart { }\n\nexport function setup(config: PnPConfiguration): void {\n    RuntimeConfig.extend(config);\n}\n"]}