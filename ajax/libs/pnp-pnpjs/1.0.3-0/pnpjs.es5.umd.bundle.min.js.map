{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///pnpjs.es5.umd.bundle.min.js","webpack:///webpack/bootstrap 44a08c6c552a1fa011e4","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./dist/packages/odata/dist/odata.es5.js","webpack:///./build/packages/pnpjs/es5/src/pnpjs.js","webpack:///(webpack)/buildin/global.js","webpack:///./dist/packages/config-store/dist/config-store.es5.js","webpack:///./dist/packages/graph/dist/graph.es5.js","webpack:///./dist/packages/sp/dist/sp.es5.js","webpack:///./build/packages/pnpjs/es5/index.js","webpack:///./dist/packages/sp-addinhelpers/dist/sp-addinhelpers.es5.js","webpack:///./build/packages/pnpjs/es5/src/config/pnplibconfig.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","Logger","ConsoleListener","FunctionListener","instance","activeLogLevel","set","value","_instance","LoggerImpl","subscribe","listeners","_i","arguments","length","map","listener","clearSubscribers","count","write","message","level","log","writeJSON","json","JSON","stringify","entry","error","err","data","subscribers","push","slice","subscriber","msg","format","console","warn","join","method","global","readBlobAsText","blob","readBlobAs","readBlobAsArrayBuffer","mode","Promise","resolve","reject","reader","FileReader","onload","e","target","result","readAsText","readAsArrayBuffer","deprecated","deprecationVersion","propertyKey","descriptor","args","__WEBPACK_IMPORTED_MODULE_0__pnp_logging__","apply","beta","getCtxCallback","context","params","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","combinePaths","paths","filter","path","Util","stringIsNullOrEmpty","replace","getRandomString","chars","text","Array","possible","charAt","Math","floor","random","getGUID","r","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","constructor","extend","source","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","test","mergeHeaders","Request","headers","forEach","append","mergeOptions","Dictionary","UrlException","RuntimeConfigImpl","RuntimeConfig","FetchClient","BearerTokenFetchClient","PnPClientStorageWrapper","PnPClientStorage","__WEBPACK_IMPORTED_MODULE_1_tslib__","keys","values","key","index","indexOf","add","remove","merge","_this","sourceAsDictionary_1","getKeys","sourceAsHash","val","splice","getValues","clear","_super","Error","_v","config","_runtimeConfig","fetch","options","_token","Headers","store","defaultTimeoutMinutes","enabled","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","then","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","_","setTimeout","cacheExpirationIntervalMilliseconds","catch","MemoryStorage","_store","_local","_session","localStorage","sessionStorage","__extends","b","__","extendStatics","create","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","setPrototypeOf","__proto__","assign","returnResult","__WEBPACK_IMPORTED_MODULE_2__pnp_logging__","requestId","setResult","hasResult","next","pipeline","shift","pipe","ctx","requestPipelineMethod","alwaysRun","getDefaultPipeline","PipelineMethods","logStart","caching","send","logEnd","CachingOptions","CachingParserWrapper","ProcessHttpClientResponseException","ODataParserBase","ODataDefaultParser","TextParser","BlobParser","JSONParser","BufferParser","AlreadyInBatchException","ODataQueryable","ODataBatch","__WEBPACK_IMPORTED_MODULE_0__pnp_common__","storeName","defaultCachingStore","storage","local","session","_parser","_cacheOptions","response","status","statusText","handleError","txt","parseODataJSON","ok","responseBody","responseHeaders","results","arrayBuffer","buffer","verb","requestAbsoluteUrl","isCached","cacheOptions","cachingOptions","batchDependency","parser","hydrate","isBatched","batch","batchId","client","clientFactory","opts","_batch","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","concat","pathPart","configure","usingCaching","globalCacheDisable","inBatch","toUrl","toRequestContext","postCore","patchCore","deleteCore","addBatchDependency","addDependency","hasBatch","_batchId","_requests","_dependencies","info","toUpperCase","resolver","promise","execute","all","executeImpl","util","sp","graph","setup","__WEBPACK_IMPORTED_MODULE_1__pnp_common__","__WEBPACK_IMPORTED_MODULE_2__pnp_config_store__","__WEBPACK_IMPORTED_MODULE_3__pnp_graph__","__WEBPACK_IMPORTED_MODULE_4__pnp_sp_addinhelpers__","__WEBPACK_IMPORTED_MODULE_5__config_pnplibconfig__","__WEBPACK_IMPORTED_MODULE_6__pnp_sp__","__WEBPACK_IMPORTED_MODULE_7__pnp_odata__","Def","g","Function","eval","window","Settings","CachingConfigurationProvider","SPListConfigurationProvider","NoCacheAvailableException","_settings","addJSON","hash","load","provider","getConfiguration","reason","getJSON","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","cachedConfig","providerPromise","providedConfig","pnpCache","sourceWeb","sourceListTitle","keyFieldName","valueFieldName","web","lists","getByTitle","listTitle","items","select","item","writable","asCaching","GraphRest","GraphBatch","GraphQueryable","GraphQueryableCollection","GraphQueryableInstance","GraphQueryableSearchableCollection","SPfxClient","GroupType","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_2__pnp_odata__","__WEBPACK_IMPORTED_MODULE_3__pnp_logging__","_client","_configuration","NoGraphClientAvailableException","GraphRuntimeConfigImpl","graphPart","fetchClientFactory","spfxContext","graphHttpClient","GraphRuntimeConfig","GraphHttpClient","_impl","fetchRaw","rawHeaders","retry","delay","attempts","retryCount","retryContext","post","patch","baseUrl","urlStr","q","as","toUrlAndQuery","getParent","parentUrl","clone","additionalPath","includeBatch","selects","expand","expands","orderBy","ascending","query","k","top","skip","num","skipToken","token","search","Members","id","body","@odata.id","getById","Member","Owners","Calendar","Calendars","Events","Event","properties","event","update","Attachments","Attachment","addFile","bytes","@odata.type","contentBytes","Conversations","Conversation","Threads","Thread","Posts","Post","reply","forward","Senders","remover","Plans","Plan","Photo","getBlob","getBuffer","setContent","content","Groups","Group","mailNickname","groupType","additionalProperties","postBody","displayName","mailEnabled","Office365","securityEnabled","Security","groupTypes","group","addFavorite","getMemberGroups","securityEnabledOnly","removeFavorite","resetUnseenCount","subscribeByMail","unsubscribeByMail","getCalendarView","start","end","view","toISOString","V1","GraphBatchParseException","batchUrl","requests","batchRequest","formatRequests","batchOptions","Accept","Content-Type","_parseResponse","parsedResponse","responses","chain","request","nextLink","reqInfo","requestFragment","graphResponse","parsedResponses","fill","responseId","parseInt","Response","extractWebUrl","candidateUrl","substr","spExtractODataId","candidate","__metadata","SPODataIdException","spGetEntityUrl","entity","uri","spODataEntity","SPODataEntityParserImpl","spODataEntityArray","SPODataEntityArrayParserImpl","toAbsoluteUrl","SPRuntimeConfig","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","location","baseUrl_1","getNextOrder","collection","max","order","regexIndexOf","regex","startpos","substring","getAttrValueFromString","html","attrName","reg","RegExp","match","exec","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","trim","reindex","columns","controls","SharePointQueryable","SharePointQueryableInstance","SharePointQueryableCollection","SharePointQueryableSecurable","FileFolderShared","SharePointQueryableShareable","SharePointQueryableShareableFile","SharePointQueryableShareableFolder","SharePointQueryableShareableItem","SharePointQueryableShareableWeb","AppCatalog","App","Field","Fields","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","File","Files","Folder","Folders","SPHttpClient","Item","Items","ItemVersion","ItemVersions","PagedItemCollection","NavigationNodes","NavigationNode","NavigationService","List","Lists","SPRest","RoleDefinitionBindings","Search","SearchQueryBuilder","SearchResults","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","SearchBuiltInSourceId","SearchSuggest","SearchSuggestResult","Site","UtilityMethod","WebPartDefinitions","WebPartDefinition","WebPart","Web","ClientSidePage","CanvasSection","CanvasControl","CanvasColumn","ClientSideText","ClientSideWebpart","SocialQuery","MySocialQuery","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType$1","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","PrincipalType","__WEBPACK_IMPORTED_MODULE_3__pnp_odata__","SPBatchParseException","MaxCommentLengthException","NotSupportedInBatchException","operation","APIUrlException","SPRuntimeConfigImpl","spPart","pageContext","absoluteUrl","CachedDigest","digests","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","cache","credentials","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","_digestCache","has","digest","lastIndexOf","aliasedParams","labelName","parent","dependencyDispose","SiteUsers","getByEmail","email","SiteUser","getByLoginName","loginName","su","encodeURIComponent","removeById","removeByLoginName","type","LoginName","SiteGroups","X-HTTP-Method","user","CurrentUser","Id","getByName","groupName","SiteGroup","sg","retGroup","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitions","RoleDefinition","getByType","roleTypeKind","description","basePermissions","BasePermissions","Description","Name","Order","definition","retDef","getUserEffectivePermissions","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","getShareLink","kind","expString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","login","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","View","dependency","shareObjectRaw","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","getShareable","shareable","shareEverything","LimitedWebPartManager","export","webPartId","import","xml","webPartXml","getByControlId","saveChanges","moveTo","zoneId","zoneIndex","close","open","f","folder","eTag","IF-Match","recycle","listItemAllFields","ContentTypes","ct","ContentType","addAvailableContentType","contentTypeId","contentType","additionalSettings","StringValue","FieldLinks","fl","FieldLink","AttachmentFiles","AttachmentFile","file","addMultiple","files","deleteMultiple","getText","getParsed","Views","title","personalView","PersonalView","Title","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","parameters","fieldType","addText","maxLength","props","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","Forms","Form","Subscriptions","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","resource","UserCustomActions","uca","UserCustomAction","action","list","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","ListData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","getItemByStringId","stringId","reverse","getPaged","PagedItemCollectionParser","getAll","requestSize","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","candidatelistItemEntityTypeFullName","ItemUpdatedParser","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","formValues","newDocumentUpdate","bNewDocumentUpdate","versionId","nextUrl","__next","odata.etag","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","size","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","StartUpload","parseFloat","fileOffset","ContinueUpload","ServerRelativeUrl","Version","deleteAll","deleteById","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","getAppById","filename","deploy","retract","install","uninstall","upgrade","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","DecodedUrl","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","PromotedState","iar","CommentsDisabled","fromFile","page","jsonToEscapedString","escapedStringToJson","escapedString","addSection","section","toHtml","fromHtml","controlType","control","mergeColumnToTree","mergeControlToTree","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","j","on","column","controlData","position","sectionIndex","sectionFactor","addControl","addColumn","factor","defaultColumn","dataVersion","getControlData","getControl","jsonData","displayMode","_text","startsWith","editorType","controlIndex","propertieJson","htmlProperties","serverProcessedContent","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","prop","Value","imageSources","links","node","visible","IsVisible","moveAfter","nodeId","previousNodeId","Navigation","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","queryText","extendQuery","Querytext","queryTemplate","QueryTemplate","sourceId","SourceId","EnableInterleaving","EnableStemming","TrimDuplicates","trimDuplicatesIncludeId","TrimDuplicatesIncludeId","EnableNicknames","EnableFQL","EnablePhonetic","BypassResultTypes","ProcessBestBets","EnableQueryRules","EnableSorting","GenerateBlockRankLog","rankingModelId","RankingModelId","startRow","StartRow","rowLimit","RowLimit","rowsPerPage","RowsPerPage","selectProperties","SelectProperties","culture","Culture","timeZoneId","TimeZoneId","refinementFilters","filters","RefinementFilters","refiners","Refiners","hiddenConstraints","constraints","HiddenConstraints","sortList","sorts","SortList","timeout","milliseconds","Timeout","hithighlightedProperties","HitHighlightedProperties","clientType","ClientType","personalizationData","PersonalizationData","resultsURL","ResultsUrl","queryTag","tags","QueryTag","Properties","ProcessPersonalFavorites","queryTemplatePropertiesUrl","QueryTemplatePropertiesUrl","reorderingRules","rules","ReorderingRules","hitHighlightedMultivaluePropertyLimit","limit","HitHighlightedMultivaluePropertyLimit","EnableOrderingHitHighlightedProperty","collapseSpecification","spec","CollapseSpecification","uiLanguage","lang","UILanguage","desiredSnippetLength","len","DesiredSnippetLength","maxSnippetLength","MaxSnippetLength","summaryLength","SummaryLength","toSearchQuery","formattedBody","fixupProp","HithighlightedProperties","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","res","cell","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","mapQueryToQueryString","querytext","personalCount","preQuery","hitHighlighting","capitalize","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","SPBatch","ParseResponse","statusRegExp","lines","split","state","line","parts","absoluteRequestUrl","batchBody","currentChangeSetId","castHeaders","Features","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","RelatedItemManagerImpl","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","RegionalSettings","InstalledLanguages","TimeZone","TimeZones","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","Webs","webPath","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","WebInfos","fromUrl","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","openWebById","webId","UserProfileQuery","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","String","fromCharCode","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","emailIDs","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","_baseUrl","searchSuggest","finalQuery","fm","__WEBPACK_IMPORTED_MODULE_0__src_pnpjs__","sp$1","__WEBPACK_IMPORTED_MODULE_3__pnp_sp__","SPRequestExecutorUndefinedException","SPRestAddIn","SPRequestExecutorClient","convertToResponse","spResponse","h","statusCode","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","entries","done","requestOptions","success","binaryStringRequestBody","executeAsync","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart"],"mappings":"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AAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,EAAqB,IAAK,WAAa,MAAOuT,GAAyC,IAC7GhV,EAAoBQ,EAAEiB,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","file":"pnpjs.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ConsoleListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FunctionListener; });\n/**\n@license\n * @pnp/logging v1.0.3-0 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry !== \"undefined\" && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\n\n//# sourceMappingURL=logging.es5.js.map\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return readBlobAsText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return readBlobAsArrayBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Dictionary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return deprecated; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return beta; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return UrlException; });\n/* unused harmony export setup */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return RuntimeConfigImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return RuntimeConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return mergeHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return mergeOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return FetchClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BearerTokenFetchClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return PnPClientStorageWrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return PnPClientStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return getCtxCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return dateAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return combinePaths; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return getRandomString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return getGUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return isFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return objectDefinedNotNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return extend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return isUrlAbsolute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return stringIsNullOrEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return Util; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_logging__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(2);\n/**\n@license\n * @pnp/common v1.0.3-0 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n\n\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    Object.defineProperty(Dictionary.prototype, \"count\", {\r\n        /**\r\n         * Gets a count of the items currently in the dictionary\r\n         */\r\n        get: function () {\r\n            return this.keys.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Dictionary;\r\n}());\n\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\nvar UrlException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */].log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(\"defaultCachingStore\", \"session\");\r\n        this._v.add(\"defaultCachingTimeoutSeconds\", 60);\r\n        this._v.add(\"globalCacheDisable\", false);\r\n        this._v.add(\"enableCacheExpiration\", false);\r\n        this._v.add(\"cacheExpirationIntervalMilliseconds\", 750);\r\n        this._v.add(\"spfxContext\", null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingStore\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingTimeoutSeconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(\"globalCacheDisable\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(\"enableCacheExpiration\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(\"cacheExpirationIntervalMilliseconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(\"spfxContext\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combinePaths() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (!Util.objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(function (v) { return check(target, v); })\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return typeof s === \"undefined\" || s === null || s.length < 1;\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = getCtxCallback;\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = dateAdd;\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = combinePaths;\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = getRandomString;\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    Util.getGUID = getGUID;\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param cf The thing to test for functionness\r\n     */\r\n    Util.isFunc = isFunc;\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = objectDefinedNotNull;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = isArray;\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = extend;\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = isUrlAbsolute;\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = stringIsNullOrEmpty;\r\n    return Util;\r\n}());\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (Util.objectDefinedNotNull(source)) {\r\n        var headers = Util.extend(target.headers || {}, source.headers);\r\n        target = Util.extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */].write(\"Enabling cache expiration.\", 1 /* Info */);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */].write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", 1 /* Info */);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = Util.dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */].write(\"Called cache expiration handler.\", 0 /* Verbose */);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(Util.getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */].log({\r\n                data: e,\r\n                level: 3 /* Error */,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\n\n//# sourceMappingURL=common.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = __extends;\n/* unused harmony export __assign */\n/* unused harmony export __rest */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = __decorate;\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* unused harmony export __awaiter */\n/* unused harmony export __generator */\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/* unused harmony export __makeTemplateObject */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return CachingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return CachingParserWrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return ProcessHttpClientResponseException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return ODataParserBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ODataDefaultParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return TextParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BlobParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return JSONParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return BufferParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return setResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return pipe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return requestPipelineMethod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return PipelineMethods; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return getDefaultPipeline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AlreadyInBatchException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return ODataQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return ODataBatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(0);\n/**\n@license\n * @pnp/odata v1.0.3-0 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n\n\n\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].dateAdd(new Date(), \"second\", __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* RuntimeConfig */].defaultCachingTimeoutSeconds);\r\n        this.storeName = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* RuntimeConfig */].defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* PnPClientStorage */]();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(_parser, _cacheOptions) {\r\n        this._parser = _parser;\r\n        this._cacheOptions = _cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        // add this to the cache based on the options\r\n        return this._parser.parse(response).then(function (data) {\r\n            if (_this._cacheOptions.store !== null) {\r\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                // handle all requests as text, then parse if they are not empty\r\n                r.text()\r\n                    .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                    .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\r\n                // the request to fail and log the error without parsing the body if anyone needs it for debugging\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({\r\n                    data: e,\r\n                    level: 2 /* Warning */,\r\n                    message: \"There was an error parsing the error response body. See data for details.\",\r\n                });\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: \"[[body not available]]\",\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (json.hasOwnProperty(\"d\")) {\r\n            if (json.d.hasOwnProperty(\"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (json.hasOwnProperty(\"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\n\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function () {\r\n    function TextParser() {\r\n    }\r\n    TextParser.prototype.parse = function (r) {\r\n        return r.text();\r\n    };\r\n    return TextParser;\r\n}());\r\nvar BlobParser = /** @class */ (function () {\r\n    function BlobParser() {\r\n    }\r\n    BlobParser.prototype.parse = function (r) {\r\n        return r.blob();\r\n    };\r\n    return BlobParser;\r\n}());\r\nvar JSONParser = /** @class */ (function () {\r\n    function JSONParser() {\r\n    }\r\n    JSONParser.prototype.parse = function (r) {\r\n        return r.json();\r\n    };\r\n    return JSONParser;\r\n}());\r\nvar BufferParser = /** @class */ (function () {\r\n    function BufferParser() {\r\n    }\r\n    BufferParser.prototype.parse = function (r) {\r\n        if (__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].isFunc(r.arrayBuffer)) {\r\n            return r.arrayBuffer();\r\n        }\r\n        return r.buffer();\r\n    };\r\n    return BufferParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({\r\n        data: context.result,\r\n        level: 0 /* Verbose */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    return next(context)\r\n        .then(function (ctx) { return returnResult(ctx); })\r\n        .catch(function (e) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(e);\r\n        throw e;\r\n    });\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({\r\n                data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.verb === \"GET\" && context.isCached) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (typeof context.cachingOptions !== \"undefined\") {\r\n                    cacheOptions = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any help batch dependency we are resolving from the cache\r\n                        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({\r\n                            data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        context.batchDependency();\r\n                        // handle the case where a parser needs to take special actions with a cached result (such as getAs)\r\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                context.batchDependency();\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar ODataQueryable = /** @class */ (function () {\r\n    function ODataQueryable() {\r\n        this._batch = null;\r\n        this._query = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* Dictionary */]();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    ODataQueryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    ODataQueryable.prototype.configure = function (options) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"v\" /* mergeOptions */])(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    ODataQueryable.prototype.usingCaching = function (options) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* RuntimeConfig */].globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (typeof options !== \"undefined\") {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    ODataQueryable.prototype.append = function (pathPart) {\r\n        this._url = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].combinePaths(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}());\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._requests = [];\r\n        this._dependencies = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._requests;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser) {\r\n        var info = {\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._requests.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        var promise = new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        });\r\n        this._dependencies.push(promise);\r\n        return resolver;\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\n\n//# sourceMappingURL=odata.es5.js.map\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_92\", function() { return util; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_86\", function() { return sp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_72\", function() { return graph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_90\", function() { return storage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_63\", function() { return config; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_76\", function() { return log; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_85\", function() { return setup; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_logging__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_config_store__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_graph__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pnp_sp_addinhelpers__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config_pnplibconfig__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pnp_sp__ = __webpack_require__(8);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"f\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"g\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"h\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"i\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"j\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"k\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"l\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"m\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"n\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"o\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"p\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"q\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"r\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"s\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"t\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"u\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"F\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"v\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"G\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"w\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"O\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"x\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"P\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"y\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"Q\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"z\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"R\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"A\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"T\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"B\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"U\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"C\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"W\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"D\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"X\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"E\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"Y\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"F\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"Z\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"G\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_0\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"H\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_6\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"I\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_7\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"J\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_8\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"K\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_12\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"L\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_13\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"M\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_15\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"N\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_16\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"O\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_17\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"P\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_18\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"Q\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_19\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"R\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_22\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"S\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_24\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"T\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_25\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"U\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_27\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"V\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_28\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"W\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_29\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"X\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_30\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"Y\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_31\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"Z\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_32\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_0\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_34\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_1\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_35\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_2\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_36\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_3\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_37\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_4\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_38\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_5\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_39\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_6\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_40\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_7\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_41\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_8\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_42\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_9\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_43\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_10\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_44\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_11\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_45\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_12\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_46\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_13\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_47\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_14\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_48\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_15\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_49\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_16\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_50\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_17\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_53\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_18\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_55\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_19\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_56\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_20\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_57\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_21\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_58\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_22\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_59\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_23\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_60\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_24\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_87\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_25\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_88\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_26\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_89\", function() { return __WEBPACK_IMPORTED_MODULE_6__pnp_sp__[\"_27\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"I\", function() { return __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"J\", function() { return __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"K\", function() { return __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"L\", function() { return __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"M\", function() { return __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"N\", function() { return __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"f\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_26\", function() { return __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"g\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_10\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_11\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_20\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_21\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"g\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_52\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"h\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_54\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_61\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"j\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_62\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"k\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_64\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"l\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_66\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"m\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_67\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"n\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_68\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"o\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_70\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"p\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_71\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_73\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_74\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"s\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_75\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"t\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_77\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_78\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"v\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_79\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"w\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_81\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"x\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_82\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"y\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_91\", function() { return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"z\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"H\", function() { return __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"V\", function() { return __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_2__pnp_config_store__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_1\", function() { return __WEBPACK_IMPORTED_MODULE_2__pnp_config_store__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_23\", function() { return __WEBPACK_IMPORTED_MODULE_2__pnp_config_store__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_33\", function() { return __WEBPACK_IMPORTED_MODULE_2__pnp_config_store__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pnp_odata__ = __webpack_require__(3);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"S\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"f\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_2\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"g\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_3\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"h\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_4\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"i\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_5\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"j\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_9\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"k\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_14\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"l\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_51\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"m\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_69\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"n\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_80\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"o\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_83\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"p\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"_84\", function() { return __WEBPACK_IMPORTED_MODULE_7__pnp_odata__[\"q\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\r\n */\r\n/**\r\n * Re-export everything from the dependencies to match the previous pattern\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Utility methods\r\n */\r\nvar util = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */];\r\n/**\r\n * Provides access to the SharePoint REST interface\r\n */\r\nvar sp = __WEBPACK_IMPORTED_MODULE_4__pnp_sp_addinhelpers__[\"a\" /* sp */];\r\n/**\r\n * Provides access to the Microsoft Graph REST interface\r\n */\r\nvar graph = __WEBPACK_IMPORTED_MODULE_3__pnp_graph__[\"h\" /* graph */];\r\n/**\r\n * Provides access to local and session storage\r\n */\r\nvar storage = new __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"d\" /* PnPClientStorage */]();\r\n/**\r\n * Global configuration instance to which providers can be added\r\n */\r\nvar config = new __WEBPACK_IMPORTED_MODULE_2__pnp_config_store__[\"d\" /* Settings */]();\r\n/**\r\n * Global logging instance to which subscribers can be registered and messages written\r\n */\r\nvar log = __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"c\" /* Logger */];\r\n/**\r\n * Allows for the configuration of the library\r\n */\r\nvar setup = __WEBPACK_IMPORTED_MODULE_5__config_pnplibconfig__[\"a\" /* setup */];\r\n// /**\r\n//  * Expose a subset of classes from the library for public consumption\r\n//  */\r\n// creating this class instead of directly assigning to default fixes issue #116\r\nvar Def = {\r\n    /**\r\n     * Global configuration instance to which providers can be added\r\n     */\r\n    config: config,\r\n    /**\r\n     * Provides access to the Microsoft Graph REST interface\r\n     */\r\n    graph: graph,\r\n    /**\r\n     * Global logging instance to which subscribers can be registered and messages written\r\n     */\r\n    log: log,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    setup: setup,\r\n    /**\r\n     * Provides access to the REST interface\r\n     */\r\n    sp: sp,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    storage: storage,\r\n    /**\r\n     * Utility methods\r\n     */\r\n    util: util,\r\n};\r\n/**\r\n * Enables use of the import pnp from syntax\r\n */\r\n/* harmony default export */ __webpack_exports__[\"_65\"] = (Def);\r\n//# sourceMappingURL=pnpjs.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return Settings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CachingConfigurationProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return SPListConfigurationProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NoCacheAvailableException; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(0);\n/**\n@license\n * @pnp/config-store v1.0.3-0 - pnp - provides a way to manage configuration within your application\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n\n\n\n\n/**\r\n * Class used to manage the current application settings\r\n *\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the settings class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Settings() {\r\n        this._settings = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* Dictionary */]();\r\n    }\r\n    /**\r\n     * Adds a new single setting, or overwrites a previous setting with the same key\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {string} value The setting value to store\r\n     */\r\n    Settings.prototype.add = function (key, value) {\r\n        this._settings.add(key, value);\r\n    };\r\n    /**\r\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {any} value The setting value to store\r\n     */\r\n    Settings.prototype.addJSON = function (key, value) {\r\n        this._settings.add(key, JSON.stringify(value));\r\n    };\r\n    /**\r\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\r\n     *\r\n     * @param {TypedHash<any>} hash The set of values to add\r\n     */\r\n    Settings.prototype.apply = function (hash) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                _this._settings.merge(hash);\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\r\n     *\r\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\r\n     */\r\n    Settings.prototype.load = function (provider) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            provider.getConfiguration().then(function (value) {\r\n                _this._settings.merge(value);\r\n                resolve();\r\n            }).catch(function (reason) {\r\n                reject(reason);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a value from the configuration\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {string} string value from the configuration\r\n     */\r\n    Settings.prototype.get = function (key) {\r\n        return this._settings.get(key);\r\n    };\r\n    /**\r\n     * Gets a JSON value, rehydrating the stored string to the original object\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {any} object from the configuration\r\n     */\r\n    Settings.prototype.getJSON = function (key) {\r\n        var o = this.get(key);\r\n        if (typeof o === \"undefined\" || o === null) {\r\n            return o;\r\n        }\r\n        return JSON.parse(o);\r\n    };\r\n    return Settings;\r\n}());\n\nvar NoCacheAvailableException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NoCacheAvailableException, _super);\r\n    function NoCacheAvailableException(msg) {\r\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"NoCacheAvailableException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return NoCacheAvailableException;\r\n}(Error));\n\n/**\r\n * A caching provider which can wrap other non-caching providers\r\n *\r\n */\r\nvar CachingConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new caching configuration provider\r\n     * @constructor\r\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\r\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\r\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\r\n     */\r\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\r\n        this.cacheKey = \"_configcache_\" + cacheKey;\r\n    }\r\n    /**\r\n     * Gets the wrapped configuration providers\r\n     *\r\n     * @return {IConfigurationProvider} Wrapped configuration provider\r\n     */\r\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\r\n        return this.wrappedProvider;\r\n    };\r\n    /**\r\n     * Loads the configuration values either from the cache or from the wrapped provider\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        // Cache not available, pass control to  the wrapped provider\r\n        if ((!this.store) || (!this.store.enabled)) {\r\n            return this.wrappedProvider.getConfiguration();\r\n        }\r\n        // Value is found in cache, return it directly\r\n        var cachedConfig = this.store.get(this.cacheKey);\r\n        if (cachedConfig) {\r\n            return new Promise(function (resolve) {\r\n                resolve(cachedConfig);\r\n            });\r\n        }\r\n        // Get and cache value from the wrapped provider\r\n        var providerPromise = this.wrappedProvider.getConfiguration();\r\n        providerPromise.then(function (providedConfig) {\r\n            _this.store.put(_this.cacheKey, providedConfig);\r\n        });\r\n        return providerPromise;\r\n    };\r\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\r\n        var pnpCache = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* PnPClientStorage */]();\r\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\r\n            return pnpCache.local;\r\n        }\r\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\r\n            return pnpCache.session;\r\n        }\r\n        throw new NoCacheAvailableException();\r\n    };\r\n    return CachingConfigurationProvider;\r\n}());\n\n/**\r\n * A configuration provider which loads configuration values from a SharePoint list\r\n *\r\n */\r\nvar SPListConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new SharePoint list based configuration provider\r\n     * @constructor\r\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\r\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default: \"config\")\r\n     * @param {string} keyFieldName The name of the field in the list to use as the setting key (optional, default: \"Title\")\r\n     * @param {string} valueFieldName The name of the field in the list to use as the setting value (optional, default: \"Value\")\r\n     */\r\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle, keyFieldName, valueFieldName) {\r\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\r\n        if (keyFieldName === void 0) { keyFieldName = \"Title\"; }\r\n        if (valueFieldName === void 0) { valueFieldName = \"Value\"; }\r\n        this.sourceWeb = sourceWeb;\r\n        this.sourceListTitle = sourceListTitle;\r\n        this.keyFieldName = keyFieldName;\r\n        this.valueFieldName = valueFieldName;\r\n    }\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\r\n        /**\r\n         * Gets the url of the SharePoint site, where the configuration list is located\r\n         *\r\n         * @return {string} Url address of the site\r\n         */\r\n        get: function () {\r\n            return this.sourceWeb;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\r\n        /**\r\n         * Gets the title of the SharePoint list, which contains the configuration settings\r\n         *\r\n         * @return {string} List title\r\n         */\r\n        get: function () {\r\n            return this.sourceListTitle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads the configuration values from the SharePoint list\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        return this.web.lists.getByTitle(this.listTitle).items.select(this.keyFieldName, this.valueFieldName)\r\n            .get().then(function (data) { return data.reduce(function (c, item) {\r\n            return Object.defineProperty(c, item[_this.keyFieldName], {\r\n                configurable: false,\r\n                enumerable: false,\r\n                value: item[_this.valueFieldName],\r\n                writable: false,\r\n            });\r\n        }, {}); });\r\n    };\r\n    /**\r\n     * Wraps the current provider in a cache enabled provider\r\n     *\r\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\r\n     */\r\n    SPListConfigurationProvider.prototype.asCaching = function () {\r\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\r\n        return new CachingConfigurationProvider(this, cacheKey);\r\n    };\r\n    return SPListConfigurationProvider;\r\n}());\n\n\n//# sourceMappingURL=config-store.es5.js.map\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return graph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return GraphRest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GraphBatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return GraphQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return GraphQueryableCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return GraphQueryableInstance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return GraphQueryableSearchableCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return SPfxClient; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_odata__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_logging__ = __webpack_require__(0);\n/**\n@license\n * @pnp/graph v1.0.3-0 - pnp - provides functionality to query the Microsoft Graph\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n\n\n\n\n\nvar SPfxClient = /** @class */ (function () {\r\n    function SPfxClient(_client, _configuration) {\r\n        if (_configuration === void 0) { _configuration = {}; }\r\n        this._client = _client;\r\n        this._configuration = _configuration;\r\n    }\r\n    SPfxClient.prototype.fetch = function (url, options) {\r\n        return this._client.fetch(url, this._configuration, options);\r\n    };\r\n    return SPfxClient;\r\n}());\n\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].extend(config);\r\n}\r\nvar NoGraphClientAvailableException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NoGraphClientAvailableException, _super);\r\n    function NoGraphClientAvailableException(msg) {\r\n        if (msg === void 0) { msg = \"There is no Graph Client available, either set one using configuraiton or provide a valid SPFx Context using setup.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"NoGraphClientAvailableException\";\r\n        __WEBPACK_IMPORTED_MODULE_3__pnp_logging__[\"c\" /* Logger */].log({ data: null, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return NoGraphClientAvailableException;\r\n}(Error));\r\nvar GraphRuntimeConfigImpl = /** @class */ (function () {\r\n    function GraphRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var graphPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].get(\"graph\");\r\n            if (graphPart !== null && typeof graphPart !== \"undefined\" && typeof graphPart.headers !== \"undefined\") {\r\n                return graphPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var graphPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].get(\"graph\");\r\n            // use a configured factory firt\r\n            if (typeof graphPart !== \"undefined\" && typeof graphPart.fetchClientFactory !== \"undefined\") {\r\n                return graphPart.fetchClientFactory;\r\n            }\r\n            // then try and use spfx context if available\r\n            if (typeof __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].spfxContext !== \"undefined\") {\r\n                return function () { return new SPfxClient(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].spfxContext.graphHttpClient); };\r\n            }\r\n            throw new NoGraphClientAvailableException();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphRuntimeConfigImpl;\r\n}());\r\nvar GraphRuntimeConfig = new GraphRuntimeConfigImpl();\n\nvar GraphHttpClient = /** @class */ (function () {\r\n    function GraphHttpClient() {\r\n        this._impl = GraphRuntimeConfig.fetchClientFactory();\r\n    }\r\n    GraphHttpClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(headers, GraphRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(headers, options.headers);\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { headers: headers });\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(rawHeaders, options.headers);\r\n        options = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    GraphHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return GraphHttpClient;\r\n}());\n\n/**\r\n * Queryable Base Class\r\n *\r\n */\r\nvar GraphQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(GraphQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the Queryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or Queryable that should form the base part of the url\r\n     *\r\n     */\r\n    function GraphQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            var urlStr = baseUrl;\r\n            _this._parentUrl = urlStr;\r\n            _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(urlStr, path);\r\n        }\r\n        else {\r\n            var q = baseUrl;\r\n            _this._parentUrl = q._url;\r\n            _this._options = q._options;\r\n            _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(_this._parentUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new queryable\r\n     */\r\n    GraphQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    GraphQueryable.prototype.toUrlAndQuery = function () {\r\n        var _this = this;\r\n        return this.toUrl() + (\"?\" + this._query.getKeys().map(function (key) { return key + \"=\" + _this._query.get(key); }).join(\"&\"));\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        return new factory(baseUrl, path);\r\n    };\r\n    /**\r\n     * Clones this queryable into a new queryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        // TODO:: include batching info in clone\r\n        if (includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        if (options === void 0) { options = {}; }\r\n        // TODO:: add batch support\r\n        return Promise.resolve({\r\n            batch: this.batch,\r\n            batchDependency: function () { return void (0); },\r\n            cachingOptions: this._cachingOptions,\r\n            clientFactory: function () { return new GraphHttpClient(); },\r\n            isBatched: this.hasBatch,\r\n            isCached: this._useCaching,\r\n            options: options,\r\n            parser: parser,\r\n            pipeline: pipeline,\r\n            requestAbsoluteUrl: this.toUrlAndQuery(),\r\n            requestId: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].getGUID(),\r\n            verb: verb,\r\n        });\r\n    };\r\n    return GraphQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"j\" /* ODataQueryable */]));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar GraphQueryableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(GraphQueryableCollection, _super);\r\n    function GraphQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    GraphQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        var _this = this;\r\n        if (ascending === void 0) { ascending = true; }\r\n        var query = this._query.getKeys().filter(function (k) { return k === \"$orderby\"; }).map(function (k) { return _this._query.get(k); });\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    GraphQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips a set number of items in the return set\r\n     *\r\n     * @param num Number of items to skip\r\n     */\r\n    GraphQueryableCollection.prototype.skip = function (num) {\r\n        this._query.add(\"$top\", num.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableCollection.prototype.skipToken = function (token) {\r\n        this._query.add(\"$skiptoken\", token);\r\n        return this;\r\n    };\r\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\r\n        /**\r\n         * \tRetrieves the total count of matching resources\r\n         */\r\n        get: function () {\r\n            this._query.add(\"$count\", \"true\");\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphQueryableCollection;\r\n}(GraphQueryable));\r\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(GraphQueryableSearchableCollection, _super);\r\n    function GraphQueryableSearchableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\r\n        this._query.add(\"$search\", query);\r\n        return this;\r\n    };\r\n    return GraphQueryableSearchableCollection;\r\n}(GraphQueryableCollection));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar GraphQueryableInstance = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(GraphQueryableInstance, _super);\r\n    function GraphQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return GraphQueryableInstance;\r\n}(GraphQueryable));\n\nvar Members = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Members, _super);\r\n    function Members(baseUrl, path) {\r\n        if (path === void 0) { path = \"members\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\r\n     * the members navigation property. You can add users or other groups.\r\n     * Important: You can add only users to Office 365 groups.\r\n     *\r\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\r\n     */\r\n    Members.prototype.add = function (id) {\r\n        return this.clone(Members, \"$ref\").postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Members.prototype.getById = function (id) {\r\n        return new Member(this, id);\r\n    };\r\n    return Members;\r\n}(GraphQueryableCollection));\r\nvar Member = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Member, _super);\r\n    function Member() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Member;\r\n}(GraphQueryableInstance));\r\nvar Owners = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Owners, _super);\r\n    function Owners(baseUrl, path) {\r\n        if (path === void 0) { path = \"owners\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Owners;\r\n}(Members));\n\n// import { Attachments } from \"./attachments\";\r\nvar Calendars = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Calendars, _super);\r\n    function Calendars(baseUrl, path) {\r\n        if (path === void 0) { path = \"calendars\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Calendars;\r\n}(GraphQueryableCollection));\r\nvar Calendar = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Calendar, _super);\r\n    function Calendar() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Calendar.prototype, \"events\", {\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Calendar;\r\n}(GraphQueryableInstance));\r\nvar Events = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Events, _super);\r\n    function Events(baseUrl, path) {\r\n        if (path === void 0) { path = \"events\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Events.prototype.getById = function (id) {\r\n        return new Event(this, id);\r\n    };\r\n    /**\r\n     * Adds a new event to the collection\r\n     *\r\n     * @param properties The set of properties used to create the event\r\n     */\r\n    Events.prototype.add = function (properties) {\r\n        var _this = this;\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                event: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Events;\r\n}(GraphQueryableCollection));\r\nvar Event = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Event, _super);\r\n    function Event() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // TODO:: when supported\r\n    // /**\r\n    //  * Gets the collection of attachments for this event\r\n    //  */\r\n    // public get attachments(): Attachments {\r\n    //     return new Attachments(this);\r\n    // }\r\n    /**\r\n     * Update the properties of an event object\r\n     *\r\n     * @param properties Set of properties of this event to update\r\n     */\r\n    Event.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this event\r\n     */\r\n    Event.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Event;\r\n}(GraphQueryableInstance));\n\nvar Attachments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Attachments, _super);\r\n    function Attachments(baseUrl, path) {\r\n        if (path === void 0) { path = \"attachments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    Attachments.prototype.getById = function (id) {\r\n        return new Attachment(this, id);\r\n    };\r\n    /**\r\n     * Add attachment to this collection\r\n     *\r\n     * @param name Name given to the attachment file\r\n     * @param bytes File content\r\n     */\r\n    Attachments.prototype.addFile = function (name, bytes) {\r\n        return this.postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\r\n                contentBytes: bytes,\r\n                name: name,\r\n            }),\r\n        });\r\n    };\r\n    return Attachments;\r\n}(GraphQueryableCollection));\r\nvar Attachment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Attachment, _super);\r\n    function Attachment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Attachment;\r\n}(GraphQueryableInstance));\n\nvar Conversations = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Conversations, _super);\r\n    function Conversations(baseUrl, path) {\r\n        if (path === void 0) { path = \"conversations\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Create a new conversation by including a thread and a post.\r\n     *\r\n     * @param properties Properties used to create the new conversation\r\n     */\r\n    Conversations.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a conversation from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Conversations.prototype.getById = function (id) {\r\n        return new Conversation(this, id);\r\n    };\r\n    return Conversations;\r\n}(GraphQueryableCollection));\r\nvar Threads = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Threads, _super);\r\n    function Threads(baseUrl, path) {\r\n        if (path === void 0) { path = \"threads\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Threads.prototype.getById = function (id) {\r\n        return new Thread(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Threads.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    return Threads;\r\n}(GraphQueryableCollection));\r\nvar Posts = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Posts, _super);\r\n    function Posts(baseUrl, path) {\r\n        if (path === void 0) { path = \"posts\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Posts.prototype.getById = function (id) {\r\n        return new Post(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Posts.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    return Posts;\r\n}(GraphQueryableCollection));\r\nvar Conversation = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Conversation, _super);\r\n    function Conversation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Conversation.prototype, \"threads\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Threads(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this conversation\r\n     */\r\n    Conversation.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Conversation.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Conversation;\r\n}(GraphQueryableInstance));\r\nvar Thread = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Thread.prototype, \"posts\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Posts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Thread.prototype.reply = function (post) {\r\n        return this.clone(Thread, \"reply\").postCore({\r\n            body: JSON.stringify({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Thread.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Thread;\r\n}(GraphQueryableInstance));\r\nvar Post = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Post, _super);\r\n    function Post() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Post.prototype, \"attachments\", {\r\n        get: function () {\r\n            return new Attachments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this post\r\n     */\r\n    Post.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Forward a post to a recipient\r\n     */\r\n    Post.prototype.forward = function (info) {\r\n        return this.clone(Post, \"forward\").postCore({\r\n            body: JSON.stringify(info),\r\n        });\r\n    };\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Post.prototype.reply = function (post) {\r\n        return this.clone(Post, \"reply\").postCore({\r\n            body: JSON.stringify({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    return Post;\r\n}(GraphQueryableInstance));\r\nvar Senders = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Senders, _super);\r\n    function Senders(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Add a new user or group to this senders collection\r\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.add = function (id) {\r\n        return this.clone(Senders, \"$ref\").postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the entity from the collection\r\n     *\r\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.remove = function (id) {\r\n        var remover = this.clone(Senders, \"$ref\");\r\n        remover.query.add(\"$id\", id);\r\n        return remover.deleteCore();\r\n    };\r\n    return Senders;\r\n}(GraphQueryableCollection));\n\nvar Plans = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Plans, _super);\r\n    function Plans(baseUrl, path) {\r\n        if (path === void 0) { path = \"planner/plans\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a plan from this collection by id\r\n     *\r\n     * @param id Plan's id\r\n     */\r\n    Plans.prototype.getById = function (id) {\r\n        return new Plan(this, id);\r\n    };\r\n    return Plans;\r\n}(GraphQueryableCollection));\r\nvar Plan = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Plan, _super);\r\n    function Plan() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Plan;\r\n}(GraphQueryableInstance));\n\nvar Photo = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Photo, _super);\r\n    function Photo(baseUrl, path) {\r\n        if (path === void 0) { path = \"photo\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the image bytes as a blob (browser)\r\n     */\r\n    Photo.prototype.getBlob = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"b\" /* BlobParser */]());\r\n    };\r\n    /**\r\n     * Gets the image file byets as a Buffer (node.js)\r\n     */\r\n    Photo.prototype.getBuffer = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"c\" /* BufferParser */]());\r\n    };\r\n    /**\r\n     * Sets the file bytes\r\n     *\r\n     * @param content Image file contents, max 4 MB\r\n     */\r\n    Photo.prototype.setContent = function (content) {\r\n        return this.clone(Photo, \"$value\", false).patchCore({\r\n            body: content,\r\n        });\r\n    };\r\n    return Photo;\r\n}(GraphQueryableInstance));\n\nvar GroupType;\r\n(function (GroupType) {\r\n    /**\r\n     * Office 365 (aka unified group)\r\n     */\r\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\r\n    /**\r\n     * Dynamic membership\r\n     */\r\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\r\n    /**\r\n     * Security\r\n     */\r\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\r\n})(GroupType || (GroupType = {}));\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Groups = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Groups, _super);\r\n    function Groups(baseUrl, path) {\r\n        if (path === void 0) { path = \"groups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a group from the collection using the specified id\r\n     *\r\n     * @param id Id of the group to get from this collection\r\n     */\r\n    Groups.prototype.getById = function (id) {\r\n        return new Group(this, id);\r\n    };\r\n    /**\r\n     * Create a new group as specified in the request body.\r\n     *\r\n     * @param name Name to display in the address book for the group\r\n     * @param mailNickname Mail alias for the group\r\n     * @param groupType Type of group being created\r\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\r\n     */\r\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            displayName: name,\r\n            mailEnabled: groupType === GroupType.Office365,\r\n            mailNickname: mailNickname,\r\n            securityEnabled: groupType !== GroupType.Office365,\r\n        }, additionalProperties);\r\n        // include a group type if required\r\n        if (groupType !== GroupType.Security) {\r\n            postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(postBody, {\r\n                groupTypes: [groupType === GroupType.Office365 ? \"Unified\" : \"DynamicMembership\"],\r\n            });\r\n        }\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                group: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Groups;\r\n}(GraphQueryableCollection));\r\n/**\r\n * Represents a group entity\r\n */\r\nvar Group = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Group.prototype, \"caldendar\", {\r\n        /**\r\n         * The calendar associated with this group\r\n         */\r\n        get: function () {\r\n            return new Calendar(this, \"calendar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"events\", {\r\n        /**\r\n         * Retrieve a list of event objects\r\n         */\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"owners\", {\r\n        /**\r\n         * Gets the collection of owners for this group\r\n         */\r\n        get: function () {\r\n            return new Owners(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"plans\", {\r\n        /**\r\n         * The collection of plans for this group\r\n         */\r\n        get: function () {\r\n            return new Plans(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"members\", {\r\n        /**\r\n         * Gets the collection of members for this group\r\n         */\r\n        get: function () {\r\n            return new Members(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"conversations\", {\r\n        /**\r\n         * Gets the conversations collection for this group\r\n         */\r\n        get: function () {\r\n            return new Conversations(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\r\n        /**\r\n         * Gets the collection of accepted senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"acceptedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\r\n        /**\r\n         * Gets the collection of rejected senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"rejectedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"photo\", {\r\n        /**\r\n         * The photo associated with the group\r\n         */\r\n        get: function () {\r\n            return new Photo(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.addFavorite = function () {\r\n        return this.clone(Group, \"addFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Return all the groups that the specified group is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(Group, \"getMemberGroups\").postCore({\r\n            body: JSON.stringify({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this group\r\n     */\r\n    Group.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a group object\r\n     *\r\n     * @param properties Set of properties of this group to update\r\n     */\r\n    Group.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.removeFavorite = function () {\r\n        return this.clone(Group, \"removeFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\r\n     */\r\n    Group.prototype.resetUnseenCount = function () {\r\n        return this.clone(Group, \"resetUnseenCount\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will enable the current user to receive email notifications for this group,\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.subscribeByMail = function () {\r\n        return this.clone(Group, \"subscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will prevent the current user from receiving email notifications for this group\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.unsubscribeByMail = function () {\r\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\r\n     *\r\n     * @param start Start date and time of the time range\r\n     * @param end End date and time of the time range\r\n     */\r\n    Group.prototype.getCalendarView = function (start, end) {\r\n        var view = this.clone(Group, \"calendarView\");\r\n        view.query.add(\"startDateTime\", start.toISOString());\r\n        view.query.add(\"endDateTime\", end.toISOString());\r\n        return view.get();\r\n    };\r\n    return Group;\r\n}(GraphQueryableInstance));\n\n// import { Me } from \"./me\";\r\n/**\r\n * Root object wrapping v1 functionality for MS Graph\r\n *\r\n */\r\nvar V1 = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(V1, _super);\r\n    /**\r\n     * Creates a new instance of the V1 class\r\n     *\r\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\r\n     * @param path Optional additional path\r\n     */\r\n    function V1(baseUrl, path) {\r\n        if (path === void 0) { path = \"v1.0\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(V1.prototype, \"groups\", {\r\n        get: function () {\r\n            return new Groups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return V1;\r\n}(GraphQueryable));\n\nvar GraphRest = /** @class */ (function () {\r\n    function GraphRest() {\r\n    }\r\n    Object.defineProperty(GraphRest.prototype, \"v1\", {\r\n        get: function () {\r\n            return new V1(\"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    return GraphRest;\r\n}());\r\nvar graph = new GraphRest();\n\nvar GraphBatchParseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(GraphBatchParseException, _super);\r\n    function GraphBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"GraphBatchParseException\";\r\n        __WEBPACK_IMPORTED_MODULE_3__pnp_logging__[\"c\" /* Logger */].log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return GraphBatchParseException;\r\n}(Error));\r\nvar GraphBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(GraphBatch, _super);\r\n    function GraphBatch(batchUrl) {\r\n        if (batchUrl === void 0) { batchUrl = \"https://graph.microsoft.com/beta/$batch\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.batchUrl = batchUrl;\r\n        return _this;\r\n    }\r\n    GraphBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_3__pnp_logging__[\"c\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        var client = new GraphHttpClient();\r\n        var batchRequest = {\r\n            requests: this.formatRequests(),\r\n        };\r\n        var batchOptions = {\r\n            \"body\": JSON.stringify(batchRequest),\r\n            \"headers\": {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            \"method\": \"POST\",\r\n        };\r\n        __WEBPACK_IMPORTED_MODULE_3__pnp_logging__[\"c\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // let nextLinkFlag = false;\r\n        return client.fetch(this.batchUrl, batchOptions)\r\n            .then(function (r) { return r.json(); })\r\n            .then(this._parseResponse)\r\n            .then(function (parsedResponse) {\r\n            __WEBPACK_IMPORTED_MODULE_3__pnp_logging__[\"c\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return parsedResponse.responses.reduce(function (chain, response, index) {\r\n                var request = _this.requests[index];\r\n                if (__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].objectDefinedNotNull(request)) {\r\n                    __WEBPACK_IMPORTED_MODULE_3__pnp_logging__[\"c\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }\r\n                else {\r\n                    // do we have a next url? if no this is an error\r\n                    if (parsedResponse.nextLink) {\r\n                        throw new GraphBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                    }\r\n                    // nextLinkFlag = true;\r\n                    // keep the chain moving, but don't add anything for this request yet\r\n                    // here we need to process the next link - so what do we do?\r\n                    // need to append a .then()\r\n                    // TODO::\r\n                    return chain;\r\n                }\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    GraphBatch.prototype.formatRequests = function () {\r\n        return this.requests.map(function (reqInfo, index) {\r\n            var requestFragment = {\r\n                id: \"\" + ++index,\r\n                method: reqInfo.method,\r\n                url: reqInfo.url,\r\n            };\r\n            var headers = {};\r\n            // merge global config headers\r\n            if (typeof GraphRuntimeConfig.headers !== \"undefined\" && GraphRuntimeConfig.headers !== null) {\r\n                headers = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(headers, GraphRuntimeConfig.headers);\r\n            }\r\n            if (typeof reqInfo.options !== \"undefined\") {\r\n                // merge per request headers\r\n                if (typeof reqInfo.options.headers !== \"undefined\" && reqInfo.options.headers !== null) {\r\n                    headers = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(headers, reqInfo.options.headers);\r\n                }\r\n                // add a request body\r\n                if (typeof reqInfo.options.body !== \"undefined\" && reqInfo.options.body !== null) {\r\n                    requestFragment = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(requestFragment, {\r\n                        body: reqInfo.options.body,\r\n                    });\r\n                }\r\n            }\r\n            requestFragment = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(requestFragment, {\r\n                headers: headers,\r\n            });\r\n            return requestFragment;\r\n        });\r\n    };\r\n    GraphBatch.prototype._parseResponse = function (graphResponse) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var parsedResponses = new Array(_this.requests.length).fill(null);\r\n            for (var i = 0; i < graphResponse.responses.length; ++i) {\r\n                var response = graphResponse.responses[i];\r\n                // we create the request id by adding 1 to the index, so we place the response by subtracting one to match\r\n                // the array of requests and make it easier to map them by index\r\n                var responseId = parseInt(response.id, 10) - 1;\r\n                if (response.status === 204) {\r\n                    parsedResponses[responseId] = new Response();\r\n                }\r\n                else {\r\n                    parsedResponses[responseId] = new Response(null, {\r\n                        headers: response.headers,\r\n                        status: response.status,\r\n                    });\r\n                }\r\n            }\r\n            resolve({\r\n                nextLink: graphResponse.nextLink,\r\n                responses: parsedResponses,\r\n            });\r\n        });\r\n    };\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */])([\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"j\" /* beta */])(\"Graph batching functionality is in beta.\")\r\n    ], GraphBatch.prototype, \"executeImpl\", null);\r\n    return GraphBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"g\" /* ODataBatch */]));\n\n\n//# sourceMappingURL=graph.es5.js.map\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_25\", function() { return spExtractODataId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_26\", function() { return spODataEntity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_27\", function() { return spODataEntityArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_1\", function() { return SharePointQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_3\", function() { return SharePointQueryableInstance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_2\", function() { return SharePointQueryableCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_4\", function() { return SharePointQueryableSecurable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return FileFolderShared; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_5\", function() { return SharePointQueryableShareable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_6\", function() { return SharePointQueryableShareableFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_7\", function() { return SharePointQueryableShareableFolder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_8\", function() { return SharePointQueryableShareableItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_9\", function() { return SharePointQueryableShareableWeb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return AppCatalog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return App; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return Field; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return Fields; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return CheckinType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_24\", function() { return WebPartsPersonalizationScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return MoveOperations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_17\", function() { return TemplateFileType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return File; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return Files; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return Folder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return Folders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"S\", function() { return SPHttpClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return Item; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return Items; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return ItemVersion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return ItemVersions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"J\", function() { return PagedItemCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"G\", function() { return NavigationNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F\", function() { return NavigationNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H\", function() { return NavigationService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return List; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return Lists; });\n/* unused harmony export sp */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"T\", function() { return SPRest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Q\", function() { return RoleDefinitionBindings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"V\", function() { return Search; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"X\", function() { return SearchQueryBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Y\", function() { return SearchResults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_16\", function() { return SortDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"P\", function() { return ReorderingRuleMatchType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"N\", function() { return QueryPropertyValueType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W\", function() { return SearchBuiltInSourceId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Z\", function() { return SearchSuggest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_0\", function() { return SearchSuggestResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_14\", function() { return Site; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_19\", function() { return UtilityMethod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_23\", function() { return WebPartDefinitions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_22\", function() { return WebPartDefinition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_21\", function() { return WebPart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_20\", function() { return Web; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return ClientSidePage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return CanvasSection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return CanvasControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return CanvasColumn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return ClientSideText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return ClientSideWebpart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_15\", function() { return SocialQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return MySocialQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return ControlMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return FieldTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return DateTimeFieldFormatType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AddFieldOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return CalendarType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_18\", function() { return UrlFieldFormatType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"K\", function() { return PermissionKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"M\", function() { return PrincipalType$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L\", function() { return PrincipalSource; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"R\", function() { return RoleType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"I\", function() { return PageType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_11\", function() { return SharingLinkKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_13\", function() { return SharingRole; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_12\", function() { return SharingOperationStatusCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"U\", function() { return SPSharedObjectType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_10\", function() { return SharingDomainRestrictionMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"O\", function() { return RenderListDataOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return FieldUserSelectionMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return ChoiceFieldFormatType; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_odata__ = __webpack_require__(3);\n/**\n@license\n * @pnp/sp v1.0.3-0 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n\n\n\n\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (candidateUrl === null) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nvar SPBatchParseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPBatchParseException, _super);\r\n    function SPBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"BatchParseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return SPBatchParseException;\r\n}(Error));\r\nvar SPODataIdException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPODataIdException, _super);\r\n    function SPODataIdException(data, msg) {\r\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.data = data;\r\n        _this.name = \"ODataIdException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return SPODataIdException;\r\n}(Error));\r\nvar MaxCommentLengthException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(MaxCommentLengthException, _super);\r\n    function MaxCommentLengthException(msg) {\r\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"MaxCommentLengthException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return MaxCommentLengthException;\r\n}(Error));\r\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NotSupportedInBatchException, _super);\r\n    function NotSupportedInBatchException(operation) {\r\n        if (operation === void 0) { operation = \"This operation\"; }\r\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\r\n        _this.name = \"NotSupportedInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return NotSupportedInBatchException;\r\n}(Error));\r\nvar APIUrlException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(APIUrlException, _super);\r\n    function APIUrlException(msg) {\r\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"APIUrlException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return APIUrlException;\r\n}(Error));\n\nfunction spExtractODataId(candidate) {\r\n    if (candidate.hasOwnProperty(\"odata.id\")) {\r\n        return candidate[\"odata.id\"];\r\n    }\r\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\r\n        return candidate.__metadata.id;\r\n    }\r\n    else {\r\n        throw new SPODataIdException(candidate);\r\n    }\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(spGetEntityUrl(d), null);\r\n            return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(spGetEntityUrl(d), null);\r\n            return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spGetEntityUrl(v), null);\r\n                return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spGetEntityUrl(v), null);\r\n                return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nfunction spGetEntityUrl(entity) {\r\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\r\n        // we are dealign with minimal metadata (default)\r\n        return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\r\n    }\r\n    else if (entity.hasOwnProperty(\"__metadata\")) {\r\n        // we are dealing with verbose, which has an absolute uri\r\n        return entity.__metadata.uri;\r\n    }\r\n    else {\r\n        // we are likely dealing with nometadata, so don't error but we won't be able to\r\n        // chain off these objects\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n}\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== null && typeof spPart !== \"undefined\" && typeof spPart.headers !== \"undefined\") {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== null && typeof spPart.baseUrl !== \"undefined\") {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].spfxContext !== null) {\r\n                return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* RuntimeConfig */].get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== null && typeof spPart.fetchClientFactory !== \"undefined\") {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"c\" /* FetchClient */](); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"b\" /* Dictionary */]();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== null) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"h\" /* ODataDefaultParser */]();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.add(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient() {\r\n        this._impl = SPRuntimeConfig.fetchClientFactory();\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/$$Version$$\");\r\n        }\r\n        opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                var index = url.indexOf(\"_api/\");\r\n                if (index < 0) {\r\n                    throw new APIUrlException();\r\n                }\r\n                var webUrl = url.substr(0, index);\r\n                return this._digestCache.getDigest(webUrl)\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(rawHeaders, options.headers);\r\n        options = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (typeof global._spPageContextInfo !== \"undefined\") {\r\n            // operating in classic pages\r\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\r\n                return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\r\n                return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (typeof global.location !== \"undefined\") {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            var urlStr = baseUrl;\r\n            if (__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = urlStr;\r\n                _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(urlStr, path);\r\n            }\r\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = urlStr.lastIndexOf(\"/\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                path = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(urlStr.slice(index), path);\r\n                _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = urlStr.lastIndexOf(\"(\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(urlStr, path);\r\n            }\r\n        }\r\n        else {\r\n            var q = baseUrl;\r\n            _this._parentUrl = q._url;\r\n            _this._options = q._options;\r\n            var target = q._query.get(\"@target\");\r\n            if (target !== null) {\r\n                _this._query.add(\"@target\", target);\r\n            }\r\n            _this._url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(_this._parentUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"b\" /* Dictionary */]();\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        // inlude our explicitly set query string params\r\n        aliasedParams.merge(this._query);\r\n        if (aliasedParams.count > 0) {\r\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path);\r\n        parent.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            parent.query.add(\"@target\", target);\r\n        }\r\n        if (typeof batch !== \"undefined\") {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"v\" /* mergeOptions */])(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"j\" /* ODataQueryable */]));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        var _this = this;\r\n        if (ascending === void 0) { ascending = true; }\r\n        var query = this._query.getKeys().filter(function (k) { return k === \"$orderby\"; }).map(function (k) { return _this._query.get(k); });\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this._query.add(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteUsers, _super);\r\n    /**\r\n     * Creates a new instance of the SiteUsers class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\r\n     */\r\n    function SiteUsers(baseUrl, path) {\r\n        if (path === void 0) { path = \"siteusers\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\r\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers, null).postCore({\r\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteUser, _super);\r\n    function SiteUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this user instance with the supplied properties\r\n    *\r\n    * @param properties A plain object of property names and values to update for the user\r\n    */\r\n    SiteUser.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this user\r\n     *\r\n     */\r\n    SiteUser.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(CurrentUser, _super);\r\n    function CurrentUser(baseUrl, path) {\r\n        if (path === void 0) { path = \"currentuser\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteGroups, _super);\r\n    /**\r\n     * Creates a new instance of the SiteGroups class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\r\n     */\r\n    function SiteGroups(baseUrl, path) {\r\n        if (path === void 0) { path = \"sitegroups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this group instance with the supplied properties\r\n    *\r\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\r\n    */\r\n    /* tslint:disable no-string-literal */\r\n    SiteGroup.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retGroup = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                group: retGroup,\r\n            };\r\n        });\r\n    };\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleAssignments, _super);\r\n    /**\r\n     * Creates a new instance of the RoleAssignments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\r\n     */\r\n    function RoleAssignments(baseUrl, path) {\r\n        if (path === void 0) { path = \"roleassignments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this role assignment\r\n     *\r\n     */\r\n    RoleAssignment.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleDefinitions, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\r\n     *\r\n     */\r\n    function RoleDefinitions(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            BasePermissions: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\r\n            properties[\"BasePermissions\"] = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\r\n        }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (properties.hasOwnProperty(\"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Deletes this role definition\r\n     *\r\n     */\r\n    RoleDefinition.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RoleDefinitionBindings, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitionBindings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\r\n     */\r\n    function RoleDefinitionBindings(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: JSON.stringify({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (typeof emailData !== \"undefined\") {\r\n                postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: JSON.stringify(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\r\n                postBody = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: JSON.stringify({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: JSON.stringify({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: JSON.stringify({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: JSON.stringify({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: JSON.stringify({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (typeof group !== \"undefined\" && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: JSON.stringify(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(spGetEntityUrl(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebPart, _super);\r\n    /**\r\n     * Creates a new instance of the WebPart class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\r\n     */\r\n    function WebPart(baseUrl, path) {\r\n        if (path === void 0) { path = \"webpart\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Folders, _super);\r\n    /**\r\n     * Creates a new instance of the Folders class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Folders(baseUrl, path) {\r\n        if (path === void 0) { path = \"folders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Folder, _super);\r\n    function Folder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Folder.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.Folder\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                folder: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ContentTypes, _super);\r\n    /**\r\n     * Creates a new instance of the ContentTypes class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\r\n     */\r\n    function ContentTypes(baseUrl, path) {\r\n        if (path === void 0) { path = \"contenttypes\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ContentType, _super);\r\n    function ContentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Delete this content type\r\n     */\r\n    ContentType.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FieldLinks, _super);\r\n    /**\r\n     * Creates a new instance of the ContentType class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\r\n     */\r\n    function FieldLinks(baseUrl, path) {\r\n        if (path === void 0) { path = \"fieldlinks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AttachmentFiles, _super);\r\n    /**\r\n     * Creates a new instance of the AttachmentFiles class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\r\n     */\r\n    function AttachmentFiles(baseUrl, path) {\r\n        if (path === void 0) { path = \"AttachmentFiles\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"m\" /* TextParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */]());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Views, _super);\r\n    /**\r\n     * Creates a new instance of the Views class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Views(baseUrl, path) {\r\n        if (path === void 0) { path = \"views\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, additionalSettings));\r\n        return this.clone(Views, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(View, _super);\r\n    function View() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this view intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the view\r\n     */\r\n    View.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this view\r\n     *\r\n     */\r\n    View.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ViewFields, _super);\r\n    function ViewFields(baseUrl, path) {\r\n        if (path === void 0) { path = \"viewfields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\r\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Fields, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Fields(baseUrl, path) {\r\n        if (path === void 0) { path = \"fields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param title The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                \"__metadata\": {\r\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\r\n                },\r\n            }, info),\r\n        });\r\n        return this.clone(Fields, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.clone(Fields, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            parameters: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n                \"__metadata\": { \"type\": \"SP.FieldCreationInformation\" },\r\n            }, properties),\r\n        });\r\n        return this.clone(Fields, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(props, properties));\r\n    };\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Field, _super);\r\n    function Field() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this fields\r\n     *\r\n     */\r\n    Field.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Forms, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Forms(baseUrl, path) {\r\n        if (path === void 0) { path = \"forms\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Subscriptions, _super);\r\n    /**\r\n     * Creates a new instance of the Subscriptions class\r\n     *\r\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\r\n     */\r\n    function Subscriptions(baseUrl, path) {\r\n        if (path === void 0) { path = \"subscriptions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var subscription = new Subscription(this);\r\n        subscription.concat(\"('\" + subscriptionId + \"')\");\r\n        return subscription;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UserCustomActions, _super);\r\n    /**\r\n     * Creates a new instance of the UserCustomActions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\r\n     */\r\n    function UserCustomActions(baseUrl, path) {\r\n        if (path === void 0) { path = \"usercustomactions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions, \"clear\").postCore();\r\n    };\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Updates this user custom action with the supplied properties\r\n    *\r\n    * @param properties An information object of property names and values to update for this user custom action\r\n    */\r\n    UserCustomAction.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                action: _this,\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Lists, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Lists(baseUrl, path) {\r\n        if (path === void 0) { path = \"lists\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new NotSupportedInBatchException(\"The ensure list method\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\r\n            }, overrideParameters),\r\n            parameters: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\r\n            }, parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: JSON.stringify(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Items, _super);\r\n    /**\r\n     * Creates a new instance of the Items class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Items(baseUrl, path) {\r\n        if (path === void 0) { path = \"items\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Item by id\r\n     *\r\n     * @param id The integer id of the item to retrieve\r\n     */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser());\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     */\r\n    Items.prototype.getAll = function (requestSize) {\r\n        var _this = this;\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": \"application/json;odata=nometadata\",\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.getKeys()\r\n            .filter(function (k) { return /^\\$select$|^\\$filter$|^\\$top$/.test(k.toLowerCase()); })\r\n            .reduce(function (i, k) {\r\n            i.query.add(k, _this.query.get(k));\r\n            return i;\r\n        }, items);\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": listItemEntityType },\r\n            }, properties));\r\n            var promise = _this.clone(Items, null).postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Item, _super);\r\n    function Item() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                    \"__metadata\": { \"type\": listItemEntityType },\r\n                }, properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Delete this item\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    Item.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i._query.add(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ItemVersions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function ItemVersions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    ItemVersion.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(nextUrl, results) {\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Files, _super);\r\n    /**\r\n     * Creates a new instance of the Files class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Files(baseUrl, path) {\r\n        if (path === void 0) { path = \"files\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"m\" /* TextParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (typeof progress === \"undefined\") {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(response.ServerRelativeUrl),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Versions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Versions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Version, _super);\r\n    function Version() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Version.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        var _this = this;\r\n        // we need to handle the case of getting created from something that already has \"_api/...\" or does not\r\n        var candidateUrl = \"\";\r\n        if (typeof baseUrl === \"string\") {\r\n            candidateUrl = baseUrl;\r\n        }\r\n        else if (typeof baseUrl !== \"undefined\") {\r\n            candidateUrl = baseUrl.toUrl();\r\n        }\r\n        _this = _super.call(this, extractWebUrl(candidateUrl), path) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Gets an attribute value from an html string block\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    var reg = new RegExp(attrName + \"=\\\"([^\\\"]*?)\\\"\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match.length > 0 ? match[1] : null;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (typeof html === \"undefined\" || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (collection[i].hasOwnProperty(\"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (collection[i].hasOwnProperty(\"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return JSON.stringify(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        return JSON.parse(escapedString\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#58;/g, \":\")\r\n            .replace(/&#123;/g, \"{\")\r\n            .replace(/&#125;/g, \"}\"));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergeControlToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergeControlToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergeControlToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>/i.exec(html);\r\n        this.text = match.length > 1 ? match[1] : \"\";\r\n    };\r\n    return ClientSideText;\r\n}(CanvasControl));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\");\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = properties;\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.setProperties(webPartData.properties);\r\n        if (typeof webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (typeof this.serverProcessedContent === \"undefined\" || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (typeof this.serverProcessedContent !== \"undefined\") {\r\n            if (typeof this.serverProcessedContent.searchablePlainTexts !== \"undefined\") {\r\n                for (var i = 0; i < this.serverProcessedContent.searchablePlainTexts.length; i++) {\r\n                    var prop = this.serverProcessedContent.searchablePlainTexts[i];\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + prop.Name + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(prop.Value);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.imageSources !== \"undefined\") {\r\n                for (var i = 0; i < this.serverProcessedContent.imageSources.length; i++) {\r\n                    var prop = this.serverProcessedContent.imageSources[i];\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + prop.Name + \"\\\" src=\\\"\" + prop.Value + \"\\\" />\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.links !== \"undefined\") {\r\n                for (var i = 0; i < this.serverProcessedContent.links.length; i++) {\r\n                    var prop = this.serverProcessedContent.links[i];\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + prop.Name + \"\\\" href=\\\"\" + prop.Value + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (typeof props.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.properties !== \"undefined\") {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (typeof props.properties !== \"undefined\") {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(CanvasControl));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = JSON.stringify({\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        });\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = JSON.stringify({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Navigation, _super);\r\n    /**\r\n     * Creates a new instance of the Navigation class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\r\n     */\r\n    function Navigation(baseUrl, path) {\r\n        if (path === void 0) { path = \"navigation\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: JSON.stringify({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: JSON.stringify({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Allows for the fluent construction of search queries\r\n */\r\nvar SearchQueryBuilder = /** @class */ (function () {\r\n    function SearchQueryBuilder(queryText, _query) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (_query === void 0) { _query = {}; }\r\n        this._query = _query;\r\n        if (typeof queryText === \"string\" && queryText.length > 0) {\r\n            this.extendQuery({ Querytext: queryText });\r\n        }\r\n    }\r\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (queryTemplate === void 0) { queryTemplate = {}; }\r\n        return new SearchQueryBuilder(queryText, queryTemplate);\r\n    };\r\n    SearchQueryBuilder.prototype.text = function (queryText) {\r\n        return this.extendQuery({ Querytext: queryText });\r\n    };\r\n    SearchQueryBuilder.prototype.template = function (template) {\r\n        return this.extendQuery({ QueryTemplate: template });\r\n    };\r\n    SearchQueryBuilder.prototype.sourceId = function (id) {\r\n        return this.extendQuery({ SourceId: id });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableInterleaving: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableStemming: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\r\n        get: function () {\r\n            return this.extendQuery({ TrimDuplicates: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\r\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableNicknames: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableFQL: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnablePhonetic: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\r\n        get: function () {\r\n            return this.extendQuery({ BypassResultTypes: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessBestBets: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableQueryRules: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableSorting: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\r\n        get: function () {\r\n            return this.extendQuery({ GenerateBlockRankLog: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\r\n        return this.extendQuery({ RankingModelId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.startRow = function (n) {\r\n        return this.extendQuery({ StartRow: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\r\n        return this.extendQuery({ RowLimit: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\r\n        return this.extendQuery({ RowsPerPage: n });\r\n    };\r\n    SearchQueryBuilder.prototype.selectProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SelectProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.culture = function (culture) {\r\n        return this.extendQuery({ Culture: culture });\r\n    };\r\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\r\n        return this.extendQuery({ TimeZoneId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.refinementFilters = function () {\r\n        var filters = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filters[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ RefinementFilters: filters });\r\n    };\r\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\r\n        return this.extendQuery({ Refiners: refiners });\r\n    };\r\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\r\n        return this.extendQuery({ HiddenConstraints: constraints });\r\n    };\r\n    SearchQueryBuilder.prototype.sortList = function () {\r\n        var sorts = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sorts[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SortList: sorts });\r\n    };\r\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\r\n        return this.extendQuery({ Timeout: milliseconds });\r\n    };\r\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ HitHighlightedProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\r\n        return this.extendQuery({ ClientType: clientType });\r\n    };\r\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\r\n        return this.extendQuery({ PersonalizationData: data });\r\n    };\r\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\r\n        return this.extendQuery({ ResultsUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.queryTag = function () {\r\n        var tags = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tags[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ QueryTag: tags });\r\n    };\r\n    SearchQueryBuilder.prototype.properties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ Properties: properties });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessPersonalFavorites: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\r\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.reorderingRules = function () {\r\n        var rules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            rules[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ ReorderingRules: rules });\r\n    };\r\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\r\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\r\n        return this.extendQuery({ CollapseSpecification: spec });\r\n    };\r\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\r\n        return this.extendQuery({ UILanguage: lang });\r\n    };\r\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\r\n        return this.extendQuery({ DesiredSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\r\n        return this.extendQuery({ MaxSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\r\n        return this.extendQuery({ SummaryLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\r\n        return this._query;\r\n    };\r\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\r\n        this._query = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(this._query, part);\r\n        return this;\r\n    };\r\n    return SearchQueryBuilder;\r\n}());\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Search, _super);\r\n    /**\r\n     * Creates a new instance of the Search class\r\n     *\r\n     * @param baseUrl The url for the search context\r\n     * @param query The SearchQuery object to execute\r\n     */\r\n    function Search(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/postquery\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * .......\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = JSON.stringify({\r\n            request: __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\r\n            }, formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        if (prop.hasOwnProperty(\"results\")) {\r\n            return prop;\r\n        }\r\n        return { results: prop };\r\n    };\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: false,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SearchSuggest, _super);\r\n    function SearchSuggest(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/suggest\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        if (query.hasOwnProperty(\"count\")) {\r\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"personalCount\")) {\r\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"preQuery\")) {\r\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\r\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"capitalize\")) {\r\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"culture\")) {\r\n            this.query.add(\"culture\", query.culture.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"stemming\")) {\r\n            this.query.add(\"enablestemming\", query.stemming.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"includePeople\")) {\r\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"queryRules\")) {\r\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"prefixMatch\")) {\r\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\r\n        }\r\n    };\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nvar SearchSuggestResult = /** @class */ (function () {\r\n    function SearchSuggestResult(json) {\r\n        if (json.hasOwnProperty(\"suggest\")) {\r\n            // verbose\r\n            this.PeopleNames = json.suggest.PeopleNames.results;\r\n            this.PersonalResults = json.suggest.PersonalResults.results;\r\n            this.Queries = json.suggest.Queries.results;\r\n        }\r\n        else {\r\n            this.PeopleNames = json.PeopleNames;\r\n            this.PersonalResults = json.PersonalResults;\r\n            this.Queries = json.Queries;\r\n        }\r\n    }\r\n    return SearchSuggestResult;\r\n}());\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new SPBatchParseException(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new SPBatchParseException(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new SPBatchParseException(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].isUrlAbsolute(reqInfo.url) ? reqInfo.url : __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(absoluteRequestUrl, reqInfo.url);\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof castHeaders[\"X-HTTP-Method\"] !== \"undefined\") {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"u\" /* mergeHeaders */])(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new SPBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataBatch */]));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Features, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Features(baseUrl, path) {\r\n        if (path === void 0) { path = \"features\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"add\").postCore({\r\n            body: JSON.stringify({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"remove\").postCore({\r\n            body: JSON.stringify({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(RegionalSettings, _super);\r\n    /**\r\n     * Creates a new instance of the RegionalSettings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this regional settings collection\r\n     */\r\n    function RegionalSettings(baseUrl, path) {\r\n        if (path === void 0) { path = \"regionalsettings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(InstalledLanguages, _super);\r\n    function InstalledLanguages(baseUrl, path) {\r\n        if (path === void 0) { path = \"installedlanguages\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(TimeZone, _super);\r\n    function TimeZone(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezone\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(TimeZones, _super);\r\n    function TimeZones(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezones\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Webs, _super);\r\n    /**\r\n     * Creates a new instance of the Webs class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     */\r\n    function Webs(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webs\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(spExtractODataId(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(WebInfos, _super);\r\n    /**\r\n     * Creates a new instance of the WebInfos class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\r\n     */\r\n    function WebInfos(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webinfos\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Web, _super);\r\n    /**\r\n     * Creates a new instance of the Web class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\r\n     */\r\n    function Web(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = JSON.stringify({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.add(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = JSON.stringify({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(spExtractODataId(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(spExtractODataId(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = JSON.stringify({ \"query\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(Site, _super);\r\n    /**\r\n     * Creates a new instance of the Site class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\r\n     */\r\n    function Site(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/site\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\r\n            return {\r\n                data: d,\r\n                web: Web.fromUrl(spExtractODataId(d)),\r\n            };\r\n        });\r\n    };\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"x\" /* readBlobAsArrayBuffer */])(profilePicSource).then(function (buffer) {\r\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n                request.postCore({\r\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n                }).then(function (_) { return resolve(); });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(ProfileLoader, _super);\r\n    /**\r\n   * Creates a new instance of the ProfileLoader class\r\n   *\r\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\r\n   */\r\n    function ProfileLoader(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: JSON.stringify({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(SocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function SocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/social.following\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return JSON.stringify({\r\n            \"actor\": __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend({\r\n                Id: null,\r\n                \"__metadata\": { \"type\": \"SP.Social.SocialActorInfo\" },\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(MySocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function MySocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"my\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery, \"followers\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery, \"suggestions\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\r\n            },\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = __WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* Util */].extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query instanceof SearchQueryBuilder) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\n\n//# sourceMappingURL=sp.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__ = __webpack_require__(4);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"util\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_92\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"sp\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_86\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"graph\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_72\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"storage\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_90\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_63\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"log\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_76\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"setup\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_85\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"spExtractODataId\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_87\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"spODataEntity\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_88\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"spODataEntityArray\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_89\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryable\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_34\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableInstance\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_36\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableCollection\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_35\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableSecurable\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_37\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FileFolderShared\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"D\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableShareable\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_38\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableShareableFile\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_39\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableShareableFolder\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_40\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableShareableItem\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_41\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharePointQueryableShareableWeb\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_42\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AppCatalog\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"App\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Field\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"y\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Fields\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"B\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CheckinType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"o\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebPartsPersonalizationScope\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_60\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"MoveOperations\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"W\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TemplateFileType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_50\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"File\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"C\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Files\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"E\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Folder\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"F\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Folders\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"G\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPHttpClient\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_22\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Item\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"O\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Items\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"R\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ItemVersion\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"P\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ItemVersions\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"Q\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PagedItemCollection\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_7\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NavigationNodes\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"Z\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NavigationNode\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"Y\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NavigationService\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_0\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"List\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"T\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Lists\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"U\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPRest\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_24\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"RoleDefinitionBindings\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_18\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Search\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_27\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SearchQueryBuilder\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_29\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SearchResults\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_30\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SortDirection\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_49\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ReorderingRuleMatchType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_17\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"QueryPropertyValueType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_15\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SearchBuiltInSourceId\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_28\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SearchSuggest\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_31\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SearchSuggestResult\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_32\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Site\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_47\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"UtilityMethod\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_55\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebPartDefinitions\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_59\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebPartDefinition\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_58\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebPart\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_57\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Web\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_56\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ClientSidePage\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"q\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CanvasSection\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"n\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CanvasControl\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"m\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CanvasColumn\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"l\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ClientSideText\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"r\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ClientSideWebpart\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"s\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SocialQuery\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_48\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"MySocialQuery\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"X\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ControlMode\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"u\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FieldTypes\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"z\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"DateTimeFieldFormatType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"v\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AddFieldOptions\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CalendarType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"k\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"UrlFieldFormatType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_53\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PermissionKind\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_8\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PrincipalType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_13\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PrincipalSource\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_12\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"RoleType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_19\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PageType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_6\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharingLinkKind\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_44\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharingRole\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_46\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharingOperationStatusCode\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_45\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPSharedObjectType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_25\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SharingDomainRestrictionMode\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_43\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"RenderListDataOptions\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_16\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FieldUserSelectionMode\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"A\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ChoiceFieldFormatType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"p\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GraphRest\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"N\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GraphBatch\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"I\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GraphQueryable\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"J\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GraphQueryableCollection\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"K\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GraphQueryableInstance\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"L\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GraphQueryableSearchableCollection\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"M\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPfxClient\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_26\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"readBlobAsText\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_82\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"readBlobAsArrayBuffer\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_81\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Dictionary\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"w\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"deprecated\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_66\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"beta\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_61\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"UrlException\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_52\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"RuntimeConfigImpl\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_21\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"RuntimeConfig\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_20\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"mergeHeaders\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_77\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"mergeOptions\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_78\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FetchClient\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"x\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"BearerTokenFetchClient\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PnPClientStorageWrapper\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_11\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PnPClientStorage\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_10\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"getCtxCallback\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_68\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"dateAdd\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_64\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"combinePaths\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_62\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"getRandomString\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_71\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"getGUID\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_70\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isFunc\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_74\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"objectDefinedNotNull\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_79\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_73\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"extend\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_67\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isUrlAbsolute\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_75\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"stringIsNullOrEmpty\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_91\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Util\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_54\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"V\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ConsoleListener\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"t\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FunctionListener\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"H\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Settings\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_33\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CachingConfigurationProvider\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPListConfigurationProvider\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_23\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NoCacheAvailableException\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_1\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CachingOptions\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CachingParserWrapper\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ProcessHttpClientResponseException\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_14\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ODataParserBase\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_4\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ODataDefaultParser\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_3\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TextParser\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_51\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"BlobParser\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"JSONParser\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"S\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"BufferParser\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"setResult\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_84\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"pipe\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_80\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"requestPipelineMethod\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_83\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PipelineMethods\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_9\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"getDefaultPipeline\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_69\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AlreadyInBatchException\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ODataQueryable\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_5\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ODataBatch\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_2\"]; });\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__src_pnpjs__[\"_65\" /* default */]);\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export SPRequestExecutorClient */\n/* unused harmony export SPRequestExecutorUndefinedException */\n/* unused harmony export SPRestAddIn */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sp$1; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_sp__ = __webpack_require__(8);\n/**\n@license\n * @pnp/sp-addinhelpers v1.0.3-0 - pnp - provides functionality for working within SharePoint add-ins\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n\n\n\n\n\nvar SPRequestExecutorUndefinedException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPRequestExecutorUndefinedException, _super);\r\n    function SPRequestExecutorUndefinedException() {\r\n        var _this = this;\r\n        var msg = [\r\n            \"SP.RequestExecutor is undefined. \",\r\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\r\n        ].join(\" \");\r\n        _this = _super.call(this, msg) || this;\r\n        _this.name = \"SPRequestExecutorUndefinedException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"c\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return SPRequestExecutorUndefinedException;\r\n}(Error));\n\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (typeof spResponse.headers !== \"undefined\") {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\r\n            throw new SPRequestExecutorUndefinedException();\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\n\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(__WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"_14\" /* Site */], addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(__WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"_20\" /* Web */], addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].isUrlAbsolute(addInWebUrl)) {\r\n            throw new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* UrlException */](\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].isUrlAbsolute(hostWebUrl)) {\r\n            throw new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* UrlException */](\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* Util */].combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"T\" /* SPRest */]));\r\nvar sp$1 = new SPRestAddIn();\n\n\n//# sourceMappingURL=sp-addinhelpers.es5.js.map\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = setup;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n\r\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* RuntimeConfig */].extend(config);\r\n}\r\n//# sourceMappingURL=pnplibconfig.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// pnpjs.es5.umd.bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 44a08c6c552a1fa011e4","/**\n@license\n * @pnp/logging v1.0.3-0 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry !== \"undefined\" && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 0\n// module chunks = 0","/**\n@license\n * @pnp/common v1.0.3-0 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { Logger } from '@pnp/logging';\nimport { __extends } from 'tslib';\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    Object.defineProperty(Dictionary.prototype, \"count\", {\r\n        /**\r\n         * Gets a count of the items currently in the dictionary\r\n         */\r\n        get: function () {\r\n            return this.keys.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Dictionary;\r\n}());\n\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\nvar UrlException = /** @class */ (function (_super) {\r\n    __extends(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(\"defaultCachingStore\", \"session\");\r\n        this._v.add(\"defaultCachingTimeoutSeconds\", 60);\r\n        this._v.add(\"globalCacheDisable\", false);\r\n        this._v.add(\"enableCacheExpiration\", false);\r\n        this._v.add(\"cacheExpirationIntervalMilliseconds\", 750);\r\n        this._v.add(\"spfxContext\", null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingStore\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingTimeoutSeconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(\"globalCacheDisable\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(\"enableCacheExpiration\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(\"cacheExpirationIntervalMilliseconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(\"spfxContext\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combinePaths() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (!Util.objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(function (v) { return check(target, v); })\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return typeof s === \"undefined\" || s === null || s.length < 1;\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = getCtxCallback;\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = dateAdd;\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = combinePaths;\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = getRandomString;\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    Util.getGUID = getGUID;\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param cf The thing to test for functionness\r\n     */\r\n    Util.isFunc = isFunc;\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = objectDefinedNotNull;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = isArray;\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = extend;\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = isUrlAbsolute;\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = stringIsNullOrEmpty;\r\n    return Util;\r\n}());\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (Util.objectDefinedNotNull(source)) {\r\n        var headers = Util.extend(target.headers || {}, source.headers);\r\n        target = Util.extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            Logger.write(\"Enabling cache expiration.\", 1 /* Info */);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", 1 /* Info */);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = Util.dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        Logger.write(\"Called cache expiration handler.\", 0 /* Verbose */);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(Util.getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            Logger.log({\r\n                data: e,\r\n                level: 3 /* Error */,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\nexport { readBlobAsText, readBlobAsArrayBuffer, Dictionary, deprecated, beta, UrlException, setup, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage, getCtxCallback, dateAdd, combinePaths, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, Util };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 1\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 2\n// module chunks = 0","/**\n@license\n * @pnp/odata v1.0.3-0 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { Dictionary, PnPClientStorage, RuntimeConfig, Util, mergeOptions } from '@pnp/common';\nimport { __decorate, __extends } from 'tslib';\nimport { Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = Util.dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(_parser, _cacheOptions) {\r\n        this._parser = _parser;\r\n        this._cacheOptions = _cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        // add this to the cache based on the options\r\n        return this._parser.parse(response).then(function (data) {\r\n            if (_this._cacheOptions.store !== null) {\r\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    __extends(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        Logger.log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                // handle all requests as text, then parse if they are not empty\r\n                r.text()\r\n                    .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                    .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\r\n                // the request to fail and log the error without parsing the body if anyone needs it for debugging\r\n                Logger.log({\r\n                    data: e,\r\n                    level: 2 /* Warning */,\r\n                    message: \"There was an error parsing the error response body. See data for details.\",\r\n                });\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: \"[[body not available]]\",\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (json.hasOwnProperty(\"d\")) {\r\n            if (json.d.hasOwnProperty(\"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (json.hasOwnProperty(\"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\n\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function () {\r\n    function TextParser() {\r\n    }\r\n    TextParser.prototype.parse = function (r) {\r\n        return r.text();\r\n    };\r\n    return TextParser;\r\n}());\r\nvar BlobParser = /** @class */ (function () {\r\n    function BlobParser() {\r\n    }\r\n    BlobParser.prototype.parse = function (r) {\r\n        return r.blob();\r\n    };\r\n    return BlobParser;\r\n}());\r\nvar JSONParser = /** @class */ (function () {\r\n    function JSONParser() {\r\n    }\r\n    JSONParser.prototype.parse = function (r) {\r\n        return r.json();\r\n    };\r\n    return JSONParser;\r\n}());\r\nvar BufferParser = /** @class */ (function () {\r\n    function BufferParser() {\r\n    }\r\n    BufferParser.prototype.parse = function (r) {\r\n        if (Util.isFunc(r.arrayBuffer)) {\r\n            return r.arrayBuffer();\r\n        }\r\n        return r.buffer();\r\n    };\r\n    return BufferParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: context.result,\r\n        level: 0 /* Verbose */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    return next(context)\r\n        .then(function (ctx) { return returnResult(ctx); })\r\n        .catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.verb === \"GET\" && context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (typeof context.cachingOptions !== \"undefined\") {\r\n                    cacheOptions = Util.extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any help batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        context.batchDependency();\r\n                        // handle the case where a parser needs to take special actions with a cached result (such as getAs)\r\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                context.batchDependency();\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = Util.extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    __extends(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar ODataQueryable = /** @class */ (function () {\r\n    function ODataQueryable() {\r\n        this._batch = null;\r\n        this._query = new Dictionary();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    ODataQueryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    ODataQueryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    ODataQueryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (typeof options !== \"undefined\") {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Util.objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    ODataQueryable.prototype.append = function (pathPart) {\r\n        this._url = Util.combinePaths(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}());\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = Util.getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._requests = [];\r\n        this._dependencies = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._requests;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser) {\r\n        var info = {\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._requests.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        var promise = new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        });\r\n        this._dependencies.push(promise);\r\n        return resolver;\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, ProcessHttpClientResponseException, ODataParserBase, ODataDefaultParser, TextParser, BlobParser, JSONParser, BufferParser, setResult, pipe, requestPipelineMethod, PipelineMethods, getDefaultPipeline, AlreadyInBatchException, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/odata/dist/odata.es5.js\n// module id = 3\n// module chunks = 0","import { Logger } from \"@pnp/logging\";\r\nimport { Util, PnPClientStorage } from \"@pnp/common\";\r\nimport { Settings } from \"@pnp/config-store\";\r\nimport { graph as _graph } from \"@pnp/graph\";\r\nimport { sp as _sp } from \"@pnp/sp-addinhelpers\";\r\nimport { setup as _setup } from \"./config/pnplibconfig\";\r\n/**\r\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\r\n */\r\n/**\r\n * Re-export everything from the dependencies to match the previous pattern\r\n */\r\nexport * from \"@pnp/sp\";\r\nexport * from \"@pnp/graph\";\r\nexport * from \"@pnp/common\";\r\nexport * from \"@pnp/logging\";\r\nexport * from \"@pnp/config-store\";\r\nexport * from \"@pnp/odata\";\r\n/**\r\n * Utility methods\r\n */\r\nexport var util = Util;\r\n/**\r\n * Provides access to the SharePoint REST interface\r\n */\r\nexport var sp = _sp;\r\n/**\r\n * Provides access to the Microsoft Graph REST interface\r\n */\r\nexport var graph = _graph;\r\n/**\r\n * Provides access to local and session storage\r\n */\r\nexport var storage = new PnPClientStorage();\r\n/**\r\n * Global configuration instance to which providers can be added\r\n */\r\nexport var config = new Settings();\r\n/**\r\n * Global logging instance to which subscribers can be registered and messages written\r\n */\r\nexport var log = Logger;\r\n/**\r\n * Allows for the configuration of the library\r\n */\r\nexport var setup = _setup;\r\n// /**\r\n//  * Expose a subset of classes from the library for public consumption\r\n//  */\r\n// creating this class instead of directly assigning to default fixes issue #116\r\nvar Def = {\r\n    /**\r\n     * Global configuration instance to which providers can be added\r\n     */\r\n    config: config,\r\n    /**\r\n     * Provides access to the Microsoft Graph REST interface\r\n     */\r\n    graph: graph,\r\n    /**\r\n     * Global logging instance to which subscribers can be registered and messages written\r\n     */\r\n    log: log,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    setup: setup,\r\n    /**\r\n     * Provides access to the REST interface\r\n     */\r\n    sp: sp,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    storage: storage,\r\n    /**\r\n     * Utility methods\r\n     */\r\n    util: util,\r\n};\r\n/**\r\n * Enables use of the import pnp from syntax\r\n */\r\nexport default Def;\r\n//# sourceMappingURL=pnpjs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/pnpjs/es5/src/pnpjs.js\n// module id = 4\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 5\n// module chunks = 0","/**\n@license\n * @pnp/config-store v1.0.3-0 - pnp - provides a way to manage configuration within your application\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { Dictionary, PnPClientStorage } from '@pnp/common';\nimport { __extends } from 'tslib';\nimport { Logger } from '@pnp/logging';\n\n/**\r\n * Class used to manage the current application settings\r\n *\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the settings class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Settings() {\r\n        this._settings = new Dictionary();\r\n    }\r\n    /**\r\n     * Adds a new single setting, or overwrites a previous setting with the same key\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {string} value The setting value to store\r\n     */\r\n    Settings.prototype.add = function (key, value) {\r\n        this._settings.add(key, value);\r\n    };\r\n    /**\r\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {any} value The setting value to store\r\n     */\r\n    Settings.prototype.addJSON = function (key, value) {\r\n        this._settings.add(key, JSON.stringify(value));\r\n    };\r\n    /**\r\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\r\n     *\r\n     * @param {TypedHash<any>} hash The set of values to add\r\n     */\r\n    Settings.prototype.apply = function (hash) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                _this._settings.merge(hash);\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\r\n     *\r\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\r\n     */\r\n    Settings.prototype.load = function (provider) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            provider.getConfiguration().then(function (value) {\r\n                _this._settings.merge(value);\r\n                resolve();\r\n            }).catch(function (reason) {\r\n                reject(reason);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a value from the configuration\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {string} string value from the configuration\r\n     */\r\n    Settings.prototype.get = function (key) {\r\n        return this._settings.get(key);\r\n    };\r\n    /**\r\n     * Gets a JSON value, rehydrating the stored string to the original object\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {any} object from the configuration\r\n     */\r\n    Settings.prototype.getJSON = function (key) {\r\n        var o = this.get(key);\r\n        if (typeof o === \"undefined\" || o === null) {\r\n            return o;\r\n        }\r\n        return JSON.parse(o);\r\n    };\r\n    return Settings;\r\n}());\n\nvar NoCacheAvailableException = /** @class */ (function (_super) {\r\n    __extends(NoCacheAvailableException, _super);\r\n    function NoCacheAvailableException(msg) {\r\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"NoCacheAvailableException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return NoCacheAvailableException;\r\n}(Error));\n\n/**\r\n * A caching provider which can wrap other non-caching providers\r\n *\r\n */\r\nvar CachingConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new caching configuration provider\r\n     * @constructor\r\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\r\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\r\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\r\n     */\r\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\r\n        this.cacheKey = \"_configcache_\" + cacheKey;\r\n    }\r\n    /**\r\n     * Gets the wrapped configuration providers\r\n     *\r\n     * @return {IConfigurationProvider} Wrapped configuration provider\r\n     */\r\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\r\n        return this.wrappedProvider;\r\n    };\r\n    /**\r\n     * Loads the configuration values either from the cache or from the wrapped provider\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        // Cache not available, pass control to  the wrapped provider\r\n        if ((!this.store) || (!this.store.enabled)) {\r\n            return this.wrappedProvider.getConfiguration();\r\n        }\r\n        // Value is found in cache, return it directly\r\n        var cachedConfig = this.store.get(this.cacheKey);\r\n        if (cachedConfig) {\r\n            return new Promise(function (resolve) {\r\n                resolve(cachedConfig);\r\n            });\r\n        }\r\n        // Get and cache value from the wrapped provider\r\n        var providerPromise = this.wrappedProvider.getConfiguration();\r\n        providerPromise.then(function (providedConfig) {\r\n            _this.store.put(_this.cacheKey, providedConfig);\r\n        });\r\n        return providerPromise;\r\n    };\r\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\r\n        var pnpCache = new PnPClientStorage();\r\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\r\n            return pnpCache.local;\r\n        }\r\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\r\n            return pnpCache.session;\r\n        }\r\n        throw new NoCacheAvailableException();\r\n    };\r\n    return CachingConfigurationProvider;\r\n}());\n\n/**\r\n * A configuration provider which loads configuration values from a SharePoint list\r\n *\r\n */\r\nvar SPListConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new SharePoint list based configuration provider\r\n     * @constructor\r\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\r\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default: \"config\")\r\n     * @param {string} keyFieldName The name of the field in the list to use as the setting key (optional, default: \"Title\")\r\n     * @param {string} valueFieldName The name of the field in the list to use as the setting value (optional, default: \"Value\")\r\n     */\r\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle, keyFieldName, valueFieldName) {\r\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\r\n        if (keyFieldName === void 0) { keyFieldName = \"Title\"; }\r\n        if (valueFieldName === void 0) { valueFieldName = \"Value\"; }\r\n        this.sourceWeb = sourceWeb;\r\n        this.sourceListTitle = sourceListTitle;\r\n        this.keyFieldName = keyFieldName;\r\n        this.valueFieldName = valueFieldName;\r\n    }\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\r\n        /**\r\n         * Gets the url of the SharePoint site, where the configuration list is located\r\n         *\r\n         * @return {string} Url address of the site\r\n         */\r\n        get: function () {\r\n            return this.sourceWeb;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\r\n        /**\r\n         * Gets the title of the SharePoint list, which contains the configuration settings\r\n         *\r\n         * @return {string} List title\r\n         */\r\n        get: function () {\r\n            return this.sourceListTitle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads the configuration values from the SharePoint list\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        return this.web.lists.getByTitle(this.listTitle).items.select(this.keyFieldName, this.valueFieldName)\r\n            .get().then(function (data) { return data.reduce(function (c, item) {\r\n            return Object.defineProperty(c, item[_this.keyFieldName], {\r\n                configurable: false,\r\n                enumerable: false,\r\n                value: item[_this.valueFieldName],\r\n                writable: false,\r\n            });\r\n        }, {}); });\r\n    };\r\n    /**\r\n     * Wraps the current provider in a cache enabled provider\r\n     *\r\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\r\n     */\r\n    SPListConfigurationProvider.prototype.asCaching = function () {\r\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\r\n        return new CachingConfigurationProvider(this, cacheKey);\r\n    };\r\n    return SPListConfigurationProvider;\r\n}());\n\nexport { Settings, CachingConfigurationProvider, SPListConfigurationProvider, NoCacheAvailableException };\n//# sourceMappingURL=config-store.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/config-store/dist/config-store.es5.js\n// module id = 6\n// module chunks = 0","/**\n@license\n * @pnp/graph v1.0.3-0 - pnp - provides functionality to query the Microsoft Graph\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { __decorate, __extends } from 'tslib';\nimport { RuntimeConfig, Util, beta, mergeHeaders } from '@pnp/common';\nimport { BlobParser, BufferParser, ODataBatch, ODataQueryable } from '@pnp/odata';\nimport { Logger } from '@pnp/logging';\n\nvar SPfxClient = /** @class */ (function () {\r\n    function SPfxClient(_client, _configuration) {\r\n        if (_configuration === void 0) { _configuration = {}; }\r\n        this._client = _client;\r\n        this._configuration = _configuration;\r\n    }\r\n    SPfxClient.prototype.fetch = function (url, options) {\r\n        return this._client.fetch(url, this._configuration, options);\r\n    };\r\n    return SPfxClient;\r\n}());\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar NoGraphClientAvailableException = /** @class */ (function (_super) {\r\n    __extends(NoGraphClientAvailableException, _super);\r\n    function NoGraphClientAvailableException(msg) {\r\n        if (msg === void 0) { msg = \"There is no Graph Client available, either set one using configuraiton or provide a valid SPFx Context using setup.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"NoGraphClientAvailableException\";\r\n        Logger.log({ data: null, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return NoGraphClientAvailableException;\r\n}(Error));\r\nvar GraphRuntimeConfigImpl = /** @class */ (function () {\r\n    function GraphRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            if (graphPart !== null && typeof graphPart !== \"undefined\" && typeof graphPart.headers !== \"undefined\") {\r\n                return graphPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            // use a configured factory firt\r\n            if (typeof graphPart !== \"undefined\" && typeof graphPart.fetchClientFactory !== \"undefined\") {\r\n                return graphPart.fetchClientFactory;\r\n            }\r\n            // then try and use spfx context if available\r\n            if (typeof RuntimeConfig.spfxContext !== \"undefined\") {\r\n                return function () { return new SPfxClient(RuntimeConfig.spfxContext.graphHttpClient); };\r\n            }\r\n            throw new NoGraphClientAvailableException();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphRuntimeConfigImpl;\r\n}());\r\nvar GraphRuntimeConfig = new GraphRuntimeConfigImpl();\n\nvar GraphHttpClient = /** @class */ (function () {\r\n    function GraphHttpClient() {\r\n        this._impl = GraphRuntimeConfig.fetchClientFactory();\r\n    }\r\n    GraphHttpClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, GraphRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        var opts = Util.extend(options, { headers: headers });\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = Util.extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(Util.getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    GraphHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return GraphHttpClient;\r\n}());\n\n/**\r\n * Queryable Base Class\r\n *\r\n */\r\nvar GraphQueryable = /** @class */ (function (_super) {\r\n    __extends(GraphQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the Queryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or Queryable that should form the base part of the url\r\n     *\r\n     */\r\n    function GraphQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            var urlStr = baseUrl;\r\n            _this._parentUrl = urlStr;\r\n            _this._url = Util.combinePaths(urlStr, path);\r\n        }\r\n        else {\r\n            var q = baseUrl;\r\n            _this._parentUrl = q._url;\r\n            _this._options = q._options;\r\n            _this._url = Util.combinePaths(_this._parentUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new queryable\r\n     */\r\n    GraphQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Util.extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    GraphQueryable.prototype.toUrlAndQuery = function () {\r\n        var _this = this;\r\n        return this.toUrl() + (\"?\" + this._query.getKeys().map(function (key) { return key + \"=\" + _this._query.get(key); }).join(\"&\"));\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        return new factory(baseUrl, path);\r\n    };\r\n    /**\r\n     * Clones this queryable into a new queryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        // TODO:: include batching info in clone\r\n        if (includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        if (options === void 0) { options = {}; }\r\n        // TODO:: add batch support\r\n        return Promise.resolve({\r\n            batch: this.batch,\r\n            batchDependency: function () { return void (0); },\r\n            cachingOptions: this._cachingOptions,\r\n            clientFactory: function () { return new GraphHttpClient(); },\r\n            isBatched: this.hasBatch,\r\n            isCached: this._useCaching,\r\n            options: options,\r\n            parser: parser,\r\n            pipeline: pipeline,\r\n            requestAbsoluteUrl: this.toUrlAndQuery(),\r\n            requestId: Util.getGUID(),\r\n            verb: verb,\r\n        });\r\n    };\r\n    return GraphQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar GraphQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(GraphQueryableCollection, _super);\r\n    function GraphQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    GraphQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        var _this = this;\r\n        if (ascending === void 0) { ascending = true; }\r\n        var query = this._query.getKeys().filter(function (k) { return k === \"$orderby\"; }).map(function (k) { return _this._query.get(k); });\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    GraphQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips a set number of items in the return set\r\n     *\r\n     * @param num Number of items to skip\r\n     */\r\n    GraphQueryableCollection.prototype.skip = function (num) {\r\n        this._query.add(\"$top\", num.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableCollection.prototype.skipToken = function (token) {\r\n        this._query.add(\"$skiptoken\", token);\r\n        return this;\r\n    };\r\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\r\n        /**\r\n         * \tRetrieves the total count of matching resources\r\n         */\r\n        get: function () {\r\n            this._query.add(\"$count\", \"true\");\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphQueryableCollection;\r\n}(GraphQueryable));\r\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\r\n    __extends(GraphQueryableSearchableCollection, _super);\r\n    function GraphQueryableSearchableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\r\n        this._query.add(\"$search\", query);\r\n        return this;\r\n    };\r\n    return GraphQueryableSearchableCollection;\r\n}(GraphQueryableCollection));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar GraphQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(GraphQueryableInstance, _super);\r\n    function GraphQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return GraphQueryableInstance;\r\n}(GraphQueryable));\n\nvar Members = /** @class */ (function (_super) {\r\n    __extends(Members, _super);\r\n    function Members(baseUrl, path) {\r\n        if (path === void 0) { path = \"members\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\r\n     * the members navigation property. You can add users or other groups.\r\n     * Important: You can add only users to Office 365 groups.\r\n     *\r\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\r\n     */\r\n    Members.prototype.add = function (id) {\r\n        return this.clone(Members, \"$ref\").postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Members.prototype.getById = function (id) {\r\n        return new Member(this, id);\r\n    };\r\n    return Members;\r\n}(GraphQueryableCollection));\r\nvar Member = /** @class */ (function (_super) {\r\n    __extends(Member, _super);\r\n    function Member() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Member;\r\n}(GraphQueryableInstance));\r\nvar Owners = /** @class */ (function (_super) {\r\n    __extends(Owners, _super);\r\n    function Owners(baseUrl, path) {\r\n        if (path === void 0) { path = \"owners\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Owners;\r\n}(Members));\n\n// import { Attachments } from \"./attachments\";\r\nvar Calendars = /** @class */ (function (_super) {\r\n    __extends(Calendars, _super);\r\n    function Calendars(baseUrl, path) {\r\n        if (path === void 0) { path = \"calendars\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Calendars;\r\n}(GraphQueryableCollection));\r\nvar Calendar = /** @class */ (function (_super) {\r\n    __extends(Calendar, _super);\r\n    function Calendar() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Calendar.prototype, \"events\", {\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Calendar;\r\n}(GraphQueryableInstance));\r\nvar Events = /** @class */ (function (_super) {\r\n    __extends(Events, _super);\r\n    function Events(baseUrl, path) {\r\n        if (path === void 0) { path = \"events\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Events.prototype.getById = function (id) {\r\n        return new Event(this, id);\r\n    };\r\n    /**\r\n     * Adds a new event to the collection\r\n     *\r\n     * @param properties The set of properties used to create the event\r\n     */\r\n    Events.prototype.add = function (properties) {\r\n        var _this = this;\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                event: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Events;\r\n}(GraphQueryableCollection));\r\nvar Event = /** @class */ (function (_super) {\r\n    __extends(Event, _super);\r\n    function Event() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // TODO:: when supported\r\n    // /**\r\n    //  * Gets the collection of attachments for this event\r\n    //  */\r\n    // public get attachments(): Attachments {\r\n    //     return new Attachments(this);\r\n    // }\r\n    /**\r\n     * Update the properties of an event object\r\n     *\r\n     * @param properties Set of properties of this event to update\r\n     */\r\n    Event.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this event\r\n     */\r\n    Event.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Event;\r\n}(GraphQueryableInstance));\n\nvar Attachments = /** @class */ (function (_super) {\r\n    __extends(Attachments, _super);\r\n    function Attachments(baseUrl, path) {\r\n        if (path === void 0) { path = \"attachments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    Attachments.prototype.getById = function (id) {\r\n        return new Attachment(this, id);\r\n    };\r\n    /**\r\n     * Add attachment to this collection\r\n     *\r\n     * @param name Name given to the attachment file\r\n     * @param bytes File content\r\n     */\r\n    Attachments.prototype.addFile = function (name, bytes) {\r\n        return this.postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\r\n                contentBytes: bytes,\r\n                name: name,\r\n            }),\r\n        });\r\n    };\r\n    return Attachments;\r\n}(GraphQueryableCollection));\r\nvar Attachment = /** @class */ (function (_super) {\r\n    __extends(Attachment, _super);\r\n    function Attachment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Attachment;\r\n}(GraphQueryableInstance));\n\nvar Conversations = /** @class */ (function (_super) {\r\n    __extends(Conversations, _super);\r\n    function Conversations(baseUrl, path) {\r\n        if (path === void 0) { path = \"conversations\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Create a new conversation by including a thread and a post.\r\n     *\r\n     * @param properties Properties used to create the new conversation\r\n     */\r\n    Conversations.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a conversation from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Conversations.prototype.getById = function (id) {\r\n        return new Conversation(this, id);\r\n    };\r\n    return Conversations;\r\n}(GraphQueryableCollection));\r\nvar Threads = /** @class */ (function (_super) {\r\n    __extends(Threads, _super);\r\n    function Threads(baseUrl, path) {\r\n        if (path === void 0) { path = \"threads\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Threads.prototype.getById = function (id) {\r\n        return new Thread(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Threads.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    return Threads;\r\n}(GraphQueryableCollection));\r\nvar Posts = /** @class */ (function (_super) {\r\n    __extends(Posts, _super);\r\n    function Posts(baseUrl, path) {\r\n        if (path === void 0) { path = \"posts\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Posts.prototype.getById = function (id) {\r\n        return new Post(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Posts.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    return Posts;\r\n}(GraphQueryableCollection));\r\nvar Conversation = /** @class */ (function (_super) {\r\n    __extends(Conversation, _super);\r\n    function Conversation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Conversation.prototype, \"threads\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Threads(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this conversation\r\n     */\r\n    Conversation.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Conversation.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Conversation;\r\n}(GraphQueryableInstance));\r\nvar Thread = /** @class */ (function (_super) {\r\n    __extends(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Thread.prototype, \"posts\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Posts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Thread.prototype.reply = function (post) {\r\n        return this.clone(Thread, \"reply\").postCore({\r\n            body: JSON.stringify({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Thread.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Thread;\r\n}(GraphQueryableInstance));\r\nvar Post = /** @class */ (function (_super) {\r\n    __extends(Post, _super);\r\n    function Post() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Post.prototype, \"attachments\", {\r\n        get: function () {\r\n            return new Attachments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this post\r\n     */\r\n    Post.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Forward a post to a recipient\r\n     */\r\n    Post.prototype.forward = function (info) {\r\n        return this.clone(Post, \"forward\").postCore({\r\n            body: JSON.stringify(info),\r\n        });\r\n    };\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Post.prototype.reply = function (post) {\r\n        return this.clone(Post, \"reply\").postCore({\r\n            body: JSON.stringify({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    return Post;\r\n}(GraphQueryableInstance));\r\nvar Senders = /** @class */ (function (_super) {\r\n    __extends(Senders, _super);\r\n    function Senders(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Add a new user or group to this senders collection\r\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.add = function (id) {\r\n        return this.clone(Senders, \"$ref\").postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the entity from the collection\r\n     *\r\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.remove = function (id) {\r\n        var remover = this.clone(Senders, \"$ref\");\r\n        remover.query.add(\"$id\", id);\r\n        return remover.deleteCore();\r\n    };\r\n    return Senders;\r\n}(GraphQueryableCollection));\n\nvar Plans = /** @class */ (function (_super) {\r\n    __extends(Plans, _super);\r\n    function Plans(baseUrl, path) {\r\n        if (path === void 0) { path = \"planner/plans\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a plan from this collection by id\r\n     *\r\n     * @param id Plan's id\r\n     */\r\n    Plans.prototype.getById = function (id) {\r\n        return new Plan(this, id);\r\n    };\r\n    return Plans;\r\n}(GraphQueryableCollection));\r\nvar Plan = /** @class */ (function (_super) {\r\n    __extends(Plan, _super);\r\n    function Plan() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Plan;\r\n}(GraphQueryableInstance));\n\nvar Photo = /** @class */ (function (_super) {\r\n    __extends(Photo, _super);\r\n    function Photo(baseUrl, path) {\r\n        if (path === void 0) { path = \"photo\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the image bytes as a blob (browser)\r\n     */\r\n    Photo.prototype.getBlob = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the image file byets as a Buffer (node.js)\r\n     */\r\n    Photo.prototype.getBuffer = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BufferParser());\r\n    };\r\n    /**\r\n     * Sets the file bytes\r\n     *\r\n     * @param content Image file contents, max 4 MB\r\n     */\r\n    Photo.prototype.setContent = function (content) {\r\n        return this.clone(Photo, \"$value\", false).patchCore({\r\n            body: content,\r\n        });\r\n    };\r\n    return Photo;\r\n}(GraphQueryableInstance));\n\nvar GroupType;\r\n(function (GroupType) {\r\n    /**\r\n     * Office 365 (aka unified group)\r\n     */\r\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\r\n    /**\r\n     * Dynamic membership\r\n     */\r\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\r\n    /**\r\n     * Security\r\n     */\r\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\r\n})(GroupType || (GroupType = {}));\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Groups = /** @class */ (function (_super) {\r\n    __extends(Groups, _super);\r\n    function Groups(baseUrl, path) {\r\n        if (path === void 0) { path = \"groups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a group from the collection using the specified id\r\n     *\r\n     * @param id Id of the group to get from this collection\r\n     */\r\n    Groups.prototype.getById = function (id) {\r\n        return new Group(this, id);\r\n    };\r\n    /**\r\n     * Create a new group as specified in the request body.\r\n     *\r\n     * @param name Name to display in the address book for the group\r\n     * @param mailNickname Mail alias for the group\r\n     * @param groupType Type of group being created\r\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\r\n     */\r\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = Util.extend({\r\n            displayName: name,\r\n            mailEnabled: groupType === GroupType.Office365,\r\n            mailNickname: mailNickname,\r\n            securityEnabled: groupType !== GroupType.Office365,\r\n        }, additionalProperties);\r\n        // include a group type if required\r\n        if (groupType !== GroupType.Security) {\r\n            postBody = Util.extend(postBody, {\r\n                groupTypes: [groupType === GroupType.Office365 ? \"Unified\" : \"DynamicMembership\"],\r\n            });\r\n        }\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                group: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Groups;\r\n}(GraphQueryableCollection));\r\n/**\r\n * Represents a group entity\r\n */\r\nvar Group = /** @class */ (function (_super) {\r\n    __extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Group.prototype, \"caldendar\", {\r\n        /**\r\n         * The calendar associated with this group\r\n         */\r\n        get: function () {\r\n            return new Calendar(this, \"calendar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"events\", {\r\n        /**\r\n         * Retrieve a list of event objects\r\n         */\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"owners\", {\r\n        /**\r\n         * Gets the collection of owners for this group\r\n         */\r\n        get: function () {\r\n            return new Owners(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"plans\", {\r\n        /**\r\n         * The collection of plans for this group\r\n         */\r\n        get: function () {\r\n            return new Plans(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"members\", {\r\n        /**\r\n         * Gets the collection of members for this group\r\n         */\r\n        get: function () {\r\n            return new Members(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"conversations\", {\r\n        /**\r\n         * Gets the conversations collection for this group\r\n         */\r\n        get: function () {\r\n            return new Conversations(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\r\n        /**\r\n         * Gets the collection of accepted senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"acceptedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\r\n        /**\r\n         * Gets the collection of rejected senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"rejectedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"photo\", {\r\n        /**\r\n         * The photo associated with the group\r\n         */\r\n        get: function () {\r\n            return new Photo(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.addFavorite = function () {\r\n        return this.clone(Group, \"addFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Return all the groups that the specified group is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(Group, \"getMemberGroups\").postCore({\r\n            body: JSON.stringify({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this group\r\n     */\r\n    Group.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a group object\r\n     *\r\n     * @param properties Set of properties of this group to update\r\n     */\r\n    Group.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.removeFavorite = function () {\r\n        return this.clone(Group, \"removeFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\r\n     */\r\n    Group.prototype.resetUnseenCount = function () {\r\n        return this.clone(Group, \"resetUnseenCount\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will enable the current user to receive email notifications for this group,\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.subscribeByMail = function () {\r\n        return this.clone(Group, \"subscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will prevent the current user from receiving email notifications for this group\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.unsubscribeByMail = function () {\r\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\r\n     *\r\n     * @param start Start date and time of the time range\r\n     * @param end End date and time of the time range\r\n     */\r\n    Group.prototype.getCalendarView = function (start, end) {\r\n        var view = this.clone(Group, \"calendarView\");\r\n        view.query.add(\"startDateTime\", start.toISOString());\r\n        view.query.add(\"endDateTime\", end.toISOString());\r\n        return view.get();\r\n    };\r\n    return Group;\r\n}(GraphQueryableInstance));\n\n// import { Me } from \"./me\";\r\n/**\r\n * Root object wrapping v1 functionality for MS Graph\r\n *\r\n */\r\nvar V1 = /** @class */ (function (_super) {\r\n    __extends(V1, _super);\r\n    /**\r\n     * Creates a new instance of the V1 class\r\n     *\r\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\r\n     * @param path Optional additional path\r\n     */\r\n    function V1(baseUrl, path) {\r\n        if (path === void 0) { path = \"v1.0\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(V1.prototype, \"groups\", {\r\n        get: function () {\r\n            return new Groups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return V1;\r\n}(GraphQueryable));\n\nvar GraphRest = /** @class */ (function () {\r\n    function GraphRest() {\r\n    }\r\n    Object.defineProperty(GraphRest.prototype, \"v1\", {\r\n        get: function () {\r\n            return new V1(\"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    return GraphRest;\r\n}());\r\nvar graph = new GraphRest();\n\nvar GraphBatchParseException = /** @class */ (function (_super) {\r\n    __extends(GraphBatchParseException, _super);\r\n    function GraphBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"GraphBatchParseException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return GraphBatchParseException;\r\n}(Error));\r\nvar GraphBatch = /** @class */ (function (_super) {\r\n    __extends(GraphBatch, _super);\r\n    function GraphBatch(batchUrl) {\r\n        if (batchUrl === void 0) { batchUrl = \"https://graph.microsoft.com/beta/$batch\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.batchUrl = batchUrl;\r\n        return _this;\r\n    }\r\n    GraphBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        var client = new GraphHttpClient();\r\n        var batchRequest = {\r\n            requests: this.formatRequests(),\r\n        };\r\n        var batchOptions = {\r\n            \"body\": JSON.stringify(batchRequest),\r\n            \"headers\": {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            \"method\": \"POST\",\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // let nextLinkFlag = false;\r\n        return client.fetch(this.batchUrl, batchOptions)\r\n            .then(function (r) { return r.json(); })\r\n            .then(this._parseResponse)\r\n            .then(function (parsedResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return parsedResponse.responses.reduce(function (chain, response, index) {\r\n                var request = _this.requests[index];\r\n                if (Util.objectDefinedNotNull(request)) {\r\n                    Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }\r\n                else {\r\n                    // do we have a next url? if no this is an error\r\n                    if (parsedResponse.nextLink) {\r\n                        throw new GraphBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                    }\r\n                    // nextLinkFlag = true;\r\n                    // keep the chain moving, but don't add anything for this request yet\r\n                    // here we need to process the next link - so what do we do?\r\n                    // need to append a .then()\r\n                    // TODO::\r\n                    return chain;\r\n                }\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    GraphBatch.prototype.formatRequests = function () {\r\n        return this.requests.map(function (reqInfo, index) {\r\n            var requestFragment = {\r\n                id: \"\" + ++index,\r\n                method: reqInfo.method,\r\n                url: reqInfo.url,\r\n            };\r\n            var headers = {};\r\n            // merge global config headers\r\n            if (typeof GraphRuntimeConfig.headers !== \"undefined\" && GraphRuntimeConfig.headers !== null) {\r\n                headers = Util.extend(headers, GraphRuntimeConfig.headers);\r\n            }\r\n            if (typeof reqInfo.options !== \"undefined\") {\r\n                // merge per request headers\r\n                if (typeof reqInfo.options.headers !== \"undefined\" && reqInfo.options.headers !== null) {\r\n                    headers = Util.extend(headers, reqInfo.options.headers);\r\n                }\r\n                // add a request body\r\n                if (typeof reqInfo.options.body !== \"undefined\" && reqInfo.options.body !== null) {\r\n                    requestFragment = Util.extend(requestFragment, {\r\n                        body: reqInfo.options.body,\r\n                    });\r\n                }\r\n            }\r\n            requestFragment = Util.extend(requestFragment, {\r\n                headers: headers,\r\n            });\r\n            return requestFragment;\r\n        });\r\n    };\r\n    GraphBatch.prototype._parseResponse = function (graphResponse) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var parsedResponses = new Array(_this.requests.length).fill(null);\r\n            for (var i = 0; i < graphResponse.responses.length; ++i) {\r\n                var response = graphResponse.responses[i];\r\n                // we create the request id by adding 1 to the index, so we place the response by subtracting one to match\r\n                // the array of requests and make it easier to map them by index\r\n                var responseId = parseInt(response.id, 10) - 1;\r\n                if (response.status === 204) {\r\n                    parsedResponses[responseId] = new Response();\r\n                }\r\n                else {\r\n                    parsedResponses[responseId] = new Response(null, {\r\n                        headers: response.headers,\r\n                        status: response.status,\r\n                    });\r\n                }\r\n            }\r\n            resolve({\r\n                nextLink: graphResponse.nextLink,\r\n                responses: parsedResponses,\r\n            });\r\n        });\r\n    };\r\n    __decorate([\r\n        beta(\"Graph batching functionality is in beta.\")\r\n    ], GraphBatch.prototype, \"executeImpl\", null);\r\n    return GraphBatch;\r\n}(ODataBatch));\n\nexport { graph, GraphRest, GraphBatch, GraphQueryable, GraphQueryableCollection, GraphQueryableInstance, GraphQueryableSearchableCollection, SPfxClient };\n//# sourceMappingURL=graph.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/graph/dist/graph.es5.js\n// module id = 7\n// module chunks = 0","/**\n@license\n * @pnp/sp v1.0.3-0 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { __extends } from 'tslib';\nimport { Dictionary, FetchClient, RuntimeConfig, Util, mergeHeaders, mergeOptions, readBlobAsArrayBuffer } from '@pnp/common';\nimport { Logger } from '@pnp/logging';\nimport { BlobParser, BufferParser, JSONParser, ODataBatch, ODataDefaultParser, ODataParserBase, ODataQueryable, TextParser } from '@pnp/odata';\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (candidateUrl === null) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nvar SPBatchParseException = /** @class */ (function (_super) {\r\n    __extends(SPBatchParseException, _super);\r\n    function SPBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"BatchParseException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return SPBatchParseException;\r\n}(Error));\r\nvar SPODataIdException = /** @class */ (function (_super) {\r\n    __extends(SPODataIdException, _super);\r\n    function SPODataIdException(data, msg) {\r\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.data = data;\r\n        _this.name = \"ODataIdException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return SPODataIdException;\r\n}(Error));\r\nvar MaxCommentLengthException = /** @class */ (function (_super) {\r\n    __extends(MaxCommentLengthException, _super);\r\n    function MaxCommentLengthException(msg) {\r\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"MaxCommentLengthException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return MaxCommentLengthException;\r\n}(Error));\r\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\r\n    __extends(NotSupportedInBatchException, _super);\r\n    function NotSupportedInBatchException(operation) {\r\n        if (operation === void 0) { operation = \"This operation\"; }\r\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\r\n        _this.name = \"NotSupportedInBatchException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return NotSupportedInBatchException;\r\n}(Error));\r\nvar APIUrlException = /** @class */ (function (_super) {\r\n    __extends(APIUrlException, _super);\r\n    function APIUrlException(msg) {\r\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"APIUrlException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return APIUrlException;\r\n}(Error));\n\nfunction spExtractODataId(candidate) {\r\n    if (candidate.hasOwnProperty(\"odata.id\")) {\r\n        return candidate[\"odata.id\"];\r\n    }\r\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\r\n        return candidate.__metadata.id;\r\n    }\r\n    else {\r\n        throw new SPODataIdException(candidate);\r\n    }\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(spGetEntityUrl(d), null);\r\n            return Util.extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(spGetEntityUrl(d), null);\r\n            return Util.extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spGetEntityUrl(v), null);\r\n                return Util.extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spGetEntityUrl(v), null);\r\n                return Util.extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nfunction spGetEntityUrl(entity) {\r\n    if (entity.hasOwnProperty(\"odata.metadata\") && entity.hasOwnProperty(\"odata.editLink\")) {\r\n        // we are dealign with minimal metadata (default)\r\n        return Util.combinePaths(extractWebUrl(entity[\"odata.metadata\"]), \"_api\", entity[\"odata.editLink\"]);\r\n    }\r\n    else if (entity.hasOwnProperty(\"__metadata\")) {\r\n        // we are dealing with verbose, which has an absolute uri\r\n        return entity.__metadata.uri;\r\n    }\r\n    else {\r\n        // we are likely dealing with nometadata, so don't error but we won't be able to\r\n        // chain off these objects\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n}\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== null && typeof spPart !== \"undefined\" && typeof spPart.headers !== \"undefined\") {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== null && typeof spPart.baseUrl !== \"undefined\") {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== null && typeof spPart.fetchClientFactory !== \"undefined\") {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Dictionary();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== null) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = Util.combinePaths(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: Util.extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.add(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient() {\r\n        this._impl = SPRuntimeConfig.fetchClientFactory();\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/$$Version$$\");\r\n        }\r\n        opts = Util.extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                var index = url.indexOf(\"_api/\");\r\n                if (index < 0) {\r\n                    throw new APIUrlException();\r\n                }\r\n                var webUrl = url.substr(0, index);\r\n                return this._digestCache.getDigest(webUrl)\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = Util.extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(Util.getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (Util.isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(Util.combinePaths(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (typeof global._spPageContextInfo !== \"undefined\") {\r\n            // operating in classic pages\r\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\r\n                return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\r\n                return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (typeof global.location !== \"undefined\") {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(Util.combinePaths(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            var urlStr = baseUrl;\r\n            if (Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = urlStr;\r\n                _this._url = Util.combinePaths(urlStr, path);\r\n            }\r\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = urlStr.lastIndexOf(\"/\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                path = Util.combinePaths(urlStr.slice(index), path);\r\n                _this._url = Util.combinePaths(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = urlStr.lastIndexOf(\"(\");\r\n                _this._parentUrl = urlStr.slice(0, index);\r\n                _this._url = Util.combinePaths(urlStr, path);\r\n            }\r\n        }\r\n        else {\r\n            var q = baseUrl;\r\n            _this._parentUrl = q._url;\r\n            _this._options = q._options;\r\n            var target = q._query.get(\"@target\");\r\n            if (target !== null) {\r\n                _this._query.add(\"@target\", target);\r\n            }\r\n            _this._url = Util.combinePaths(_this._parentUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Util.extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Dictionary();\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        // inlude our explicitly set query string params\r\n        aliasedParams.merge(this._query);\r\n        if (aliasedParams.count > 0) {\r\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path);\r\n        parent.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            parent.query.add(\"@target\", target);\r\n        }\r\n        if (typeof batch !== \"undefined\") {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Util.getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        var _this = this;\r\n        if (ascending === void 0) { ascending = true; }\r\n        var query = this._query.getKeys().filter(function (k) { return k === \"$orderby\"; }).map(function (k) { return _this._query.get(k); });\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this._query.add(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    __extends(SiteUsers, _super);\r\n    /**\r\n     * Creates a new instance of the SiteUsers class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\r\n     */\r\n    function SiteUsers(baseUrl, path) {\r\n        if (path === void 0) { path = \"siteusers\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\r\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers, null).postCore({\r\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    __extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this user instance with the supplied properties\r\n    *\r\n    * @param properties A plain object of property names and values to update for the user\r\n    */\r\n    SiteUser.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this user\r\n     *\r\n     */\r\n    SiteUser.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    __extends(CurrentUser, _super);\r\n    function CurrentUser(baseUrl, path) {\r\n        if (path === void 0) { path = \"currentuser\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    __extends(SiteGroups, _super);\r\n    /**\r\n     * Creates a new instance of the SiteGroups class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\r\n     */\r\n    function SiteGroups(baseUrl, path) {\r\n        if (path === void 0) { path = \"sitegroups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    __extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this group instance with the supplied properties\r\n    *\r\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\r\n    */\r\n    /* tslint:disable no-string-literal */\r\n    SiteGroup.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retGroup = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                group: retGroup,\r\n            };\r\n        });\r\n    };\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    __extends(RoleAssignments, _super);\r\n    /**\r\n     * Creates a new instance of the RoleAssignments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\r\n     */\r\n    function RoleAssignments(baseUrl, path) {\r\n        if (path === void 0) { path = \"roleassignments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    __extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this role assignment\r\n     *\r\n     */\r\n    RoleAssignment.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitions, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\r\n     *\r\n     */\r\n    function RoleDefinitions(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            BasePermissions: Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    __extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\r\n            properties[\"BasePermissions\"] = Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\r\n        }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (properties.hasOwnProperty(\"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Deletes this role definition\r\n     *\r\n     */\r\n    RoleDefinition.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitionBindings, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitionBindings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\r\n     */\r\n    function RoleDefinitionBindings(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: JSON.stringify({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (typeof emailData !== \"undefined\") {\r\n                postBody = Util.extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: JSON.stringify(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = Util.extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\r\n                postBody = Util.extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: JSON.stringify({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: JSON.stringify({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: JSON.stringify({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: JSON.stringify({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: JSON.stringify({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (typeof group !== \"undefined\" && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: JSON.stringify(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    __extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(spGetEntityUrl(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    __extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    __extends(WebPart, _super);\r\n    /**\r\n     * Creates a new instance of the WebPart class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\r\n     */\r\n    function WebPart(baseUrl, path) {\r\n        if (path === void 0) { path = \"webpart\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    __extends(Folders, _super);\r\n    /**\r\n     * Creates a new instance of the Folders class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Folders(baseUrl, path) {\r\n        if (path === void 0) { path = \"folders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    __extends(Folder, _super);\r\n    function Folder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Folder.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.Folder\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                folder: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Util.extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    __extends(ContentTypes, _super);\r\n    /**\r\n     * Creates a new instance of the ContentTypes class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\r\n     */\r\n    function ContentTypes(baseUrl, path) {\r\n        if (path === void 0) { path = \"contenttypes\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    __extends(ContentType, _super);\r\n    function ContentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Delete this content type\r\n     */\r\n    ContentType.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    __extends(FieldLinks, _super);\r\n    /**\r\n     * Creates a new instance of the ContentType class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\r\n     */\r\n    function FieldLinks(baseUrl, path) {\r\n        if (path === void 0) { path = \"fieldlinks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    __extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    __extends(AttachmentFiles, _super);\r\n    /**\r\n     * Creates a new instance of the AttachmentFiles class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\r\n     */\r\n    function AttachmentFiles(baseUrl, path) {\r\n        if (path === void 0) { path = \"AttachmentFiles\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    __extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    __extends(Views, _super);\r\n    /**\r\n     * Creates a new instance of the Views class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Views(baseUrl, path) {\r\n        if (path === void 0) { path = \"views\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, additionalSettings));\r\n        return this.clone(Views, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    function View() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this view intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the view\r\n     */\r\n    View.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this view\r\n     *\r\n     */\r\n    View.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    __extends(ViewFields, _super);\r\n    function ViewFields(baseUrl, path) {\r\n        if (path === void 0) { path = \"viewfields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\r\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    __extends(Fields, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Fields(baseUrl, path) {\r\n        if (path === void 0) { path = \"fields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param title The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": Util.extend({\r\n                \"__metadata\": {\r\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\r\n                },\r\n            }, info),\r\n        });\r\n        return this.clone(Fields, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.clone(Fields, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = Util.extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = Util.extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = Util.extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = Util.extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", Util.extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            parameters: Util.extend({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n                \"__metadata\": { \"type\": \"SP.FieldCreationInformation\" },\r\n            }, properties),\r\n        });\r\n        return this.clone(Fields, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", Util.extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", Util.extend(props, properties));\r\n    };\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this fields\r\n     *\r\n     */\r\n    Field.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    __extends(Forms, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Forms(baseUrl, path) {\r\n        if (path === void 0) { path = \"forms\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    __extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    __extends(Subscriptions, _super);\r\n    /**\r\n     * Creates a new instance of the Subscriptions class\r\n     *\r\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\r\n     */\r\n    function Subscriptions(baseUrl, path) {\r\n        if (path === void 0) { path = \"subscriptions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var subscription = new Subscription(this);\r\n        subscription.concat(\"('\" + subscriptionId + \"')\");\r\n        return subscription;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    __extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    __extends(UserCustomActions, _super);\r\n    /**\r\n     * Creates a new instance of the UserCustomActions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\r\n     */\r\n    function UserCustomActions(baseUrl, path) {\r\n        if (path === void 0) { path = \"usercustomactions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions, \"clear\").postCore();\r\n    };\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    __extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Updates this user custom action with the supplied properties\r\n    *\r\n    * @param properties An information object of property names and values to update for this user custom action\r\n    */\r\n    UserCustomAction.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                action: _this,\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    __extends(Lists, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Lists(baseUrl, path) {\r\n        if (path === void 0) { path = \"lists\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = Util.extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new NotSupportedInBatchException(\"The ensure list method\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId(json));\r\n        });\r\n    };\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    __extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: Util.extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\r\n            }, overrideParameters),\r\n            parameters: Util.extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\r\n            }, parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: JSON.stringify(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    __extends(Items, _super);\r\n    /**\r\n     * Creates a new instance of the Items class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Items(baseUrl, path) {\r\n        if (path === void 0) { path = \"items\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Item by id\r\n     *\r\n     * @param id The integer id of the item to retrieve\r\n     */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser());\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     */\r\n    Items.prototype.getAll = function (requestSize) {\r\n        var _this = this;\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": \"application/json;odata=nometadata\",\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.getKeys()\r\n            .filter(function (k) { return /^\\$select$|^\\$filter$|^\\$top$/.test(k.toLowerCase()); })\r\n            .reduce(function (i, k) {\r\n            i.query.add(k, _this.query.get(k));\r\n            return i;\r\n        }, items);\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = JSON.stringify(Util.extend({\r\n                \"__metadata\": { \"type\": listItemEntityType },\r\n            }, properties));\r\n            var promise = _this.clone(Items, null).postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = JSON.stringify(Util.extend({\r\n                    \"__metadata\": { \"type\": listItemEntityType },\r\n                }, properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Delete this item\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    Item.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i._query.add(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    __extends(ItemVersions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function ItemVersions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    __extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    ItemVersion.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(nextUrl, results) {\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    __extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    __extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    __extends(Files, _super);\r\n    /**\r\n     * Creates a new instance of the Files class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Files(baseUrl, path) {\r\n        if (path === void 0) { path = \"files\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Util.extend(new Item(spGetEntityUrl(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (typeof progress === \"undefined\") {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = Util.getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(response.ServerRelativeUrl),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    __extends(Versions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Versions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    __extends(Version, _super);\r\n    function Version() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Version.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    __extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        var _this = this;\r\n        // we need to handle the case of getting created from something that already has \"_api/...\" or does not\r\n        var candidateUrl = \"\";\r\n        if (typeof baseUrl === \"string\") {\r\n            candidateUrl = baseUrl;\r\n        }\r\n        else if (typeof baseUrl !== \"undefined\") {\r\n            candidateUrl = baseUrl.toUrl();\r\n        }\r\n        _this = _super.call(this, extractWebUrl(candidateUrl), path) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    __extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Gets an attribute value from an html string block\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    var reg = new RegExp(attrName + \"=\\\"([^\\\"]*?)\\\"\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match.length > 0 ? match[1] : null;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (typeof html === \"undefined\" || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (collection[i].hasOwnProperty(\"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (collection[i].hasOwnProperty(\"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    __extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = Util.combinePaths(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return JSON.stringify(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        return JSON.parse(escapedString\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#58;/g, \":\")\r\n            .replace(/&#123;/g, \"{\")\r\n            .replace(/&#125;/g, \"}\"));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergeControlToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergeControlToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergeControlToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = Util.getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    __extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    __extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>/i.exec(html);\r\n        this.text = match.length > 1 ? match[1] : \"\";\r\n    };\r\n    return ClientSideText;\r\n}(CanvasControl));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    __extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\");\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = properties;\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.setProperties(webPartData.properties);\r\n        if (typeof webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (typeof this.serverProcessedContent === \"undefined\" || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (typeof this.serverProcessedContent !== \"undefined\") {\r\n            if (typeof this.serverProcessedContent.searchablePlainTexts !== \"undefined\") {\r\n                for (var i = 0; i < this.serverProcessedContent.searchablePlainTexts.length; i++) {\r\n                    var prop = this.serverProcessedContent.searchablePlainTexts[i];\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + prop.Name + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(prop.Value);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.imageSources !== \"undefined\") {\r\n                for (var i = 0; i < this.serverProcessedContent.imageSources.length; i++) {\r\n                    var prop = this.serverProcessedContent.imageSources[i];\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + prop.Name + \"\\\" src=\\\"\" + prop.Value + \"\\\" />\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.links !== \"undefined\") {\r\n                for (var i = 0; i < this.serverProcessedContent.links.length; i++) {\r\n                    var prop = this.serverProcessedContent.links[i];\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + prop.Name + \"\\\" href=\\\"\" + prop.Value + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (typeof props.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.properties !== \"undefined\") {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (typeof props.properties !== \"undefined\") {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(CanvasControl));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    __extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = JSON.stringify({\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        });\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = JSON.stringify({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    __extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    __extends(Navigation, _super);\r\n    /**\r\n     * Creates a new instance of the Navigation class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\r\n     */\r\n    function Navigation(baseUrl, path) {\r\n        if (path === void 0) { path = \"navigation\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    __extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: JSON.stringify({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: JSON.stringify({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Allows for the fluent construction of search queries\r\n */\r\nvar SearchQueryBuilder = /** @class */ (function () {\r\n    function SearchQueryBuilder(queryText, _query) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (_query === void 0) { _query = {}; }\r\n        this._query = _query;\r\n        if (typeof queryText === \"string\" && queryText.length > 0) {\r\n            this.extendQuery({ Querytext: queryText });\r\n        }\r\n    }\r\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (queryTemplate === void 0) { queryTemplate = {}; }\r\n        return new SearchQueryBuilder(queryText, queryTemplate);\r\n    };\r\n    SearchQueryBuilder.prototype.text = function (queryText) {\r\n        return this.extendQuery({ Querytext: queryText });\r\n    };\r\n    SearchQueryBuilder.prototype.template = function (template) {\r\n        return this.extendQuery({ QueryTemplate: template });\r\n    };\r\n    SearchQueryBuilder.prototype.sourceId = function (id) {\r\n        return this.extendQuery({ SourceId: id });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableInterleaving: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableStemming: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\r\n        get: function () {\r\n            return this.extendQuery({ TrimDuplicates: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\r\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableNicknames: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableFQL: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnablePhonetic: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\r\n        get: function () {\r\n            return this.extendQuery({ BypassResultTypes: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessBestBets: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableQueryRules: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableSorting: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\r\n        get: function () {\r\n            return this.extendQuery({ GenerateBlockRankLog: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\r\n        return this.extendQuery({ RankingModelId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.startRow = function (n) {\r\n        return this.extendQuery({ StartRow: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\r\n        return this.extendQuery({ RowLimit: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\r\n        return this.extendQuery({ RowsPerPage: n });\r\n    };\r\n    SearchQueryBuilder.prototype.selectProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SelectProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.culture = function (culture) {\r\n        return this.extendQuery({ Culture: culture });\r\n    };\r\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\r\n        return this.extendQuery({ TimeZoneId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.refinementFilters = function () {\r\n        var filters = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filters[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ RefinementFilters: filters });\r\n    };\r\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\r\n        return this.extendQuery({ Refiners: refiners });\r\n    };\r\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\r\n        return this.extendQuery({ HiddenConstraints: constraints });\r\n    };\r\n    SearchQueryBuilder.prototype.sortList = function () {\r\n        var sorts = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sorts[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SortList: sorts });\r\n    };\r\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\r\n        return this.extendQuery({ Timeout: milliseconds });\r\n    };\r\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ HitHighlightedProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\r\n        return this.extendQuery({ ClientType: clientType });\r\n    };\r\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\r\n        return this.extendQuery({ PersonalizationData: data });\r\n    };\r\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\r\n        return this.extendQuery({ ResultsUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.queryTag = function () {\r\n        var tags = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tags[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ QueryTag: tags });\r\n    };\r\n    SearchQueryBuilder.prototype.properties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ Properties: properties });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessPersonalFavorites: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\r\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.reorderingRules = function () {\r\n        var rules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            rules[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ ReorderingRules: rules });\r\n    };\r\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\r\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\r\n        return this.extendQuery({ CollapseSpecification: spec });\r\n    };\r\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\r\n        return this.extendQuery({ UILanguage: lang });\r\n    };\r\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\r\n        return this.extendQuery({ DesiredSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\r\n        return this.extendQuery({ MaxSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\r\n        return this.extendQuery({ SummaryLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\r\n        return this._query;\r\n    };\r\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\r\n        this._query = Util.extend(this._query, part);\r\n        return this;\r\n    };\r\n    return SearchQueryBuilder;\r\n}());\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    __extends(Search, _super);\r\n    /**\r\n     * Creates a new instance of the Search class\r\n     *\r\n     * @param baseUrl The url for the search context\r\n     * @param query The SearchQuery object to execute\r\n     */\r\n    function Search(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/postquery\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * .......\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = JSON.stringify({\r\n            request: Util.extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\r\n            }, formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        if (prop.hasOwnProperty(\"results\")) {\r\n            return prop;\r\n        }\r\n        return { results: prop };\r\n    };\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = Util.extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: false,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    __extends(SearchSuggest, _super);\r\n    function SearchSuggest(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/suggest\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        if (query.hasOwnProperty(\"count\")) {\r\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"personalCount\")) {\r\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"preQuery\")) {\r\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\r\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"capitalize\")) {\r\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"culture\")) {\r\n            this.query.add(\"culture\", query.culture.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"stemming\")) {\r\n            this.query.add(\"enablestemming\", query.stemming.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"includePeople\")) {\r\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"queryRules\")) {\r\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"prefixMatch\")) {\r\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\r\n        }\r\n    };\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nvar SearchSuggestResult = /** @class */ (function () {\r\n    function SearchSuggestResult(json) {\r\n        if (json.hasOwnProperty(\"suggest\")) {\r\n            // verbose\r\n            this.PeopleNames = json.suggest.PeopleNames.results;\r\n            this.PersonalResults = json.suggest.PersonalResults.results;\r\n            this.Queries = json.suggest.Queries.results;\r\n        }\r\n        else {\r\n            this.PeopleNames = json.PeopleNames;\r\n            this.PersonalResults = json.PersonalResults;\r\n            this.Queries = json.Queries;\r\n        }\r\n    }\r\n    return SearchSuggestResult;\r\n}());\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    __extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new SPBatchParseException(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new SPBatchParseException(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new SPBatchParseException(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = Util.getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : Util.combinePaths(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof castHeaders[\"X-HTTP-Method\"] !== \"undefined\") {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-$$Version$$\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new SPBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    __extends(Features, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Features(baseUrl, path) {\r\n        if (path === void 0) { path = \"features\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"add\").postCore({\r\n            body: JSON.stringify({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"remove\").postCore({\r\n            body: JSON.stringify({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    __extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    __extends(RegionalSettings, _super);\r\n    /**\r\n     * Creates a new instance of the RegionalSettings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this regional settings collection\r\n     */\r\n    function RegionalSettings(baseUrl, path) {\r\n        if (path === void 0) { path = \"regionalsettings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    __extends(InstalledLanguages, _super);\r\n    function InstalledLanguages(baseUrl, path) {\r\n        if (path === void 0) { path = \"installedlanguages\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    __extends(TimeZone, _super);\r\n    function TimeZone(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezone\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = Util.dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    __extends(TimeZones, _super);\r\n    function TimeZones(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezones\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    __extends(Webs, _super);\r\n    /**\r\n     * Creates a new instance of the Webs class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     */\r\n    function Webs(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webs\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": Util.extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(spExtractODataId(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    __extends(WebInfos, _super);\r\n    /**\r\n     * Creates a new instance of the WebInfos class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\r\n     */\r\n    function WebInfos(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webinfos\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    __extends(Web, _super);\r\n    /**\r\n     * Creates a new instance of the Web class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\r\n     */\r\n    function Web(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Util.extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = JSON.stringify({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.add(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = JSON.stringify({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(spExtractODataId(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(spExtractODataId(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = JSON.stringify({ \"query\": Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    __extends(Site, _super);\r\n    /**\r\n     * Creates a new instance of the Site class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\r\n     */\r\n    function Site(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/site\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\r\n            return {\r\n                data: d,\r\n                web: Web.fromUrl(spExtractODataId(d)),\r\n            };\r\n        });\r\n    };\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    __extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\r\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n                request.postCore({\r\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n                }).then(function (_) { return resolve(); });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    __extends(ProfileLoader, _super);\r\n    /**\r\n   * Creates a new instance of the ProfileLoader class\r\n   *\r\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\r\n   */\r\n    function ProfileLoader(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: JSON.stringify({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    __extends(SocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function SocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/social.following\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return JSON.stringify({\r\n            \"actor\": Util.extend({\r\n                Id: null,\r\n                \"__metadata\": { \"type\": \"SP.Social.SocialActorInfo\" },\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    __extends(MySocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function MySocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"my\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery, \"followers\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery, \"suggestions\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    __extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\r\n            },\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = Util.extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = Util.extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = Util.extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = Util.extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query instanceof SearchQueryBuilder) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\nexport { spExtractODataId, spODataEntity, spODataEntityArray, SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, SharePointQueryableSecurable, FileFolderShared, SharePointQueryableShareable, SharePointQueryableShareableFile, SharePointQueryableShareableFolder, SharePointQueryableShareableItem, SharePointQueryableShareableWeb, AppCatalog, App, Field, Fields, CheckinType, WebPartsPersonalizationScope, MoveOperations, TemplateFileType, File, Files, Folder, Folders, SPHttpClient, Item, Items, ItemVersion, ItemVersions, PagedItemCollection, NavigationNodes, NavigationNode, NavigationService, List, Lists, sp, SPRest, RoleDefinitionBindings, Search, SearchQueryBuilder, SearchResults, SortDirection, ReorderingRuleMatchType, QueryPropertyValueType, SearchBuiltInSourceId, SearchSuggest, SearchSuggestResult, Site, UtilityMethod, WebPartDefinitions, WebPartDefinition, WebPart, Web, ClientSidePage, CanvasSection, CanvasControl, CanvasColumn, ClientSideText, ClientSideWebpart, SocialQuery, MySocialQuery, ControlMode, FieldTypes, DateTimeFieldFormatType, AddFieldOptions, CalendarType, UrlFieldFormatType, PermissionKind, PrincipalType$1 as PrincipalType, PrincipalSource, RoleType, PageType, SharingLinkKind, SharingRole, SharingOperationStatusCode, SPSharedObjectType, SharingDomainRestrictionMode, RenderListDataOptions, FieldUserSelectionMode, ChoiceFieldFormatType };\n//# sourceMappingURL=sp.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp/dist/sp.es5.js\n// module id = 8\n// module chunks = 0","export * from \"./src/pnpjs\";\r\nimport pnp from \"./src/pnpjs\";\r\nexport default pnp;\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/pnpjs/es5/index.js\n// module id = 9\n// module chunks = 0","/**\n@license\n * @pnp/sp-addinhelpers v1.0.3-0 - pnp - provides functionality for working within SharePoint add-ins\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { UrlException, Util } from '@pnp/common';\nimport { __extends } from 'tslib';\nimport { Logger } from '@pnp/logging';\nimport { SPRest, Site, Web } from '@pnp/sp';\n\nvar SPRequestExecutorUndefinedException = /** @class */ (function (_super) {\r\n    __extends(SPRequestExecutorUndefinedException, _super);\r\n    function SPRequestExecutorUndefinedException() {\r\n        var _this = this;\r\n        var msg = [\r\n            \"SP.RequestExecutor is undefined. \",\r\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\r\n        ].join(\" \");\r\n        _this = _super.call(this, msg) || this;\r\n        _this.name = \"SPRequestExecutorUndefinedException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return SPRequestExecutorUndefinedException;\r\n}(Error));\n\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (typeof spResponse.headers !== \"undefined\") {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\r\n            throw new SPRequestExecutorUndefinedException();\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = Util.extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = Util.extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\n\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    __extends(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Site, addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Web, addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!Util.isUrlAbsolute(addInWebUrl)) {\r\n            throw new UrlException(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!Util.isUrlAbsolute(hostWebUrl)) {\r\n            throw new UrlException(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(SPRest));\r\nvar sp$1 = new SPRestAddIn();\n\nexport { SPRequestExecutorClient, SPRequestExecutorUndefinedException, SPRestAddIn, sp$1 as sp };\n//# sourceMappingURL=sp-addinhelpers.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp-addinhelpers/dist/sp-addinhelpers.es5.js\n// module id = 10\n// module chunks = 0","import { RuntimeConfig } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n//# sourceMappingURL=pnplibconfig.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/pnpjs/es5/src/config/pnplibconfig.js\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}