{"version":3,"sources":["../../../../packages/pnpjs/src/pnpjs.ts","../../../../packages/pnpjs/src/config/pnplibconfig.ts"],"names":["util","Util","sp","_sp","graph","_graph","storage","PnPClientStorage","config","Settings","log","Logger","RuntimeConfig","extend"],"mappings":"qiBAwBA,IAAaA,EAAOC,EAAAA,KAKPC,EAAkBC,EAAAA,GAKlBC,EAAmBC,EAAAA,MAKnBC,EAA4B,IAAIC,EAAAA,iBAKhCC,EAAS,IAAIC,EAAAA,SAKbC,EAAMC,EAAAA,iFC3CGH,GAClBI,EAAAA,cAAcC,OAAOL","sourcesContent":["import { Logger } from \"@pnp/logging\";\r\nimport { Util, PnPClientStorage } from \"@pnp/common\";\r\nimport { Settings } from \"@pnp/config-store\";\r\nimport { GraphRest, graph as _graph } from \"@pnp/graph\";\r\nimport { sp as _sp, SPRestAddIn } from \"@pnp/sp-addinhelpers\";\r\nimport { setup as _setup, PnPConfiguration } from \"./config/pnplibconfig\";\r\n\r\n/**\r\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\r\n */\r\n\r\n/**\r\n * Re-export everything from the dependencies to match the previous pattern\r\n */\r\nexport * from \"@pnp/sp\";\r\nexport * from \"@pnp/graph\";\r\nexport * from \"@pnp/common\";\r\nexport * from \"@pnp/logging\";\r\nexport * from \"@pnp/config-store\";\r\nexport * from \"@pnp/odata\";\r\n\r\n/**\r\n * Utility methods\r\n */\r\nexport const util = Util;\r\n\r\n/**\r\n * Provides access to the SharePoint REST interface\r\n */\r\nexport const sp = <SPRestAddIn>_sp;\r\n\r\n/**\r\n * Provides access to the Microsoft Graph REST interface\r\n */\r\nexport const graph = <GraphRest>_graph;\r\n\r\n/**\r\n * Provides access to local and session storage\r\n */\r\nexport const storage: PnPClientStorage = new PnPClientStorage();\r\n\r\n/**\r\n * Global configuration instance to which providers can be added\r\n */\r\nexport const config = new Settings();\r\n\r\n/**\r\n * Global logging instance to which subscribers can be registered and messages written\r\n */\r\nexport const log = Logger;\r\n\r\n/**\r\n * Allows for the configuration of the library\r\n */\r\nexport const setup: (config: PnPConfiguration) => void = _setup;\r\n\r\n// /**\r\n//  * Expose a subset of classes from the library for public consumption\r\n//  */\r\n\r\n// creating this class instead of directly assigning to default fixes issue #116\r\nconst Def = {\r\n    /**\r\n     * Global configuration instance to which providers can be added\r\n     */\r\n    config: config,\r\n    /**\r\n     * Provides access to the Microsoft Graph REST interface\r\n     */\r\n    graph: graph,\r\n    /**\r\n     * Global logging instance to which subscribers can be registered and messages written\r\n     */\r\n    log: log,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    setup: setup,\r\n    /**\r\n     * Provides access to the REST interface\r\n     */\r\n    sp: sp,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    storage: storage,\r\n    /**\r\n     * Utility methods\r\n     */\r\n    util: util,\r\n};\r\n\r\n/**\r\n * Enables use of the import pnp from syntax\r\n */\r\nexport default Def;\r\n","import { LibraryConfiguration, RuntimeConfig } from \"@pnp/common\";\r\nimport { SPConfigurationPart } from \"@pnp/sp\";\r\nimport { GraphConfigurationPart } from \"@pnp/graph\";\r\n\r\nexport interface PnPConfiguration extends LibraryConfiguration, SPConfigurationPart, GraphConfigurationPart { }\r\n\r\nexport function setup(config: PnPConfiguration): void {\r\n    RuntimeConfig.extend(config);\r\n}\r\n"]}