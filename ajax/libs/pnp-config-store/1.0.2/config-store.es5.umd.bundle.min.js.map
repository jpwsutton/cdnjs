{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///config-store.es5.umd.bundle.min.js","webpack:///webpack/bootstrap c6064ebdf7385a711aa7","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./build/packages/config-store/es5/src/providers/cachingConfigurationProvider.js","webpack:///./build/packages/config-store/es5/src/exceptions.js","webpack:///./build/packages/config-store/es5/src/configuration.js","webpack:///(webpack)/buildin/global.js","webpack:///./build/packages/config-store/es5/src/providers/spListConfigurationProvider.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","getCtxCallback","context","method","params","_i","arguments","length","apply","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","combinePaths","paths","filter","path","Util","stringIsNullOrEmpty","map","replace","join","getRandomString","chars","text","Array","possible","charAt","Math","floor","random","getGUID","r","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","constructor","extend","target","source","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","test","mergeHeaders","Request","headers","forEach","value","append","Dictionary","PnPClientStorage","__WEBPACK_IMPORTED_MODULE_0__pnp_logging__","__WEBPACK_IMPORTED_MODULE_1_tslib__","keys","values","key","index","indexOf","add","remove","push","merge","_this","sourceAsDictionary_1","getKeys","sourceAsHash","val","splice","getValues","clear","RuntimeConfigImpl","_super","UrlException","msg","log","data","level","message","Error","_v","config","_runtimeConfig","RuntimeConfig","FetchClient","fetch","options","PnPClientStorageWrapper","BearerTokenFetchClient","_token","Headers","set","store","defaultTimeoutMinutes","enabled","enableCacheExpiration","write","cacheExpirationHandler","getItem","persistable","JSON","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","Promise","resolve","then","deleteExpired","reject","e","defaultTimeout","defaultCachingTimeoutSeconds","stringify","pnp","_","setTimeout","cacheExpirationIntervalMilliseconds","catch","MemoryStorage","_store","count","_local","_session","localStorage","sessionStorage","Logger","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","json","entry","error","err","subscribers","slice","subscriber","ConsoleListener","format","console","warn","FunctionListener","__extends","b","__","extendStatics","create","setPrototypeOf","__proto__","assign","__WEBPACK_IMPORTED_MODULE_0__pnp_common__","__WEBPACK_IMPORTED_MODULE_1__exceptions__","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","getConfiguration","cachedConfig","providerPromise","providedConfig","pnpCache","local","session","NoCacheAvailableException","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__pnp_logging__","__WEBPACK_IMPORTED_MODULE_0__src_configstore__","__WEBPACK_IMPORTED_MODULE_0__configuration__","__WEBPACK_IMPORTED_MODULE_1__providers_index__","__WEBPACK_IMPORTED_MODULE_2__exceptions__","Settings","_settings","addJSON","hash","load","provider","reason","getJSON","g","Function","eval","window","__WEBPACK_IMPORTED_MODULE_0__cachingConfigurationProvider__","__WEBPACK_IMPORTED_MODULE_1__spListConfigurationProvider__","SPListConfigurationProvider","sourceWeb","sourceListTitle","keyFieldName","valueFieldName","web","lists","getByTitle","listTitle","items","select","item","writable","asCaching","toUrl"],"mappings":"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","file":"config-store.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export readBlobAsText */\n/* unused harmony export readBlobAsArrayBuffer */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Dictionary; });\n/* unused harmony export deprecated */\n/* unused harmony export beta */\n/* unused harmony export UrlException */\n/* unused harmony export setup */\n/* unused harmony export RuntimeConfigImpl */\n/* unused harmony export RuntimeConfig */\n/* unused harmony export mergeHeaders */\n/* unused harmony export mergeOptions */\n/* unused harmony export FetchClient */\n/* unused harmony export BearerTokenFetchClient */\n/* unused harmony export PnPClientStorageWrapper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PnPClientStorage; });\n/* unused harmony export getCtxCallback */\n/* unused harmony export dateAdd */\n/* unused harmony export combinePaths */\n/* unused harmony export getRandomString */\n/* unused harmony export getGUID */\n/* unused harmony export isFunc */\n/* unused harmony export objectDefinedNotNull */\n/* unused harmony export isArray */\n/* unused harmony export extend */\n/* unused harmony export isUrlAbsolute */\n/* unused harmony export stringIsNullOrEmpty */\n/* unused harmony export Util */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_logging__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(2);\n/**\n@license\n * @pnp/common v1.0.2 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n\n\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    Object.defineProperty(Dictionary.prototype, \"count\", {\r\n        /**\r\n         * Gets a count of the items currently in the dictionary\r\n         */\r\n        get: function () {\r\n            return this.keys.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Dictionary;\r\n}());\n\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\nvar UrlException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __extends */])(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(\"defaultCachingStore\", \"session\");\r\n        this._v.add(\"defaultCachingTimeoutSeconds\", 60);\r\n        this._v.add(\"globalCacheDisable\", false);\r\n        this._v.add(\"enableCacheExpiration\", false);\r\n        this._v.add(\"cacheExpirationIntervalMilliseconds\", 750);\r\n        this._v.add(\"spfxContext\", null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingStore\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingTimeoutSeconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(\"globalCacheDisable\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(\"enableCacheExpiration\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(\"cacheExpirationIntervalMilliseconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(\"spfxContext\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combinePaths() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (!Util.objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(function (v) { return check(target, v); })\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return typeof s === \"undefined\" || s === null || s.length < 1;\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = getCtxCallback;\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = dateAdd;\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = combinePaths;\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = getRandomString;\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    Util.getGUID = getGUID;\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param cf The thing to test for functionness\r\n     */\r\n    Util.isFunc = isFunc;\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = objectDefinedNotNull;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = isArray;\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = extend;\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = isUrlAbsolute;\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = stringIsNullOrEmpty;\r\n    return Util;\r\n}());\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (Util.objectDefinedNotNull(source)) {\r\n        var headers = Util.extend(target.headers || {}, source.headers);\r\n        target = Util.extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __extends */])(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].write(\"Enabling cache expiration.\", 1 /* Info */);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", 1 /* Info */);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = Util.dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].write(\"Called cache expiration handler.\", 0 /* Verbose */);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(Util.getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: e,\r\n                level: 3 /* Error */,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\n\n//# sourceMappingURL=common.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(8)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Logger; });\n/* unused harmony export ConsoleListener */\n/* unused harmony export FunctionListener */\n/**\n@license\n * @pnp/logging v1.0.2 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry !== \"undefined\" && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\n\n//# sourceMappingURL=logging.es5.js.map\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = __extends;\n/* unused harmony export __assign */\n/* unused harmony export __rest */\n/* unused harmony export __decorate */\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* unused harmony export __awaiter */\n/* unused harmony export __generator */\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/* unused harmony export __makeTemplateObject */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exceptions__ = __webpack_require__(4);\n\r\n\r\n/**\r\n * A caching provider which can wrap other non-caching providers\r\n *\r\n */\r\nvar CachingConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new caching configuration provider\r\n     * @constructor\r\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\r\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\r\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\r\n     */\r\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\r\n        this.cacheKey = \"_configcache_\" + cacheKey;\r\n    }\r\n    /**\r\n     * Gets the wrapped configuration providers\r\n     *\r\n     * @return {IConfigurationProvider} Wrapped configuration provider\r\n     */\r\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\r\n        return this.wrappedProvider;\r\n    };\r\n    /**\r\n     * Loads the configuration values either from the cache or from the wrapped provider\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        // Cache not available, pass control to  the wrapped provider\r\n        if ((!this.store) || (!this.store.enabled)) {\r\n            return this.wrappedProvider.getConfiguration();\r\n        }\r\n        // Value is found in cache, return it directly\r\n        var cachedConfig = this.store.get(this.cacheKey);\r\n        if (cachedConfig) {\r\n            return new Promise(function (resolve) {\r\n                resolve(cachedConfig);\r\n            });\r\n        }\r\n        // Get and cache value from the wrapped provider\r\n        var providerPromise = this.wrappedProvider.getConfiguration();\r\n        providerPromise.then(function (providedConfig) {\r\n            _this.store.put(_this.cacheKey, providedConfig);\r\n        });\r\n        return providerPromise;\r\n    };\r\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\r\n        var pnpCache = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* PnPClientStorage */]();\r\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\r\n            return pnpCache.local;\r\n        }\r\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\r\n            return pnpCache.session;\r\n        }\r\n        throw new __WEBPACK_IMPORTED_MODULE_1__exceptions__[\"a\" /* NoCacheAvailableException */]();\r\n    };\r\n    return CachingConfigurationProvider;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (CachingConfigurationProvider);\r\n//# sourceMappingURL=cachingConfigurationProvider.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NoCacheAvailableException; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_logging__ = __webpack_require__(1);\n\r\n\r\nvar NoCacheAvailableException = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](NoCacheAvailableException, _super);\r\n    function NoCacheAvailableException(msg) {\r\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"NoCacheAvailableException\";\r\n        __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"a\" /* Logger */].log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return NoCacheAvailableException;\r\n}(Error));\r\n\r\n//# sourceMappingURL=exceptions.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_configstore__ = __webpack_require__(6);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Settings\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_configstore__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CachingConfigurationProvider\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_configstore__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPListConfigurationProvider\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_configstore__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NoCacheAvailableException\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_configstore__[\"b\"]; });\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__configuration__ = __webpack_require__(7);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_0__configuration__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_index__ = __webpack_require__(9);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__providers_index__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__providers_index__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__exceptions__ = __webpack_require__(4);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__exceptions__[\"a\"]; });\n\r\n\r\n\r\n//# sourceMappingURL=configstore.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Settings; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(0);\n\r\n/**\r\n * Class used to manage the current application settings\r\n *\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the settings class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Settings() {\r\n        this._settings = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* Dictionary */]();\r\n    }\r\n    /**\r\n     * Adds a new single setting, or overwrites a previous setting with the same key\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {string} value The setting value to store\r\n     */\r\n    Settings.prototype.add = function (key, value) {\r\n        this._settings.add(key, value);\r\n    };\r\n    /**\r\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {any} value The setting value to store\r\n     */\r\n    Settings.prototype.addJSON = function (key, value) {\r\n        this._settings.add(key, JSON.stringify(value));\r\n    };\r\n    /**\r\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\r\n     *\r\n     * @param {TypedHash<any>} hash The set of values to add\r\n     */\r\n    Settings.prototype.apply = function (hash) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                _this._settings.merge(hash);\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\r\n     *\r\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\r\n     */\r\n    Settings.prototype.load = function (provider) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            provider.getConfiguration().then(function (value) {\r\n                _this._settings.merge(value);\r\n                resolve();\r\n            }).catch(function (reason) {\r\n                reject(reason);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a value from the configuration\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {string} string value from the configuration\r\n     */\r\n    Settings.prototype.get = function (key) {\r\n        return this._settings.get(key);\r\n    };\r\n    /**\r\n     * Gets a JSON value, rehydrating the stored string to the original object\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {any} object from the configuration\r\n     */\r\n    Settings.prototype.getJSON = function (key) {\r\n        var o = this.get(key);\r\n        if (typeof o === \"undefined\" || o === null) {\r\n            return o;\r\n        }\r\n        return JSON.parse(o);\r\n    };\r\n    return Settings;\r\n}());\r\n\r\n//# sourceMappingURL=configuration.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cachingConfigurationProvider__ = __webpack_require__(3);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__cachingConfigurationProvider__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__spListConfigurationProvider__ = __webpack_require__(10);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__spListConfigurationProvider__[\"a\"]; });\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cachingConfigurationProvider__ = __webpack_require__(3);\n\r\n/**\r\n * A configuration provider which loads configuration values from a SharePoint list\r\n *\r\n */\r\nvar SPListConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new SharePoint list based configuration provider\r\n     * @constructor\r\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\r\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default: \"config\")\r\n     * @param {string} keyFieldName The name of the field in the list to use as the setting key (optional, default: \"Title\")\r\n     * @param {string} valueFieldName The name of the field in the list to use as the setting value (optional, default: \"Value\")\r\n     */\r\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle, keyFieldName, valueFieldName) {\r\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\r\n        if (keyFieldName === void 0) { keyFieldName = \"Title\"; }\r\n        if (valueFieldName === void 0) { valueFieldName = \"Value\"; }\r\n        this.sourceWeb = sourceWeb;\r\n        this.sourceListTitle = sourceListTitle;\r\n        this.keyFieldName = keyFieldName;\r\n        this.valueFieldName = valueFieldName;\r\n    }\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\r\n        /**\r\n         * Gets the url of the SharePoint site, where the configuration list is located\r\n         *\r\n         * @return {string} Url address of the site\r\n         */\r\n        get: function () {\r\n            return this.sourceWeb;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\r\n        /**\r\n         * Gets the title of the SharePoint list, which contains the configuration settings\r\n         *\r\n         * @return {string} List title\r\n         */\r\n        get: function () {\r\n            return this.sourceListTitle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads the configuration values from the SharePoint list\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        return this.web.lists.getByTitle(this.listTitle).items.select(this.keyFieldName, this.valueFieldName)\r\n            .get().then(function (data) { return data.reduce(function (c, item) {\r\n            return Object.defineProperty(c, item[_this.keyFieldName], {\r\n                configurable: false,\r\n                enumerable: false,\r\n                value: item[_this.valueFieldName],\r\n                writable: false,\r\n            });\r\n        }, {}); });\r\n    };\r\n    /**\r\n     * Wraps the current provider in a cache enabled provider\r\n     *\r\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\r\n     */\r\n    SPListConfigurationProvider.prototype.asCaching = function () {\r\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\r\n        return new __WEBPACK_IMPORTED_MODULE_0__cachingConfigurationProvider__[\"a\" /* default */](this, cacheKey);\r\n    };\r\n    return SPListConfigurationProvider;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (SPListConfigurationProvider);\r\n//# sourceMappingURL=spListConfigurationProvider.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// config-store.es5.umd.bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c6064ebdf7385a711aa7","/**\n@license\n * @pnp/common v1.0.2 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { Logger } from '@pnp/logging';\nimport { __extends } from 'tslib';\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    Object.defineProperty(Dictionary.prototype, \"count\", {\r\n        /**\r\n         * Gets a count of the items currently in the dictionary\r\n         */\r\n        get: function () {\r\n            return this.keys.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Dictionary;\r\n}());\n\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\nvar UrlException = /** @class */ (function (_super) {\r\n    __extends(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(\"defaultCachingStore\", \"session\");\r\n        this._v.add(\"defaultCachingTimeoutSeconds\", 60);\r\n        this._v.add(\"globalCacheDisable\", false);\r\n        this._v.add(\"enableCacheExpiration\", false);\r\n        this._v.add(\"cacheExpirationIntervalMilliseconds\", 750);\r\n        this._v.add(\"spfxContext\", null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingStore\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingTimeoutSeconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(\"globalCacheDisable\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(\"enableCacheExpiration\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(\"cacheExpirationIntervalMilliseconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(\"spfxContext\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combinePaths() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (!Util.objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(function (v) { return check(target, v); })\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return typeof s === \"undefined\" || s === null || s.length < 1;\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = getCtxCallback;\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = dateAdd;\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = combinePaths;\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = getRandomString;\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    Util.getGUID = getGUID;\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param cf The thing to test for functionness\r\n     */\r\n    Util.isFunc = isFunc;\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = objectDefinedNotNull;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = isArray;\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = extend;\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = isUrlAbsolute;\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = stringIsNullOrEmpty;\r\n    return Util;\r\n}());\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (Util.objectDefinedNotNull(source)) {\r\n        var headers = Util.extend(target.headers || {}, source.headers);\r\n        target = Util.extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            Logger.write(\"Enabling cache expiration.\", 1 /* Info */);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", 1 /* Info */);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = Util.dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        Logger.write(\"Called cache expiration handler.\", 0 /* Verbose */);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(Util.getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            Logger.log({\r\n                data: e,\r\n                level: 3 /* Error */,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\nexport { readBlobAsText, readBlobAsArrayBuffer, Dictionary, deprecated, beta, UrlException, setup, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage, getCtxCallback, dateAdd, combinePaths, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, Util };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 0\n// module chunks = 0","/**\n@license\n * @pnp/logging v1.0.2 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry !== \"undefined\" && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 1\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 2\n// module chunks = 0","import { PnPClientStorage } from \"@pnp/common\";\r\nimport { NoCacheAvailableException } from \"../exceptions\";\r\n/**\r\n * A caching provider which can wrap other non-caching providers\r\n *\r\n */\r\nvar CachingConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new caching configuration provider\r\n     * @constructor\r\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\r\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\r\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\r\n     */\r\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\r\n        this.cacheKey = \"_configcache_\" + cacheKey;\r\n    }\r\n    /**\r\n     * Gets the wrapped configuration providers\r\n     *\r\n     * @return {IConfigurationProvider} Wrapped configuration provider\r\n     */\r\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\r\n        return this.wrappedProvider;\r\n    };\r\n    /**\r\n     * Loads the configuration values either from the cache or from the wrapped provider\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        // Cache not available, pass control to  the wrapped provider\r\n        if ((!this.store) || (!this.store.enabled)) {\r\n            return this.wrappedProvider.getConfiguration();\r\n        }\r\n        // Value is found in cache, return it directly\r\n        var cachedConfig = this.store.get(this.cacheKey);\r\n        if (cachedConfig) {\r\n            return new Promise(function (resolve) {\r\n                resolve(cachedConfig);\r\n            });\r\n        }\r\n        // Get and cache value from the wrapped provider\r\n        var providerPromise = this.wrappedProvider.getConfiguration();\r\n        providerPromise.then(function (providedConfig) {\r\n            _this.store.put(_this.cacheKey, providedConfig);\r\n        });\r\n        return providerPromise;\r\n    };\r\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\r\n        var pnpCache = new PnPClientStorage();\r\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\r\n            return pnpCache.local;\r\n        }\r\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\r\n            return pnpCache.session;\r\n        }\r\n        throw new NoCacheAvailableException();\r\n    };\r\n    return CachingConfigurationProvider;\r\n}());\r\nexport default CachingConfigurationProvider;\r\n//# sourceMappingURL=cachingConfigurationProvider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/config-store/es5/src/providers/cachingConfigurationProvider.js\n// module id = 3\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { Logger } from \"@pnp/logging\";\r\nvar NoCacheAvailableException = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NoCacheAvailableException, _super);\r\n    function NoCacheAvailableException(msg) {\r\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"NoCacheAvailableException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return NoCacheAvailableException;\r\n}(Error));\r\nexport { NoCacheAvailableException };\r\n//# sourceMappingURL=exceptions.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/config-store/es5/src/exceptions.js\n// module id = 4\n// module chunks = 0","import { Dictionary } from \"@pnp/common\";\r\n/**\r\n * Class used to manage the current application settings\r\n *\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the settings class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Settings() {\r\n        this._settings = new Dictionary();\r\n    }\r\n    /**\r\n     * Adds a new single setting, or overwrites a previous setting with the same key\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {string} value The setting value to store\r\n     */\r\n    Settings.prototype.add = function (key, value) {\r\n        this._settings.add(key, value);\r\n    };\r\n    /**\r\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {any} value The setting value to store\r\n     */\r\n    Settings.prototype.addJSON = function (key, value) {\r\n        this._settings.add(key, JSON.stringify(value));\r\n    };\r\n    /**\r\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\r\n     *\r\n     * @param {TypedHash<any>} hash The set of values to add\r\n     */\r\n    Settings.prototype.apply = function (hash) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                _this._settings.merge(hash);\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\r\n     *\r\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\r\n     */\r\n    Settings.prototype.load = function (provider) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            provider.getConfiguration().then(function (value) {\r\n                _this._settings.merge(value);\r\n                resolve();\r\n            }).catch(function (reason) {\r\n                reject(reason);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a value from the configuration\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {string} string value from the configuration\r\n     */\r\n    Settings.prototype.get = function (key) {\r\n        return this._settings.get(key);\r\n    };\r\n    /**\r\n     * Gets a JSON value, rehydrating the stored string to the original object\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {any} object from the configuration\r\n     */\r\n    Settings.prototype.getJSON = function (key) {\r\n        var o = this.get(key);\r\n        if (typeof o === \"undefined\" || o === null) {\r\n            return o;\r\n        }\r\n        return JSON.parse(o);\r\n    };\r\n    return Settings;\r\n}());\r\nexport { Settings };\r\n//# sourceMappingURL=configuration.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/config-store/es5/src/configuration.js\n// module id = 7\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 8\n// module chunks = 0","import { default as CachingConfigurationProvider } from \"./cachingConfigurationProvider\";\r\n/**\r\n * A configuration provider which loads configuration values from a SharePoint list\r\n *\r\n */\r\nvar SPListConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new SharePoint list based configuration provider\r\n     * @constructor\r\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\r\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default: \"config\")\r\n     * @param {string} keyFieldName The name of the field in the list to use as the setting key (optional, default: \"Title\")\r\n     * @param {string} valueFieldName The name of the field in the list to use as the setting value (optional, default: \"Value\")\r\n     */\r\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle, keyFieldName, valueFieldName) {\r\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\r\n        if (keyFieldName === void 0) { keyFieldName = \"Title\"; }\r\n        if (valueFieldName === void 0) { valueFieldName = \"Value\"; }\r\n        this.sourceWeb = sourceWeb;\r\n        this.sourceListTitle = sourceListTitle;\r\n        this.keyFieldName = keyFieldName;\r\n        this.valueFieldName = valueFieldName;\r\n    }\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\r\n        /**\r\n         * Gets the url of the SharePoint site, where the configuration list is located\r\n         *\r\n         * @return {string} Url address of the site\r\n         */\r\n        get: function () {\r\n            return this.sourceWeb;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\r\n        /**\r\n         * Gets the title of the SharePoint list, which contains the configuration settings\r\n         *\r\n         * @return {string} List title\r\n         */\r\n        get: function () {\r\n            return this.sourceListTitle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads the configuration values from the SharePoint list\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        return this.web.lists.getByTitle(this.listTitle).items.select(this.keyFieldName, this.valueFieldName)\r\n            .get().then(function (data) { return data.reduce(function (c, item) {\r\n            return Object.defineProperty(c, item[_this.keyFieldName], {\r\n                configurable: false,\r\n                enumerable: false,\r\n                value: item[_this.valueFieldName],\r\n                writable: false,\r\n            });\r\n        }, {}); });\r\n    };\r\n    /**\r\n     * Wraps the current provider in a cache enabled provider\r\n     *\r\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\r\n     */\r\n    SPListConfigurationProvider.prototype.asCaching = function () {\r\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\r\n        return new CachingConfigurationProvider(this, cacheKey);\r\n    };\r\n    return SPListConfigurationProvider;\r\n}());\r\nexport default SPListConfigurationProvider;\r\n//# sourceMappingURL=spListConfigurationProvider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/config-store/es5/src/providers/spListConfigurationProvider.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}