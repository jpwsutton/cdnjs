{"version":3,"file":"imask.es.js","sources":["../src/core/utils.js","../src/core/action-details.js","../src/core/change-details.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/definition.js","../src/masked/pattern/group.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/input.js","../src/masked/number.js","../src/masked/regexp.js","../src/masked/function.js","../src/masked/dynamic.js","../src/imask.js"],"sourcesContent":["// @flow\r\n\r\n\r\n/** Checks if value is string */\r\nexport\r\nfunction isString (str: mixed): boolean %checks {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\n/** Conforms string with fallback */\r\nexport\r\nfunction conform (res: ?string | boolean, str: string, fallback: string=''): string {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\n/**\r\n  Direction\r\n  @prop {number} NONE\r\n  @prop {number} LEFT\r\n  @prop {number} RIGHT\r\n*/\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n/**\r\n  Direction\r\n  @enum {number}\r\n*/\r\nexport\r\ntype Direction = $Values<typeof DIRECTION>;\r\n\r\n/** Returns next char position in direction */\r\nexport\r\nfunction indexInDirection (pos: number, direction: Direction): number {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\n/** Escapes regular expression control chars */\r\nexport\r\nfunction escapeRegExp (str: string): string {\r\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\r\n}\r\n\r\n\r\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\r\nexport\r\nfunction objectIncludes (b: any, a: any): boolean {\r\n  if (a === b) return true;\r\n\r\n  var arrA = Array.isArray(a)\r\n    , arrB = Array.isArray(b)\r\n    , i;\r\n\r\n  if (arrA && arrB) {\r\n    if (a.length != b.length) return false;\r\n    for (i = 0; i < a.length; i++)\r\n      if (!objectIncludes(a[i], b[i])) return false;\r\n    return true;\r\n  }\r\n\r\n  if (arrA != arrB) return false;\r\n\r\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n    var keys = Object.keys(a);\r\n    // if (keys.length !== Object.keys(b).length) return false;\r\n\r\n    var dateA = a instanceof Date\r\n      , dateB = b instanceof Date;\r\n    if (dateA && dateB) return a.getTime() == b.getTime();\r\n    if (dateA != dateB) return false;\r\n\r\n    var regexpA = a instanceof RegExp\r\n      , regexpB = b instanceof RegExp;\r\n    if (regexpA && regexpB) return a.toString() == b.toString();\r\n    if (regexpA != regexpB) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if(!objectIncludes(a[keys[i]], b[keys[i]])) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/* eslint-disable no-undef */\r\nexport\r\nconst g: any = typeof window !== 'undefined' && window ||\r\n  typeof global !== 'undefined' && global.global === global && global ||\r\n  typeof self !== 'undefined' && self.self === self && self ||\r\n  {};\r\n/* eslint-enable no-undef */\r\n\r\n/** Selection range */\r\nexport\r\ntype Selection = {\r\n  start: number;\r\n  end: number;\r\n};\r\n","// @flow\r\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\r\n\r\n\r\n/** Provides details of changing input */\r\nexport default\r\nclass ActionDetails {\r\n  /** Current input value */\r\n  value: string;\r\n  /** Current cursor position */\r\n  cursorPos: number;\r\n  /** Old input value */\r\n  oldValue: string;\r\n  /** Old selection */\r\n  oldSelection: Selection;\r\n\r\n  constructor (\r\n    value: string,\r\n    cursorPos: number,\r\n    oldValue: string,\r\n    oldSelection: Selection\r\n  ) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n\r\n    // double check if left part was changed (autofilling, other non-standard input triggers)\r\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\r\n      --this.oldSelection.start;\r\n    }\r\n  }\r\n\r\n  /**\r\n    Start changing position\r\n    @readonly\r\n  */\r\n  get startChangePos (): number {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  /**\r\n    Inserted symbols count\r\n    @readonly\r\n  */\r\n  get insertedCount (): number {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  /**\r\n    Inserted symbols\r\n    @readonly\r\n  */\r\n  get inserted (): string {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Removed symbols count\r\n    @readonly\r\n  */\r\n  get removedCount (): number {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  /**\r\n    Removed symbols\r\n    @readonly\r\n  */\r\n  get removed (): string {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  /**\r\n    Unchanged head symbols\r\n    @readonly\r\n  */\r\n  get head (): string {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  /**\r\n    Unchanged tail symbols\r\n    @readonly\r\n  */\r\n  get tail (): string {\r\n    return this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Remove direction\r\n    @readonly\r\n  */\r\n  get removeDirection (): Direction {\r\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\r\n\r\n    // align right if delete at right or if range removed (event with backspace)\r\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) ?\r\n      DIRECTION.RIGHT :\r\n      DIRECTION.LEFT;\r\n  }\r\n}\r\n","// @flow\r\n\r\n\r\n/**\r\n  Provides details of changing model value\r\n  @param {Object} [details]\r\n  @param {string} [details.inserted] - Inserted symbols\r\n  @param {boolean} [details.overflow] - Is overflowed\r\n  @param {number} [details.removeCount] - Removed symbols count\r\n  @param {number} [details.shift] - Additional offset if any changes occurred before current position\r\n*/\r\nexport default\r\nclass ChangeDetails {\r\n  /** Inserted symbols */\r\n  inserted: string;\r\n  /** Is overflowed */\r\n  overflow: boolean;\r\n  /** Additional offset if any changes occurred before current position */\r\n  shift: number;\r\n  _rawInserted: string;\r\n\r\n  constructor (details?: {\r\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\r\n    overflow?: $PropertyType<ChangeDetails, 'overflow'>,\r\n    shift?: $PropertyType<ChangeDetails, 'shift'>,\r\n  }) {\r\n    Object.assign(this, {\r\n      inserted: '',\r\n      overflow: false,\r\n      shift: 0,\r\n    }, details);\r\n  }\r\n\r\n  /**\r\n    Aggregate changes\r\n    @returns {ChangeDetails} `this`\r\n  */\r\n  aggregate (details: ChangeDetails): ChangeDetails {\r\n    if (details.rawInserted) this.rawInserted += details.rawInserted;\r\n    this.inserted += details.inserted;\r\n    this.shift += details.shift;\r\n    this.overflow = this.overflow || details.overflow;\r\n    return this;\r\n  }\r\n\r\n  /** Total offset considering all changes */\r\n  get offset (): number {\r\n    return this.shift + this.inserted.length;\r\n  }\r\n\r\n  /** Raw inserted is used by dynamic mask */\r\n  get rawInserted (): string {\r\n    return this._rawInserted != null ?\r\n      this._rawInserted :\r\n      this.inserted;\r\n  }\r\n\r\n  set rawInserted (rawInserted: string): void {\r\n    this._rawInserted = rawInserted;\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport {type Direction, DIRECTION} from '../core/utils.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\n/** Supported mask type */\r\nexport\r\ntype Mask = string | String | RegExp | Class<Number> | Class<Date> | Array<any> | Function | Masked<*> | Class<Masked<*>>;\r\n\r\n/** Append flags */\r\nexport\r\ntype AppendFlags = {\r\n  input?: boolean,\r\n  tail?: boolean,\r\n  raw?: boolean\r\n};\r\n\r\n/** Extract flags */\r\nexport\r\ntype ExtractFlags = {\r\n  raw?: boolean\r\n};\r\n\r\nexport\r\ntype MaskedOptions<MaskType> = {\r\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\r\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\r\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\r\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\r\n};\r\n\r\n\r\n/** Provides common masking stuff */\r\nexport default\r\nclass Masked<MaskType> {\r\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\r\n\r\n  /** @type {Mask} */\r\n  mask: MaskType;\r\n  /** Transforms value before mask processing */\r\n  prepare: (string, Masked<MaskType>, AppendFlags) => string;\r\n  /** Validates if value is acceptable */\r\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\r\n  /** Does additional processing in the end of editing */\r\n  commit: (string, AppendFlags) => void;\r\n  /** */\r\n  isInitialized: boolean;\r\n  _value: string;\r\n  _refreshing: boolean;\r\n\r\n  constructor (opts: {[string]: any}) {\r\n    this._value = '';\r\n    this._update(opts);\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /** Sets and applies new options */\r\n  updateOptions (opts: {[string]: any}) {\r\n    this.withValueRefresh(this._update.bind(this, opts));\r\n  }\r\n\r\n  /**\r\n    Sets new options\r\n    @protected\r\n  */\r\n  _update (opts: {[string]: any}) {\r\n    Object.assign(this, opts);\r\n  }\r\n\r\n  /** Clones masked with options and value */\r\n  clone (): Masked<MaskType> {\r\n    const m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  }\r\n\r\n  /** */\r\n  assign (source: Masked<MaskType>): Masked<MaskType> {\r\n    // $FlowFixMe\r\n    return Object.assign(this, source);\r\n  }\r\n\r\n  /** Resets value */\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  /** */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value: string) {\r\n    this.resolve(value);\r\n  }\r\n\r\n  /** Resolve new value */\r\n  resolve (value: string): string {\r\n    this.reset();\r\n    this._append(value, {input: true});\r\n    this._appendTail();\r\n    this.doCommit();\r\n    return this.value;\r\n  }\r\n\r\n  /** */\r\n  get unmaskedValue (): string {\r\n    return this.value;\r\n  }\r\n\r\n  set unmaskedValue (value: string) {\r\n    this.reset();\r\n    this._append(value);\r\n    this._appendTail();\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get typedValue (): any {\r\n    return this.unmaskedValue;\r\n  }\r\n\r\n  set typedValue (value: any) {\r\n    this.unmaskedValue = value;\r\n  }\r\n\r\n  /** Value that includes raw user input */\r\n  get rawInputValue (): string {\r\n    return this.extractInput(0, this.value.length, {raw: true});\r\n  }\r\n\r\n  set rawInputValue (value: string) {\r\n    this.reset();\r\n    this._append(value, {raw: true});\r\n    this._appendTail();\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get isComplete (): boolean {\r\n    return true;\r\n  }\r\n\r\n  /** Finds nearest input position in direction */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    return cursorPos;\r\n  }\r\n\r\n  /** Extracts value in range considering flags */\r\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  /** Extracts tail in range */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\r\n    return {\r\n      value: this.extractInput(fromPos, toPos),\r\n      fromPos,\r\n      toPos,\r\n    };\r\n  }\r\n\r\n  /** Appends tail */\r\n  _appendTail (tail?: TailDetails): ChangeDetails {\r\n    return this._append(tail ? tail.value: '', {tail: true});\r\n  }\r\n\r\n  /** Appends symbols considering flags */\r\n  _append (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    let consistentValue: Masked<MaskType> = this.clone();\r\n    let overflow = false;\r\n\r\n    str = this.doPrepare(str, flags);\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this.doValidate(flags) === false) {\r\n        this.assign(consistentValue);\r\n        if (!flags.input) {\r\n          // in `input` mode dont skip invalid chars\r\n          overflow = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength),\r\n      overflow\r\n    });\r\n  }\r\n\r\n  /** Appends symbols considering tail */\r\n  appendWithTail (str: string, tail: TailDetails): ChangeDetails {\r\n    // TODO refactor\r\n    const aggregateDetails = new ChangeDetails();\r\n    let consistentValue = this.clone();\r\n    let consistentAppended: Masked<MaskType>;\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      const ch = str[ci];\r\n\r\n      const appendDetails = this._append(ch, {input: true});\r\n      consistentAppended = this.clone();\r\n      const tailAppended = !appendDetails.overflow && !this._appendTail(tail).overflow;\r\n      if (!tailAppended || this.doValidate({tail: true}) === false) {\r\n        this.assign(consistentValue);\r\n        break;\r\n      }\r\n\r\n      this.assign(consistentAppended);\r\n      consistentValue = this.clone();\r\n      aggregateDetails.aggregate(appendDetails);\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    // 3) when breaks on tail insert\r\n\r\n    // aggregate only shift from tail\r\n    aggregateDetails.shift += this._appendTail(tail).shift;\r\n\r\n    return aggregateDetails;\r\n  }\r\n\r\n  /** */\r\n  remove (from: number=0, count: number=this.value.length-from): ChangeDetails {\r\n    this._value = this.value.slice(0, from) + this.value.slice(from + count);\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  /** Calls function and reapplies current value */\r\n  withValueRefresh<T>(fn: () => T): T {\r\n    if (this._refreshing || !this.isInitialized) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.unmaskedValue;\r\n    const value = this.value;\r\n\r\n    const ret = fn();\r\n\r\n    // try to update with raw value first to keep fixed chars\r\n    if (this.resolve(value) !== value) {\r\n      // or fallback to unmasked\r\n      this.unmaskedValue = unmasked;\r\n    }\r\n\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n    Prepares string before mask processing\r\n    @protected\r\n  */\r\n  doPrepare (str: string, flags: AppendFlags={}): string {\r\n    return this.prepare ?\r\n      this.prepare(str, this, flags) :\r\n      str;\r\n  }\r\n\r\n  /**\r\n    Validates if value is acceptable\r\n    @protected\r\n  */\r\n  doValidate (flags: AppendFlags): boolean {\r\n    return !this.validate || this.validate(this.value, this, flags);\r\n  }\r\n\r\n  /**\r\n    Does additional processing in the end of editing\r\n    @protected\r\n  */\r\n  doCommit () {\r\n    if (this.commit) this.commit(this.value, this);\r\n  }\r\n\r\n  // TODO\r\n  // insert (str, fromPos, flags)\r\n\r\n  /** */\r\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction): ChangeDetails {\r\n    const tailPos: number = start + deleteCount;\r\n    const tail: TailDetails = this._extractTail(tailPos);\r\n\r\n    let startChangePos: number = this.nearestInputPos(start, removeDirection);\r\n    const changeDetails: ChangeDetails = new ChangeDetails({\r\n      shift: startChangePos - start  // adjust shift if start was aligned\r\n    }).aggregate(this.remove(startChangePos))\r\n      .aggregate(this.appendWithTail(inserted, tail));\r\n\r\n    return changeDetails;\r\n  }\r\n}\r\n","// @flow\r\nimport {g, isString} from '../core/utils.js';\r\nimport type Masked from './base.js';\r\nimport {type Mask} from './base.js';\r\n\r\n\r\n/** Get Masked class by mask type */\r\nexport\r\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\r\n  if (mask == null) {\r\n    throw new Error('mask property should be defined');\r\n  }\r\n\r\n  if (mask instanceof RegExp) return g.IMask.MaskedRegExp;\r\n  if (isString(mask)) return g.IMask.MaskedPattern;\r\n  if (mask instanceof Date || mask === Date) return g.IMask.MaskedDate;\r\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return g.IMask.MaskedNumber;\r\n  if (Array.isArray(mask) || mask === Array) return g.IMask.MaskedDynamic;\r\n  // $FlowFixMe\r\n  if (mask.prototype instanceof g.IMask.Masked) return mask;\r\n  // $FlowFixMe\r\n  if (mask instanceof Function) return g.IMask.MaskedFunction;\r\n\r\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\r\n  return g.IMask.Masked;\r\n}\r\n\r\n/** Creates new {@link Masked} depending on mask type */\r\nexport default\r\nfunction createMask (opts: {mask: Mask}): Masked<*> {\r\n  opts = Object.assign({}, opts);  // clone\r\n  const mask = opts.mask;\r\n\r\n  if (mask instanceof g.IMask.Masked) return mask;\r\n\r\n  const MaskedClass = maskedClass(mask);\r\n  return new MaskedClass(opts);\r\n}\r\n","// @flow\r\nimport createMask from '../factory.js';\r\nimport type Masked from '../base.js';\r\nimport {type Mask} from '../base.js';\r\n\r\n\r\ntype Definitions = {[string]: Mask};\r\n/** */\r\ntype DefinitionType = $Values<typeof PatternDefinition.TYPES>;\r\ntype DefinitionTypes = {[string]: DefinitionType};\r\n\r\n/** */\r\nexport default\r\nclass PatternDefinition {\r\n  static TYPES: DefinitionTypes;\r\n  static DEFAULTS: Definitions;\r\n\r\n  /** */\r\n  char: ?string;\r\n  /** */\r\n  stopAlign: ?boolean;\r\n  /** */\r\n  unmasking: ?boolean;\r\n  /** */\r\n  optional: boolean;\r\n  /** */\r\n  isHollow: boolean;\r\n  /** */\r\n  isRawInput: boolean;\r\n  /** */\r\n  type: DefinitionType;\r\n  /** */\r\n  mask: Mask;\r\n  /** */\r\n  _masked: Masked<*>;\r\n\r\n  constructor(opts: any) {  // TODO flow\r\n    Object.assign(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  /** */\r\n  reset () {\r\n    this.isHollow = false;\r\n    this.isRawInput = false;\r\n    if (this._masked) this._masked.reset();\r\n  }\r\n\r\n  /** */\r\n  get isInput (): boolean {\r\n    return this.type === PatternDefinition.TYPES.INPUT;\r\n  }\r\n\r\n  /** */\r\n  get isHiddenHollow (): boolean {\r\n    return this.isHollow && this.optional;\r\n  }\r\n\r\n  /** */\r\n  resolve (ch: string): boolean | string {\r\n    if (!this._masked) return false;\r\n    return this._masked.resolve(ch);\r\n  }\r\n}\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\n/**\r\n  @prop {string} INPUT\r\n  @prop {string} FIXED\r\n*/\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n","// @flow\r\nimport type MaskedPattern from '../pattern.js';\r\nimport {type AppendFlags} from '../base.js';\r\n\r\n\r\n/** */\r\nexport\r\ninterface PatternGroupTemplate {\r\n  validate: $PropertyType<PatternGroup, 'validate'>;\r\n  mask: $PropertyType<PatternGroup, 'mask'>;\r\n}\r\n\r\n/** */\r\ntype PatternGroupOptions = PatternGroupTemplate & {\r\n  name: $PropertyType<PatternGroup, 'name'>,\r\n  offset: $PropertyType<PatternGroup, 'offset'>,\r\n};\r\n\r\n/**\r\n  Pattern group symbols from parent\r\n  @param {MaskedPattern} masked - Internal {@link masked} model\r\n  @param {Object} opts\r\n  @param {string} opts.name - Group name\r\n  @param {number} opts.offset - Group offset in masked definitions array\r\n  @param {string} opts.mask - Group mask\r\n  @param {Function} [opts.validate] - Custom group validator\r\n*/\r\nexport default\r\nclass PatternGroup {\r\n  /** */\r\n  static Range: typeof RangeGroup;\r\n  /** */\r\n  static Enum: typeof EnumGroup;\r\n\r\n  /** Internal {@link masked} model */\r\n  masked: MaskedPattern;\r\n  /** Group name */\r\n  name: string;\r\n  /** Group offset in masked definitions array */\r\n  offset: number;\r\n  /** Group mask */\r\n  mask: string;\r\n  /** Custom group validator */\r\n  validate: (string, PatternGroup, AppendFlags) => boolean;\r\n\r\n  constructor(masked: MaskedPattern, {name, offset, mask, validate}: PatternGroupOptions) {\r\n    this.masked = masked;\r\n    this.name = name;\r\n    this.offset = offset;\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n  }\r\n\r\n  /** Slice of internal {@link masked} value */\r\n  get value (): string {\r\n    return this.masked.value.slice(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  /** Unmasked slice of internal {@link masked} value */\r\n  get unmaskedValue (): string {\r\n    return this.masked.extractInput(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  /** Validates if current value is acceptable */\r\n  doValidate (flags: AppendFlags) {\r\n    return this.validate(this.value, this, flags);\r\n  }\r\n}\r\n\r\n/**\r\n  Pattern group that validates number ranges\r\n  @param {number[]} range - [from, to]\r\n  @param {?number} maxlen - Maximum number length, will be padded with leading zeros\r\n*/\r\nexport\r\nclass RangeGroup implements PatternGroupTemplate {\r\n  /** @type {string} */\r\n  mask: $PropertyType<PatternGroup, 'mask'>;\r\n  /** @type {Function} */\r\n  validate: $PropertyType<PatternGroup, 'validate'>;\r\n  _maxLength: number;\r\n  _from: number;\r\n  _to: number;\r\n\r\n  constructor ([from, to]: [number, number], maxlen: number=String(to).length) {\r\n    this._from = from;\r\n    this._to = to;\r\n    this._maxLength = maxlen;\r\n    this.validate = this.validate.bind(this);\r\n\r\n    this._update();\r\n  }\r\n\r\n  get to (): number {\r\n    return this._to;\r\n  }\r\n\r\n  set to (to: number) {\r\n    this._to = to;\r\n    this._update();\r\n  }\r\n\r\n  get from (): number {\r\n    return this._from;\r\n  }\r\n\r\n  set from (from: number) {\r\n    this._from = from;\r\n    this._update();\r\n  }\r\n\r\n  get maxLength (): number {\r\n    return this._maxLength;\r\n  }\r\n\r\n  set maxLength (maxLength: number) {\r\n    this._maxLength = maxLength;\r\n    this._update();\r\n  }\r\n\r\n  get _matchFrom (): number {\r\n    return this.maxLength - String(this.from).length;\r\n  }\r\n\r\n  _update() {\r\n    this._maxLength = Math.max(this._maxLength, String(this.to).length);\r\n    this.mask = '0'.repeat(this._maxLength);\r\n  }\r\n\r\n  validate (str: string): boolean {\r\n    let minstr = '';\r\n    let maxstr = '';\r\n\r\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\r\n    if (num) {\r\n      minstr = ('0'.repeat(placeholder.length) + num);\r\n      maxstr = ('9'.repeat(placeholder.length) + num);\r\n    }\r\n\r\n    const firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    minstr = minstr.padEnd(this._maxLength, '0');\r\n    maxstr = maxstr.padEnd(this._maxLength, '9');\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to;\r\n  }\r\n}\r\n\r\n/** Pattern group that validates enum values */\r\nexport\r\nfunction EnumGroup (enums: Array<string>): PatternGroupTemplate {\r\n  return {\r\n    mask: '*'.repeat(enums[0].length),\r\n    validate: (value: string, group: PatternGroup, flags: AppendFlags) => enums.some(e => e.indexOf(group.unmaskedValue) >= 0)\r\n  };\r\n}\r\n\r\nPatternGroup.Range = RangeGroup;\r\nPatternGroup.Enum = EnumGroup;\r\n","// @flow\r\nimport {type TailDetails} from '../../core/tail-details.js';\r\n\r\n\r\nexport\r\ntype TailInputChunk = {\r\n  stop: ?number,\r\n  value: string\r\n};\r\n\r\nexport\r\nclass ChunksTailDetails implements TailDetails {\r\n  chunks: Array<TailInputChunk>;\r\n\r\n  constructor (chunks: Array<TailInputChunk>) {\r\n    this.chunks = chunks;\r\n  }\r\n\r\n  get value (): string {\r\n    return this.chunks.map(c => c.value).join('');\r\n  }\r\n\r\n  get fromPos (): ?number {\r\n    const firstChunk = this.chunks[0];\r\n    return firstChunk && firstChunk.stop;\r\n  }\r\n\r\n  get toPos (): ?number {\r\n    const lastChunk = this.chunks[this.chunks.length - 1];\r\n    return lastChunk && lastChunk.stop;\r\n  }\r\n}\r\n","// @flow\r\nimport {conform, DIRECTION, indexInDirection, type Direction} from '../core/utils.js';\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport Masked, {type AppendFlags, type ExtractFlags, type MaskedOptions} from './base.js';\r\nimport PatternDefinition from './pattern/definition.js';\r\nimport PatternGroup, {type PatternGroupTemplate} from './pattern/group.js';\r\nimport {ChunksTailDetails, type TailInputChunk} from './pattern/chunk-tail-details.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\ntype MaskedPatternOptions = {\r\n  ...MaskedOptions<string>,\r\n  definitions: $PropertyType<MaskedPattern, 'definitions'>,\r\n  groups: $PropertyType<MaskedPattern, 'groups'>,\r\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>,\r\n  lazy: $PropertyType<MaskedPattern, 'lazy'>,\r\n};\r\ntype InputChunk = [?number, string];\r\n\r\n\r\n/**\r\n  Pattern mask\r\n  @param {Object} opts\r\n  @param {Object} opts.groups\r\n  @param {Object} opts.definitions\r\n  @param {string} opts.placeholderChar\r\n  @param {boolean} opts.lazy\r\n*/\r\nexport default\r\nclass MaskedPattern extends Masked<string> {\r\n  static DEFAULTS: any;\r\n  static STOP_CHAR: string;\r\n  static ESCAPE_CHAR: string;\r\n  static Definition: Class<PatternDefinition>;\r\n  static Group: Class<PatternGroup>;\r\n\r\n  /** */\r\n  groups: {[string]: PatternGroupTemplate};\r\n  /** */\r\n  definitions: {[string]: any};  // TODO mask type\r\n  /** Single char for empty input */\r\n  placeholderChar: string;\r\n  /** Show placeholder only when needed */\r\n  lazy: boolean;\r\n  _charDefs: Array<PatternDefinition>;\r\n  _groupDefs: Array<PatternGroup>;\r\n\r\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\r\n    opts.definitions = Object.assign({}, PatternDefinition.DEFAULTS, opts.definitions);\r\n    super({\r\n      ...MaskedPattern.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\r\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\r\n    super._update(opts);\r\n    this._rebuildMask();\r\n  }\r\n\r\n  /** */\r\n  _rebuildMask () {\r\n    const defs = this.definitions;\r\n    this._charDefs = [];\r\n    this._groupDefs = [];\r\n\r\n    let pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n    let stopAlign = false;\r\n\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      if (this.groups) {\r\n        const p = pattern.slice(i);\r\n        const gNames = Object.keys(this.groups).filter(gName => p.indexOf(gName) === 0);\r\n        // order by key length\r\n        gNames.sort((a, b) => b.length - a.length);\r\n        // use group name with max length\r\n        const gName = gNames[0];\r\n        if (gName) {\r\n          const group = this.groups[gName];\r\n          this._groupDefs.push(new PatternGroup(this, {\r\n            name: gName,\r\n            offset: this._charDefs.length,\r\n            mask: group.mask,\r\n            validate: group.validate,\r\n          }));\r\n          pattern = pattern.replace(gName, group.mask);\r\n        }\r\n      }\r\n\r\n      let char = pattern[i];\r\n      let type = char in defs ?\r\n        PatternDefinition.TYPES.INPUT :\r\n        PatternDefinition.TYPES.FIXED;\r\n      const unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      const optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        stopAlign = true;\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        if (!char) break;\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push(new PatternDefinition({\r\n        char,\r\n        type,\r\n        optional,\r\n        stopAlign,\r\n        unmasking,\r\n        mask: type === PatternDefinition.TYPES.INPUT ?\r\n          defs[char] :\r\n          (value => value === char)\r\n      }));\r\n\r\n      stopAlign = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *) {\r\n    return this._groupDefs.every(g => g.doValidate(...args)) && super.doValidate(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  clone () {\r\n    const m = new MaskedPattern(this);\r\n    m._value = this.value;\r\n    // $FlowFixMe\r\n    m._charDefs.forEach((d, i) => Object.assign(d, this._charDefs[i]));\r\n    // $FlowFixMe\r\n    m._groupDefs.forEach((d, i) => Object.assign(d, this._groupDefs[i]));\r\n    return m;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    super.reset();\r\n    this._charDefs.forEach(d => {delete d.isHollow;});\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !this._charDefs.some((d, i) =>\r\n      d.isInput && !d.optional && (d.isHollow || !this.extractInput(i, i+1)));\r\n  }\r\n\r\n  /** */\r\n  hiddenHollowsBefore (defIndex: number): number {\r\n    return this._charDefs\r\n      .slice(0, defIndex)\r\n      .filter(d => d.isHiddenHollow)\r\n      .length;\r\n  }\r\n\r\n  /** Map definition index to position on view */\r\n  mapDefIndexToPos (defIndex: number): number {\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  }\r\n\r\n  /** Map position on view to definition index */\r\n  mapPosToDefIndex (pos: number): number {\r\n    let defIndex = pos;\r\n    for (let di=0; di<this._charDefs.length; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    const str = this.value;\r\n    let unmasked = '';\r\n\r\n    for (let ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (def.isHiddenHollow) continue;\r\n      if (def.unmasking && !def.isHollow) unmasked += ch;\r\n      ++ci;\r\n    }\r\n\r\n    return unmasked;\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendTail (tail?: ChunksTailDetails | TailDetails): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (tail) {\r\n      details.aggregate(tail instanceof ChunksTailDetails ?\r\n        this._appendChunks(tail.chunks, {tail: true}) :\r\n        super._appendTail(tail));\r\n    }\r\n    return details.aggregate(this._appendPlaceholder());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _append (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    let rawInserted = '';\r\n    let overflow = false;\r\n\r\n    str = this.doPrepare(str, flags);\r\n\r\n    for (let ci=0, di=this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (def == null) {\r\n        overflow = true;\r\n        break;\r\n      }\r\n\r\n      // reset\r\n      def.isHollow = false;\r\n\r\n      let resolved, skipped;\r\n      let chres = conform(def.resolve(ch), ch);\r\n\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          this._value += chres;\r\n          if (!this.doValidate()) {\r\n            chres = '';\r\n            this._value = this.value.slice(0, -1);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        if (!chres) {\r\n          if (!def.optional && !flags.input && !this.lazy) {\r\n            this._value += this.placeholderChar;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        } else {\r\n          rawInserted += chres;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.unmasking || flags.input || flags.raw) && !flags.tail;\r\n        def.isRawInput = resolved && (flags.raw || flags.input);\r\n        if (def.isRawInput) rawInserted += def.char;\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength),\r\n      rawInserted,\r\n      overflow\r\n    });\r\n  }\r\n\r\n  /** Appends chunks splitted by stop chars */\r\n  _appendChunks (chunks: Array<TailInputChunk>, ...args: *) {\r\n    const details = new ChangeDetails();\r\n    for (let ci=0; ci < chunks.length; ++ci) {\r\n      const {stop, value} = chunks[ci];\r\n      const fromDef = stop != null && this._charDefs[stop];\r\n      // lets double check if stopAlign is here\r\n      if (fromDef && fromDef.stopAlign) details.aggregate(this._appendPlaceholder(stop));\r\n      if (details.aggregate(this._append(value, ...args)).overflow) break;\r\n    }\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): ChunksTailDetails {\r\n    return new ChunksTailDetails(this._extractInputChunks(fromPos, toPos));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags: ExtractFlags={}): string {\r\n    if (fromPos === toPos) return '';\r\n\r\n    const str = this.value;\r\n    let input = '';\r\n\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (\r\n      let ci=fromPos, di=this.mapPosToDefIndex(fromPos);\r\n      ci<toPos && ci<str.length && di < toDefIndex;\r\n      ++di\r\n    ) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow ||\r\n        flags.raw && !def.isInput && def.isRawInput) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  /** Extracts chunks from input splitted by stop chars */\r\n  _extractInputChunks (fromPos: number=0, toPos: number=this.value.length): Array<TailInputChunk> {\r\n    if (fromPos === toPos) return [];\r\n\r\n    const fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    const stopDefIndices = this._charDefs\r\n      .map((d, i) => [d, i])\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .filter(([d]) => d.stopAlign)\r\n      .map(([, i]) => i);\r\n\r\n    const stops = [\r\n      fromDefIndex,\r\n      ...stopDefIndices,\r\n      toDefIndex\r\n    ];\r\n\r\n    return stops.map((s, i) => ({\r\n      stop: stopDefIndices.indexOf(s) >= 0 ?\r\n        s :\r\n        null,\r\n\r\n      value: this.extractInput(\r\n        this.mapDefIndexToPos(s),\r\n        this.mapDefIndexToPos(stops[++i]))\r\n    })).filter(({stop, value}) => stop != null || value);\r\n  }\r\n\r\n  /** Appends placeholder depending on laziness */\r\n  _appendPlaceholder (toDefIndex: ?number): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    const maxDefIndex = toDefIndex || this._charDefs.length;\r\n    for (let di=this.mapPosToDefIndex(this.value.length); di < maxDefIndex; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (def.isInput) def.isHollow = true;\r\n\r\n      if (!this.lazy || toDefIndex) {\r\n        this._value += !def.isInput && def.char != null ?\r\n          def.char :\r\n          !def.optional ?\r\n            this.placeholderChar :\r\n            '';\r\n      }\r\n    }\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength)\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (from: number=0, count: number=this.value.length-from): ChangeDetails {\r\n    const fromDefIndex = this.mapPosToDefIndex(from);\r\n    const toDefIndex = this.mapPosToDefIndex(from + count);\r\n    this._charDefs\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .forEach(d => d.reset());\r\n\r\n    return super.remove(from, count);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE) {\r\n    let step = direction || DIRECTION.RIGHT;\r\n\r\n    const initialDefIndex = this.mapPosToDefIndex(cursorPos);\r\n    const initialDef = this._charDefs[initialDefIndex];\r\n    let di = initialDefIndex;\r\n\r\n    let firstInputIndex,\r\n        firstFilledInputIndex,\r\n        firstVisibleHollowIndex,\r\n        nextdi;\r\n\r\n    // check if chars at right is acceptable for LEFT and NONE directions\r\n    if (direction !== DIRECTION.RIGHT &&\r\n      (initialDef && initialDef.isInput ||\r\n        // in none direction latest position is acceptable also\r\n        direction === DIRECTION.NONE && cursorPos === this.value.length)) {\r\n      firstInputIndex = initialDefIndex;\r\n      if (initialDef && !initialDef.isHollow) firstFilledInputIndex = initialDefIndex;\r\n    }\r\n\r\n    if ((firstFilledInputIndex == null && direction == DIRECTION.LEFT) || firstInputIndex == null) {\r\n      // search forward\r\n      for (\r\n        nextdi = indexInDirection(di, step);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += step, nextdi += step\r\n      ) {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (firstInputIndex == null && nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (direction === DIRECTION.NONE) break;\r\n        }\r\n        if (firstVisibleHollowIndex == null && nextDef.isHollow && !nextDef.isHiddenHollow) firstVisibleHollowIndex = di;\r\n        if (nextDef.isInput && !nextDef.isHollow) {\r\n          firstFilledInputIndex = di;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // for lazy if has aligned left inside fixed and has came to the start - use start position\r\n    if (direction === DIRECTION.LEFT && di === 0 && this.lazy && !this.extractInput() &&\r\n      (!initialDef || !initialDef.isInput)) firstInputIndex = 0;\r\n\r\n    if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n      // search backward\r\n      step = -step;\r\n      let overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (\r\n        nextdi = indexInDirection(di, step);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += step, nextdi += step\r\n      ) {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (nextDef.isHollow && !nextDef.isHiddenHollow) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || nextdi >= this._charDefs.length;\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ?\r\n        firstVisibleHollowIndex :\r\n        firstInputIndex;\r\n    }\r\n\r\n    return this.mapDefIndexToPos(di);\r\n  }\r\n\r\n  /** Get group by name */\r\n  group (name: string): ?PatternGroup {\r\n    return this.groupsByName(name)[0];\r\n  }\r\n\r\n  /** Get all groups by name */\r\n  groupsByName (name: string): Array<PatternGroup> {\r\n    return this._groupDefs.filter(g => g.name === name);\r\n  }\r\n}\r\nMaskedPattern.DEFAULTS = {\r\n  lazy: true,\r\n  placeholderChar: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.Definition = PatternDefinition;\r\nMaskedPattern.Group = PatternGroup;\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\nimport PatternGroup from './pattern/group.js';\r\n\r\n\r\n/** Date mask */\r\nexport default\r\nclass MaskedDate extends MaskedPattern {\r\n  static GET_DEFAULT_GROUPS: () => {[string]: PatternGroup};\r\n  static DEFAULTS: any;\r\n\r\n  /** Parse string to Date */\r\n  parse: (string) => Date;\r\n  /** Format Date to string */\r\n  format: (Date) => string;\r\n  /** Pattern mask for date according to {@link MaskedDate#format} */\r\n  pattern: string;\r\n  /** Start date */\r\n  min: ?Date;\r\n  /** End date */\r\n  max: ?Date;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDate.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    if (opts.mask === Date) delete opts.mask;\r\n    if (opts.pattern) {\r\n      opts.mask = opts.pattern;\r\n      delete opts.pattern;\r\n    }\r\n\r\n    const groups = opts.groups;\r\n    opts.groups = Object.assign({}, MaskedDate.GET_DEFAULT_GROUPS());\r\n    // adjust year group\r\n    if (opts.min) opts.groups.Y.from = opts.min.getFullYear();\r\n    if (opts.max) opts.groups.Y.to = opts.max.getFullYear();\r\n    Object.assign(opts.groups, groups);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *) {\r\n    const valid = super.doValidate(...args);\r\n    const date = this.date;\r\n\r\n    return valid &&\r\n      (!this.isComplete ||\r\n        this.isDateExist(this.value) && date &&\r\n        (this.min == null || this.min <= date) &&\r\n        (this.max == null || date <= this.max));\r\n  }\r\n\r\n  /** Checks if date is exists */\r\n  isDateExist (str: string): boolean {\r\n    return this.format(this.parse(str)) === str;\r\n  }\r\n\r\n  /** Parsed Date */\r\n  get date (): ?Date {\r\n    return this.isComplete ?\r\n      this.parse(this.value) :\r\n      null;\r\n  }\r\n\r\n  set date (date: Date) {\r\n    this.value = this.format(date);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): ?Date {\r\n    return this.date;\r\n  }\r\n\r\n  set typedValue (value: Date) {\r\n    this.date = value;\r\n  }\r\n}\r\nMaskedDate.DEFAULTS = {\r\n  pattern: 'd{.}`m{.}`Y',\r\n  format: date => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: str => {\r\n    const [day, month, year] = str.split('.');\r\n    return new Date(year, month - 1, day);\r\n  },\r\n};\r\nMaskedDate.GET_DEFAULT_GROUPS = () => {\r\n  return {\r\n    d: new PatternGroup.Range([1, 31]),\r\n    m: new PatternGroup.Range([1, 12]),\r\n    Y: new PatternGroup.Range([1900, 9999]),\r\n  };\r\n}","// @flow\r\n\r\nexport\r\ntype ElementEvent =\r\n  'selectionChange' |\r\n  'input' |\r\n  'drop' |\r\n  'click' |\r\n  'focus' |\r\n  'commit';\r\n\r\n/**\r\n  Generic element API to use with mask\r\n  @interface\r\n*/\r\nexport default\r\nclass MaskElement {\r\n  +_unsafeSelectionStart: number;\r\n  +_unsafeSelectionEnd: number;\r\n  value: string;\r\n\r\n  get selectionStart (): number {\r\n    let start;\r\n    try {\r\n      start = this._unsafeSelectionStart;\r\n    } catch (e) {}\r\n\r\n    return start != null ?\r\n      start :\r\n      this.value.length;\r\n  }\r\n\r\n  get selectionEnd (): number {\r\n    let end;\r\n    try {\r\n      end = this._unsafeSelectionEnd;\r\n    } catch (e) {}\r\n\r\n    return end != null ?\r\n      end :\r\n      this.value.length;\r\n  }\r\n\r\n  select (start: number, end: number) {\r\n    if (start == null || end == null ||\r\n      start === this.selectionStart && end === this.selectionEnd) return;\r\n\r\n    try {\r\n      this._unsafeSelect(start, end);\r\n    } catch (e) {}\r\n  }\r\n\r\n  _unsafeSelect (start: number, end: number): void {}\r\n  isActive (): boolean { return false; }\r\n\r\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\r\n  unbindEvents (): void {}\r\n}\r\n","// @flow\r\nimport MaskElement, {type ElementEvent} from './mask-element.js';\r\n\r\n\r\nexport default\r\nclass HTMLMaskElement extends MaskElement {\r\n  static EVENTS_MAP: {[ElementEvent]: string};\r\n  input: HTMLTextAreaElement | HTMLInputElement;\r\n  _handlers: {[string]: Function};\r\n\r\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\r\n    super();\r\n    this.input = input;\r\n    this._handlers = {};\r\n  }\r\n\r\n  isActive (): boolean {\r\n    return this.input === document.activeElement;\r\n  }\r\n\r\n  get _unsafeSelectionStart (): number {\r\n    return this.input.selectionStart;\r\n  }\r\n\r\n  get _unsafeSelectionEnd (): number {\r\n    return this.input.selectionEnd;\r\n  }\r\n\r\n  _unsafeSelect (start: number, end: number) {\r\n    this.input.setSelectionRange(start, end);\r\n  }\r\n\r\n  get value (): string {\r\n    return this.input.value;\r\n  }\r\n\r\n  set value (value: string) {\r\n    this.input.value = value;\r\n  }\r\n\r\n  bindEvents (handlers: {[ElementEvent]: Function}) {\r\n    Object.keys(handlers)\r\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\r\n  }\r\n\r\n  unbindEvents () {\r\n    Object.keys(this._handlers)\r\n      .forEach(event => this._toggleEventHandler(event));\r\n  }\r\n\r\n  _toggleEventHandler (event: string, handler?: Function): void {\r\n    if (this._handlers[event]) {\r\n      this.input.removeEventListener(event, this._handlers[event]);\r\n      delete this._handlers[event];\r\n    }\r\n\r\n    if (handler) {\r\n      this.input.addEventListener(event, handler);\r\n      this._handlers[event] = handler;\r\n    }\r\n  }\r\n}\r\nHTMLMaskElement.EVENTS_MAP = {\r\n  selectionChange: 'keydown',\r\n  input: 'input',\r\n  drop: 'drop',\r\n  click: 'click',\r\n  focus: 'focus',\r\n  commit: 'change',\r\n};\r\n","// @flow\r\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\r\nimport ActionDetails from '../core/action-details.js';\r\nimport MaskedDate from '../masked/date.js';\r\nimport createMask, {maskedClass} from '../masked/factory.js';\r\nimport type Masked from '../masked/base.js';\r\nimport {type Mask} from '../masked/base.js';\r\nimport MaskElement from './mask-element.js';\r\nimport HTMLMaskElement from './html-mask-element.js';\r\n\r\n\r\n/** Listens to element events and controls changes between element and {@link Masked} */\r\nexport default\r\nclass InputMask {\r\n  /**\r\n    View element\r\n    @readonly\r\n  */\r\n  el: MaskElement;\r\n\r\n  /**\r\n    Internal {@link Masked} model\r\n    @readonly\r\n  */\r\n  masked: Masked<*>;\r\n  alignCursor: () => void;\r\n  alignCursorFriendly: () => void;\r\n\r\n  _listeners: {[string]: Array<Function>};\r\n  _value: string;\r\n  _changingCursorPos: number;\r\n  _unmaskedValue: string;\r\n  _saveSelection: (?Event) => void;\r\n  _selection: Selection;\r\n  _onInput: (Event) => void;\r\n  _onChange: () => void;\r\n  _onDrop: (Event) => void;\r\n  _cursorChanging: TimeoutID;\r\n\r\n  /**\r\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\r\n    @param {Object} opts\r\n  */\r\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any}) {\r\n    this.el = (el instanceof MaskElement) ?\r\n      el :\r\n      new HTMLMaskElement(el);\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this._saveSelection = this._saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this.alignCursor = this.alignCursor.bind(this);\r\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\r\n\r\n    this._bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  /** Read or update mask */\r\n  get mask (): Mask {\r\n    return this.masked.mask;\r\n  }\r\n  set mask (mask: Mask) {\r\n    if (mask == null ||\r\n      mask === this.masked.mask ||\r\n      mask === Date && this.masked instanceof MaskedDate) return;\r\n\r\n    if (this.masked.constructor === maskedClass(mask)) {\r\n      this.masked.mask = mask;\r\n      return;\r\n    }\r\n\r\n    const masked = createMask({mask});\r\n    masked.unmaskedValue = this.masked.unmaskedValue;\r\n    this.masked = masked;\r\n  }\r\n\r\n  /** Raw value */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str: string) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Unmasked value */\r\n  get unmaskedValue (): string {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str: string) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Typed unmasked value */\r\n  get typedValue (): any {\r\n    return this.masked.typedValue;\r\n  }\r\n\r\n  set typedValue (val: any) {\r\n    this.masked.typedValue = val;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /**\r\n    Starts listening to element events\r\n    @protected\r\n  */\r\n  _bindEvents () {\r\n    this.el.bindEvents({\r\n      selectionChange: this._saveSelection,\r\n      input: this._onInput,\r\n      drop: this._onDrop,\r\n      click: this.alignCursorFriendly,\r\n      focus: this.alignCursorFriendly,\r\n      commit: this._onChange,\r\n    });\r\n  }\r\n\r\n  /**\r\n    Stops listening to element events\r\n    @protected\r\n   */\r\n  _unbindEvents () {\r\n    this.el.unbindEvents();\r\n  }\r\n\r\n  /**\r\n    Fires custom event\r\n    @protected\r\n   */\r\n  _fireEvent (ev: string) {\r\n    const listeners = this._listeners[ev];\r\n    if (!listeners) return;\r\n\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  /**\r\n    Current selection start\r\n    @readonly\r\n  */\r\n  get selectionStart (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  /** Current cursor position */\r\n  get cursorPos (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n  set cursorPos (pos: number) {\r\n    if (!this.el.isActive) return;\r\n\r\n    this.el.select(pos, pos);\r\n    this._saveSelection();\r\n  }\r\n\r\n  /**\r\n    Stores current selection\r\n    @protected\r\n  */\r\n  _saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  /** Syncronizes model value from view */\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n  }\r\n\r\n  /** Syncronizes view from model value, fires change events */\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\r\n  updateOptions (opts: {[string]: any}) {\r\n    opts = {...opts};\r\n\r\n    this.mask = opts.mask;\r\n    delete opts.mask;\r\n\r\n    // check if changed\r\n    if (objectIncludes(this.masked, opts)) return;\r\n\r\n    this.masked.updateOptions(opts);\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Updates cursor */\r\n  updateCursor (cursorPos: number) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  /**\r\n    Delays cursor update to support mobile browsers\r\n    @private\r\n  */\r\n  _delayUpdateCursor (cursorPos: number) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      if (!this.el) return; // if was destroyed\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  /**\r\n    Fires custom events\r\n    @protected\r\n  */\r\n  _fireChangeEvents () {\r\n    this._fireEvent('accept');\r\n    if (this.masked.isComplete) this._fireEvent('complete');\r\n  }\r\n\r\n  /**\r\n    Aborts delayed cursor update\r\n    @private\r\n  */\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  /** Aligns cursor to nearest available position */\r\n  alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT);\r\n  }\r\n\r\n  /** Aligns cursor only if selection is empty */\r\n  alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Adds listener on custom event */\r\n  on (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  /** Removes custom event listener */\r\n  off (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  /** Handles view input event */\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    // fix strange IE behavior\r\n    if (!this._selection) return this.updateValue();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    const offset = this.masked.splice(\r\n      details.startChangePos,\r\n      details.removed.length,\r\n      details.inserted,\r\n      details.removeDirection).offset;\r\n\r\n    const cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, details.removeDirection);\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  /** Handles view change event and commits model value */\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.doCommit();\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Handles view drop event, prevents by default */\r\n  _onDrop (ev: Event) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  /** Unbind view events and removes element reference */\r\n  destroy () {\r\n    this._unbindEvents();\r\n    // $FlowFixMe why not do so?\r\n    this._listeners.length = 0;\r\n    delete this.el;\r\n  }\r\n}\r\n","// @flow\r\nimport {escapeRegExp, indexInDirection, type Direction} from '../core/utils.js';\r\nimport Masked, {type MaskedOptions, type AppendFlags} from './base.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\ntype MaskedNumberOptions = {\r\n  ...MaskedOptions<Number>,\r\n  radix: $PropertyType<MaskedNumber, 'radix'>,\r\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\r\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\r\n  scale: $PropertyType<MaskedNumber, 'scale'>,\r\n  signed: $PropertyType<MaskedNumber, 'signed'>,\r\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\r\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\r\n};\r\n\r\n/**\r\n  Number mask\r\n  @param {Object} opts\r\n  @param {string} opts.radix - Single char\r\n  @param {string} opts.thousandsSeparator - Single char\r\n  @param {Array<string>} opts.mapToRadix - Array of single chars\r\n  @param {number} opts.min\r\n  @param {number} opts.max\r\n  @param {number} opts.scale - Digits after point\r\n  @param {boolean} opts.signed - Allow negative\r\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\r\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\r\n*/\r\nexport default\r\nclass MaskedNumber extends Masked<Number> {\r\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\r\n\r\n  /** Single char */\r\n  radix: string;\r\n  /** Single char */\r\n  thousandsSeparator: string;\r\n  /** Array of single chars */\r\n  mapToRadix: Array<string>;\r\n  /** */\r\n  min: number;\r\n  /** */\r\n  max: number;\r\n  /** Digits after point */\r\n  scale: number;\r\n  /** */\r\n  signed: boolean;\r\n  /** Flag to remove leading and trailing zeros in the end of editing */\r\n  normalizeZeros: boolean;\r\n  /** Flag to pad trailing zeros after point in the end of editing */\r\n  padFractionalZeros: boolean;\r\n  _numberRegExp: RegExp;\r\n  _numberRegExpInput: RegExp;\r\n  _thousandsSeparatorRegExp: RegExp;\r\n  _mapToRadixRegExp: RegExp;\r\n\r\n  constructor (opts: $Shape<MaskedNumberOptions>) {\r\n    super({\r\n      ...MaskedNumber.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: MaskedNumberOptions) {\r\n    super._update(opts);\r\n    this._updateRegExps();\r\n  }\r\n\r\n  /** */\r\n  _updateRegExps () {\r\n    // use different regexp to process user input (more strict, input suffix) and tail shifting\r\n    const start = '^'\r\n\r\n    let midInput = '';\r\n    let mid = '';\r\n    if (this.allowNegative) {\r\n      midInput += '([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))';\r\n      mid += '[+|\\\\-]?';\r\n    } else {\r\n      midInput += '(0|([1-9]+\\\\d*))';\r\n    }\r\n    mid += '\\\\d*';\r\n\r\n    let end = (this.scale ?\r\n      '(' + this.radix + '\\\\d{0,' + this.scale + '})?' :\r\n      '') + '$';\r\n\r\n    this._numberRegExpInput = new RegExp(start + midInput + end);\r\n    this._numberRegExp = new RegExp(start + mid + end);\r\n    this._mapToRadixRegExp = new RegExp('[' +\r\n      this.mapToRadix.map(escapeRegExp).join('') +\r\n    ']', 'g');\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\r\n    const tail = super._extractTail(fromPos, toPos);\r\n\r\n    return {\r\n      ...tail,\r\n      value: this._removeThousandsSeparators(tail.value),\r\n    };\r\n  }\r\n\r\n  /** */\r\n  _removeThousandsSeparators (value: string): string {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  /** */\r\n  _insertThousandsSeparators (value: string): string {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doPrepare (str: string, ...args: *) {\r\n    return super.doPrepare(this._removeThousandsSeparators(str.replace(this._mapToRadixRegExp, this.radix)), ...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  appendWithTail (...args: *) {\r\n    let previousValue = this.value;\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    let startChangePos = this.value.length;\r\n\r\n    const appendDetails = super.appendWithTail(...args);\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n\r\n    // calculate offsets after insert separators\r\n    let beforeTailPos = startChangePos + appendDetails.inserted.length;\r\n    for (let pos = 0; pos <= beforeTailPos; ++pos) {\r\n      if (this.value[pos] === this.thousandsSeparator) {\r\n        if (pos < startChangePos ||\r\n          // check high bound\r\n          // if separator is still there - consider it also\r\n          (pos === startChangePos && previousValue[pos] === this.thousandsSeparator)) {\r\n          ++startChangePos;\r\n        }\r\n        if (pos < beforeTailPos) ++beforeTailPos;\r\n      }\r\n    }\r\n\r\n    // adjust details with separators\r\n    appendDetails.rawInserted = appendDetails.inserted;\r\n    appendDetails.inserted = this.value.slice(startChangePos, beforeTailPos);\r\n    appendDetails.shift += startChangePos - previousValue.length;\r\n\r\n    return appendDetails;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    if (!direction) return cursorPos;\r\n\r\n    const nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos += direction;\r\n    return cursorPos;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (flags: AppendFlags) {\r\n    const regexp = flags.input ? this._numberRegExpInput : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && super.doValidate(flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    const number = this.number;\r\n    let validnum = number;\r\n\r\n    // check bounds\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) this.unmaskedValue = String(validnum);\r\n\r\n    let formatted = this.value;\r\n\r\n    if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\r\n    if (this.padFractionalZeros) formatted = this._padFractionalZeros(formatted);\r\n\r\n    this._value = this._insertThousandsSeparators(formatted);\r\n    super.doCommit();\r\n  }\r\n\r\n  /** */\r\n  _normalizeZeros (value: string): string {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n    // add leading zero\r\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  /** */\r\n  _padFractionalZeros (value: string): string {\r\n    if (!value) return value;\r\n\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this._removeThousandsSeparators(\r\n      this._normalizeZeros(\r\n        this.value))\r\n      .replace(this.radix, '.');\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue.replace('.', this.radix);\r\n  }\r\n\r\n  /** Parsed Number */\r\n  get number (): number {\r\n    return Number(this.unmaskedValue);\r\n  }\r\n\r\n  set number (number: number) {\r\n    this.unmaskedValue = String(number);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): number {\r\n    return this.number;\r\n  }\r\n\r\n  set typedValue (value: number) {\r\n    this.number = value;\r\n  }\r\n\r\n  /**\r\n    Is negative allowed\r\n    @readonly\r\n  */\r\n  get allowNegative (): boolean {\r\n    return this.signed ||\r\n      (this.min != null && this.min < 0) ||\r\n      (this.max != null && this.max < 0);\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: ['.'],\r\n  scale: 2,\r\n  signed: false,\r\n  normalizeZeros: true,\r\n  padFractionalZeros: false,\r\n};\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by RegExp */\r\nexport default\r\nclass MaskedRegExp extends Masked<RegExp> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\r\n    opts.validate = (value) => value.search(opts.mask) >= 0;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by custom Function */\r\nexport default\r\nclass MaskedFunction extends Masked<Function> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: MaskedOptions<Function>) {\r\n    opts.validate = opts.mask;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport createMask from './factory.js';\r\nimport Masked, {type AppendFlags} from './base.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\ntype DynamicMaskType = Array<{[string]: any}>;\r\n/** Dynamic mask for choosing apropriate mask in run-time */\r\nexport default\r\nclass MaskedDynamic extends Masked<DynamicMaskType> {\r\n  /** Currently chosen mask */\r\n  currentMask: ?Masked<*>;\r\n  /** Compliled {@link Masked} options */\r\n  compiledMasks: Array<Masked<*>>;\r\n  /** Chooses {@link Masked} depending on input value */\r\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDynamic.DEFAULTS,\r\n      ...opts\r\n    });\r\n\r\n    this.currentMask = null;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    super._update(opts);\r\n    // mask could be totally dynamic with only `dispatch` option\r\n    this.compiledMasks = Array.isArray(opts.mask) ?\r\n      opts.mask.map(m => createMask(m)) :\r\n      [];\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _append (str: string, ...args: *): ChangeDetails {\r\n    str = this.doPrepare(str, ...args);\r\n\r\n    const details = this._applyDispatch(str, ...args);\r\n\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask._append(str, ...args));\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  _applyDispatch (appended: string='', ...args: *) {\r\n    const oldValueLength = this.value.length;\r\n    const inputValue = this.rawInputValue;\r\n    const oldMask = this.currentMask;\r\n    const details = new ChangeDetails();\r\n\r\n    // dispatch SHOULD NOT modify mask\r\n    this.currentMask = this.doDispatch(appended, ...args);\r\n\r\n    // restore state after dispatch\r\n    if (this.currentMask && this.currentMask !== oldMask) {\r\n      // if mask changed reapply input\r\n      this.currentMask.reset();\r\n      // $FlowFixMe - it's ok, we don't change current mask\r\n      this.currentMask._append(inputValue, {raw: true});\r\n      details.shift = this.value.length - oldValueLength;\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doDispatch(appended: string, flags: AppendFlags={}) {\r\n    return this.dispatch(appended, this, flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  clone (): MaskedDynamic {\r\n    const m = new MaskedDynamic(this);\r\n    m._value = this.value;\r\n\r\n    // try to keep reference to compiled masks\r\n    const currentMaskIndex = this.compiledMasks.indexOf(this.currentMask);\r\n    if (this.currentMask) {\r\n      m.currentMask = currentMaskIndex >= 0 ?\r\n        m.compiledMasks[currentMaskIndex].assign(this.currentMask) :\r\n        this.currentMask.clone();\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    if (this.currentMask) this.currentMask.reset();\r\n    this.compiledMasks.forEach(cm => cm.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get value (): string {\r\n    return this.currentMask ? this.currentMask.value : '';\r\n  }\r\n\r\n  set value (value: string) {\r\n    super.value = value;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): any {\r\n    return this.currentMask ? this.currentMask.typedValue : '';\r\n  }\r\n\r\n  set typedValue (value: any) {\r\n    let unmaskedValue = String(value);\r\n    if (this.currentMask) {\r\n      this.currentMask.typedValue = value;\r\n      unmaskedValue = this.currentMask.unmaskedValue;\r\n    }\r\n    this.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !!this.currentMask && this.currentMask.isComplete;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (...args: *): ChangeDetails {\r\n    const details: ChangeDetails = new ChangeDetails();\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask.remove(...args))\r\n        // update with dispatch\r\n        .aggregate(this._applyDispatch());\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (...args: *): string {\r\n    return this.currentMask ?\r\n      this.currentMask.extractInput(...args) :\r\n      '';\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (...args: *): TailDetails {\r\n    return this.currentMask ?\r\n      this.currentMask._extractTail(...args) :\r\n      super._extractTail(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendTail (tail?: TailDetails): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (tail) details.aggregate(this._applyDispatch(tail.value));\r\n\r\n    return details.aggregate(this.currentMask ?\r\n      this.currentMask._appendTail(tail) :\r\n      super._appendTail(tail));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    if (this.currentMask) this.currentMask.doCommit();\r\n    super.doCommit();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos(...args: *): number {\r\n    return this.currentMask ?\r\n      this.currentMask.nearestInputPos(...args) :\r\n      super.nearestInputPos(...args);\r\n  }\r\n}\r\n\r\nMaskedDynamic.DEFAULTS = {\r\n  dispatch: (appended, masked, flags) => {\r\n    if (!masked.compiledMasks.length) return;\r\n\r\n    const inputValue = masked.rawInputValue;\r\n\r\n    // simulate input\r\n    const inputs = masked.compiledMasks.map((cm, index) => {\r\n      const m = cm.clone();\r\n      m.rawInputValue = inputValue;\r\n      m._append(appended, flags);\r\n\r\n      return {value: m.rawInputValue.length, index};\r\n    });\r\n\r\n    // pop masks with longer values first\r\n    inputs.sort((i1, i2) => i2.value - i1.value);\r\n\r\n    return masked.compiledMasks[inputs[0].index];\r\n  }\r\n};\r\n","import {g} from './core/utils.js';\r\n\r\nimport InputMask from './controls/input.js';\r\n\r\nimport Masked from './masked/base.js';\r\nimport MaskedPattern from './masked/pattern.js';\r\nimport MaskedNumber from './masked/number.js';\r\nimport MaskedDate from './masked/date.js';\r\nimport MaskedRegExp from './masked/regexp.js';\r\nimport MaskedFunction from './masked/function.js';\r\nimport MaskedDynamic from './masked/dynamic.js';\r\nimport createMask from './masked/factory.js';\r\nimport MaskElement from './controls/mask-element.js';\r\nimport HTMLMaskElement from './controls/html-mask-element.js';\r\n\r\n\r\n/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input-like elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n/** {@link InputMask} */\r\nIMask.InputMask = InputMask;\r\n\r\n/** {@link Masked} */\r\nIMask.Masked = Masked;\r\n/** {@link MaskedPattern} */\r\nIMask.MaskedPattern = MaskedPattern;\r\n/** {@link MaskedNumber} */\r\nIMask.MaskedNumber = MaskedNumber;\r\n/** {@link MaskedDate} */\r\nIMask.MaskedDate = MaskedDate;\r\n/** {@link MaskedRegExp} */\r\nIMask.MaskedRegExp = MaskedRegExp;\r\n/** {@link MaskedFunction} */\r\nIMask.MaskedFunction = MaskedFunction;\r\n/** {@link MaskedDynamic} */\r\nIMask.MaskedDynamic = MaskedDynamic;\r\n/** {@link createMask} */\r\nIMask.createMask = createMask;\r\n/** {@link MaskElement} */\r\nIMask.MaskElement = MaskElement;\r\n/** {@link HTMLMaskElement} */\r\nIMask.HTMLMaskElement = HTMLMaskElement;\r\n\r\ng.IMask = IMask;\r\n"],"names":["isString","str","String","conform","res","fallback","DIRECTION","indexInDirection","pos","direction","LEFT","escapeRegExp","replace","objectIncludes","b","a","arrA","Array","isArray","arrB","i","length","keys","Object","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","g","window","global","self","ActionDetails","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","insertedCount","inserted","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","NONE","RIGHT","ChangeDetails","details","assign","rawInserted","shift","overflow","offset","_rawInserted","Masked","opts","_value","_update","isInitialized","withValueRefresh","bind","m","source","resolve","reset","_append","input","_appendTail","doCommit","unmaskedValue","typedValue","rawInputValue","extractInput","raw","isComplete","fromPos","toPos","flags","oldValueLength","consistentValue","clone","doPrepare","ci","doValidate","aggregateDetails","consistentAppended","ch","appendDetails","tailAppended","aggregate","from","count","fn","_refreshing","unmasked","ret","prepare","validate","commit","deleteCount","tailPos","_extractTail","nearestInputPos","changeDetails","remove","appendWithTail","maskedClass","mask","Error","IMask","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Function","MaskedFunction","warn","createMask","MaskedClass","PatternDefinition","_masked","isHollow","isRawInput","isInput","type","TYPES","INPUT","isHiddenHollow","optional","DEFAULTS","PatternGroup","masked","name","mapDefIndexToPos","RangeGroup","to","maxlen","_from","_to","_maxLength","maxLength","_matchFrom","repeat","minstr","maxstr","match","placeholder","num","firstNonZero","search","padEnd","EnumGroup","enums","group","some","e","indexOf","Range","Enum","ChunksTailDetails","chunks","map","c","join","firstChunk","stop","lastChunk","definitions","_rebuildMask","defs","_charDefs","_groupDefs","pattern","unmaskingBlock","optionalBlock","stopAlign","groups","p","gNames","filter","gName","sort","push","char","FIXED","unmasking","STOP_CHAR","ESCAPE_CHAR","args","every","forEach","d","defIndex","hiddenHollowsBefore","di","def","_appendChunks","_appendPlaceholder","mapPosToDefIndex","resolved","skipped","chres","lazy","placeholderChar","fromDef","_extractInputChunks","toDefIndex","fromDefIndex","stopDefIndices","stops","s","maxDefIndex","step","initialDefIndex","initialDef","firstInputIndex","firstFilledInputIndex","firstVisibleHollowIndex","nextdi","nextDef","groupsByName","Definition","Group","GET_DEFAULT_GROUPS","Y","getFullYear","valid","date","isDateExist","format","parse","day","getDate","padStart","month","getMonth","year","split","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","_unsafeSelect","handlers","HTMLMaskElement","_handlers","document","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","InputMask","el","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","alignCursor","alignCursorFriendly","_bindEvents","updateValue","constructor","updateControl","val","bindEvents","unbindEvents","ev","listeners","l","_cursorChanging","_changingCursorPos","isActive","select","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","updateOptions","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_fireEvent","hIndex","splice","updateCursor","preventDefault","stopPropagation","_unbindEvents","_updateRegExps","midInput","mid","allowNegative","scale","radix","_numberRegExpInput","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","parts","previousValue","_insertThousandsSeparators","beforeTailPos","nextPos","regexp","test","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","signed","currentMask","compiledMasks","_applyDispatch","appended","inputValue","oldMask","doDispatch","dispatch","currentMaskIndex","cm","inputs","index","i1","i2"],"mappings":"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"}