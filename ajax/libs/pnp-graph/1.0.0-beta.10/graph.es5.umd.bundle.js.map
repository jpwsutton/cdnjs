{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 54db42db192f7b86fdd2","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./build/packages/graph/es5/src/graphqueryable.js","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./dist/packages/odata/dist/odata.es5.js","webpack:///./build/packages/graph/es5/src/config/graphlibconfig.js","webpack:///./build/packages/graph/es5/src/net/graphhttpclient.js","webpack:///./build/packages/graph/es5/src/net/spfxclient.js","webpack:///./build/packages/graph/es5/index.js","webpack:///./build/packages/graph/es5/src/graph.js","webpack:///./build/packages/graph/es5/src/rest.js","webpack:///./build/packages/graph/es5/src/v1.js","webpack:///(webpack)/buildin/global.js","webpack:///./build/packages/graph/es5/src/groups.js","webpack:///./build/packages/graph/es5/src/members.js","webpack:///./build/packages/graph/es5/src/calendars.js","webpack:///./build/packages/graph/es5/src/conversations.js","webpack:///./build/packages/graph/es5/src/attachments.js","webpack:///./build/packages/graph/es5/src/plans.js","webpack:///./build/packages/graph/es5/src/photos.js","webpack:///./build/packages/graph/es5/src/batch.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,gBAAgB,sCAAsC,iBAAiB,EAAE;AAC/E,qBAAqB,uDAAuD;;AAE5E;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA,mCAAmC,oCAAoC;AACvE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEA;AACA;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,gCAAgC,oBAAoB,gDAAgD,gBAAgB,GAAG;AAChJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;;;;;;;;;;;;;;;ACrKA;AACgB;AACU;AACA;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,0CAA0C,EAAE;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,0CAA0C,iBAAiB,EAAE;AAC7D;AACA,wCAAwC,4FAA8B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;;;;;;;;ACzQA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiB;AACG;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAuE;AACpG;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0EAAoB,SAAS,2EAA2E;AACxwBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,qCAAqC,wCAAwC,EAAE;AAC/E,kCAAkC,6DAA6D,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA,mDAAmD,kBAAkB,EAAE,gBAAgB,aAAa;AACpG;AACA,kCAAkC,yBAAyB,EAAE;AAC7D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAEO;AACR;;;;;;;;;;;AC1vBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD,6BAA6B,iCAAiC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD,6BAA6B,8CAA8C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iFAAiF;AAC9G;AACA;AACA,CAAC;AACD;AACA;AACA,wCAAwC,kCAAkC;AAC1E,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,+BAA+B,yBAAyB;AACxD,kBAAkB,iCAAiC;AACnD;AACA;AACA;AACA,wDAAwD,8BAA8B,EAAE;AACxF;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEO;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/MA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0E;AAC1C;AACf;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAAoB,iEAAiE;AACrF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kEAAkE,EAAE;AAC9G,2CAA2C,4CAA4C,EAAE;AACzF,yCAAyC,kBAAkB,EAAE;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B,EAAE;AAC1D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,kBAAkB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uHAAiE;AACjE;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mIAA6E;AAC7E;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,6EAA6E,qBAAqB,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iHAA4D,GAAG,uBAAuB;AACtF;AACA,+CAA+C,uCAAuC,EAAE;AACxF,6CAA6C,mCAAmC,EAAE;AAClF,0CAA0C,qBAAqB,EAAE;AACjE,yCAAyC,kBAAkB,EAAE;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2HAAqE;AACrE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2HAAqE;AACrE;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,gDAAgD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mCAAmC;AACnE,iCAAiC,cAAc;AAC/C,4GAA4G,sBAAsB,EAAE;AACpI;AACA;AACA,iCAAiC,cAAc;AAC/C,gCAAgC,mCAAmC;AACnE,6GAA6G,sBAAsB,EAAE;AACrI;AACA;AACA,iCAAiC,cAAc;AAC/C,gCAAgC,mCAAmC;AACnE,8GAA8G,sBAAsB,EAAE;AACtI;AACA;AACA,iCAAiC,cAAc;AAC/C,gCAAgC,mCAAmC;AACnE,+GAA+G,sBAAsB,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA,kCAAkC,gFAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,yCAAyC,EAAE,oBAAoB,4BAA4B,EAAE;AAC9J;AACA;AACA,CAAC;;AAEO;AACR;;;;;;;;;;;;;;;;AC1nBA;AACwB;AACH;AACJ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6HAA6H;AAC1J;AACA;AACA,0EAAoB,2DAA2D;AAC/E;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gLAAkE;AACtG;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;AACR;AACA,0C;;;;;;;;;;ACrD8B;AACD;AAC7B;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,8FAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,6FAAwC,sBAAsB;AAC9D;AACA,qCAAqC,qCAAqC,8BAA8B,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,MAAM;AACpD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,cAAc;AAC/C,8FAAyC,gBAAgB;AACzD;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,8FAAyC,iBAAiB;AAC1D;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,8FAAyC,kBAAkB;AAC3D;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,8FAAyC,mBAAmB;AAC5D;AACA;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;AC7EA;AAAA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,sC;;;;;;;;;;;;;;;;;ACZA;AACA,iC;;;;;;;;;;;;;;;;;;;ACD2B;AACL;AAC0F;AAC1F;AACtB,iC;;;;;;;;;;;ACJa;AACc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,gC;;;;;;;;;;;ACnBA;AACyB;AACR;AACjB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;AACR,8B;;;;;;AC9BA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;;;;;ACpBA;AAC2D;AACjC;AACX;AACY;AACM;AACjB;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,kC;;;;;;;;;;;;AC1PA;AAC2D;AAC3D;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uJAAuJ,GAAG;AAC1J;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA,CAAC;AACO;AACR,mC;;;;;;;;;;;;;AClDA;AAC2D;AAC3D,WAAW,cAAc;AACzB;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,qC;;;;;;;;;;;;;;;;;ACtFA;AAC2D;AACrC;AACtB;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,yC;;;;;;;;;;;AChOA;AAC2D;AAC3D;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,uC;;;;;;;;;;;AC1CA;AAC2D;AAC3D;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;AC3BA;AACiC;AACE;AACnC;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,kC;;;;;;;;;;;;;;;AClCA;AACqB;AACJ;AACI;AACQ;AACH;AAC1B;AACA;AACA;AACA;AACA;AACA,0EAAoB,SAAS,2EAA2E;AACxG;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,kCAAkC,sDAAsD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mFAAmF,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,iC","file":"graph.es5.umd.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 54db42db192f7b86fdd2","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { Util, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\n/**\r\n * Queryable Base Class\r\n *\r\n */\r\nvar GraphQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the Queryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or Queryable that should form the base part of the url\r\n     *\r\n     */\r\n    function GraphQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            var urlStr = baseUrl;\r\n            _this._parentUrl = urlStr;\r\n            _this._url = Util.combinePaths(urlStr, path);\r\n        }\r\n        else {\r\n            var q = baseUrl;\r\n            _this._parentUrl = q._url;\r\n            _this._options = q._options;\r\n            _this._url = Util.combinePaths(_this._parentUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new queryable\r\n     */\r\n    GraphQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Util.extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    GraphQueryable.prototype.toUrlAndQuery = function () {\r\n        var _this = this;\r\n        return this.toUrl() + (\"?\" + this._query.getKeys().map(function (key) { return key + \"=\" + _this._query.get(key); }).join(\"&\"));\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        return new factory(baseUrl, path);\r\n    };\r\n    /**\r\n     * Clones this queryable into a new queryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        // TODO:: include batching info in clone\r\n        if (includeBatch) {\r\n            return new factory(this, additionalPath);\r\n        }\r\n        return new factory(this, additionalPath);\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        if (options === void 0) { options = {}; }\r\n        // TODO:: add batch support\r\n        return Promise.resolve({\r\n            batch: this.batch,\r\n            batchDependency: function () { return void (0); },\r\n            cachingOptions: this._cachingOptions,\r\n            clientFactory: function () { return new GraphHttpClient(); },\r\n            isBatched: this.hasBatch,\r\n            isCached: this._useCaching,\r\n            options: options,\r\n            parser: parser,\r\n            pipeline: pipeline,\r\n            requestAbsoluteUrl: this.toUrlAndQuery(),\r\n            requestId: Util.getGUID(),\r\n            verb: verb,\r\n        });\r\n    };\r\n    return GraphQueryable;\r\n}(ODataQueryable));\r\nexport { GraphQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar GraphQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableCollection, _super);\r\n    function GraphQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    GraphQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields ascending\r\n     *\r\n     * @param orderby The name of the field to sort on\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var keys = this._query.getKeys();\r\n        var query = [];\r\n        var asc = ascending ? \" asc\" : \" desc\";\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"$orderby\") {\r\n                query.push(this._query.get(\"$orderby\"));\r\n                break;\r\n            }\r\n        }\r\n        query.push(\"\" + orderBy + asc);\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    GraphQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips a set number of items in the return set\r\n     *\r\n     * @param num Number of items to skip\r\n     */\r\n    GraphQueryableCollection.prototype.skip = function (num) {\r\n        this._query.add(\"$top\", num.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableCollection.prototype.skipToken = function (token) {\r\n        this._query.add(\"$skiptoken\", token);\r\n        return this;\r\n    };\r\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\r\n        /**\r\n         * \tRetrieves the total count of matching resources\r\n         */\r\n        get: function () {\r\n            this._query.add(\"$count\", \"true\");\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphQueryableCollection;\r\n}(GraphQueryable));\r\nexport { GraphQueryableCollection };\r\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableSearchableCollection, _super);\r\n    function GraphQueryableSearchableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\r\n        this._query.add(\"$search\", query);\r\n        return this;\r\n    };\r\n    return GraphQueryableSearchableCollection;\r\n}(GraphQueryableCollection));\r\nexport { GraphQueryableSearchableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar GraphQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableInstance, _super);\r\n    function GraphQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return GraphQueryableInstance;\r\n}(GraphQueryable));\r\nexport { GraphQueryableInstance };\r\n//# sourceMappingURL=graphqueryable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/graphqueryable.js\n// module id = 1\n// module chunks = 0","/**\n@license\n * @pnp/common v1.0.0-beta.10 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { Logger } from '@pnp/logging';\nimport { __extends } from 'tslib';\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    Object.defineProperty(Dictionary.prototype, \"count\", {\r\n        /**\r\n         * Gets a count of the items currently in the dictionary\r\n         */\r\n        get: function () {\r\n            return this.keys.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Dictionary;\r\n}());\n\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\nvar UrlException = /** @class */ (function (_super) {\r\n    __extends(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(\"defaultCachingStore\", \"session\");\r\n        this._v.add(\"defaultCachingTimeoutSeconds\", 60);\r\n        this._v.add(\"globalCacheDisable\", false);\r\n        this._v.add(\"enableCacheExpiration\", false);\r\n        this._v.add(\"cacheExpirationIntervalMilliseconds\", 750);\r\n        this._v.add(\"spfxContext\", null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingStore\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingTimeoutSeconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(\"globalCacheDisable\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(\"enableCacheExpiration\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(\"cacheExpirationIntervalMilliseconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(\"spfxContext\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = function (context, method) {\r\n        var params = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            params[_i - 2] = arguments[_i];\r\n        }\r\n        return function () {\r\n            method.apply(context, params);\r\n        };\r\n    };\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = function (date, interval, units) {\r\n        var ret = new Date(date); // don't change original date\r\n        switch (interval.toLowerCase()) {\r\n            case \"year\":\r\n                ret.setFullYear(ret.getFullYear() + units);\r\n                break;\r\n            case \"quarter\":\r\n                ret.setMonth(ret.getMonth() + 3 * units);\r\n                break;\r\n            case \"month\":\r\n                ret.setMonth(ret.getMonth() + units);\r\n                break;\r\n            case \"week\":\r\n                ret.setDate(ret.getDate() + 7 * units);\r\n                break;\r\n            case \"day\":\r\n                ret.setDate(ret.getDate() + units);\r\n                break;\r\n            case \"hour\":\r\n                ret.setTime(ret.getTime() + units * 3600000);\r\n                break;\r\n            case \"minute\":\r\n                ret.setTime(ret.getTime() + units * 60000);\r\n                break;\r\n            case \"second\":\r\n                ret.setTime(ret.getTime() + units * 1000);\r\n                break;\r\n            default:\r\n                ret = undefined;\r\n                break;\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = function () {\r\n        var paths = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            paths[_i] = arguments[_i];\r\n        }\r\n        return paths\r\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\r\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n            .join(\"/\")\r\n            .replace(/\\\\/g, \"/\");\r\n    };\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = function (chars) {\r\n        var text = new Array(chars);\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < chars; i++) {\r\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return text.join(\"\");\r\n    };\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    /* tslint:disable no-bitwise */\r\n    Util.getGUID = function () {\r\n        var d = new Date().getTime();\r\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return guid;\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param cf The thing to test for functionness\r\n     */\r\n    Util.isFunc = function (cf) {\r\n        return typeof cf === \"function\";\r\n    };\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = function (obj) {\r\n        return typeof obj !== \"undefined\" && obj !== null;\r\n    };\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = function (array) {\r\n        if (Array.isArray) {\r\n            return Array.isArray(array);\r\n        }\r\n        return array && typeof array.length === \"number\" && array.constructor === Array;\r\n    };\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = function (target, source, noOverwrite) {\r\n        if (noOverwrite === void 0) { noOverwrite = false; }\r\n        if (!Util.objectDefinedNotNull(source)) {\r\n            return target;\r\n        }\r\n        // ensure we don't overwrite things we don't want overwritten\r\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n        return Object.getOwnPropertyNames(source)\r\n            .filter(function (v) { return check(target, v); })\r\n            .reduce(function (t, v) {\r\n            t[v] = source[v];\r\n            return t;\r\n        }, target);\r\n    };\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = function (url) {\r\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n    };\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = function (s) {\r\n        return typeof s === \"undefined\" || s === null || s.length < 1;\r\n    };\r\n    return Util;\r\n}());\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (Util.objectDefinedNotNull(source)) {\r\n        var headers = Util.extend(target.headers || {}, source.headers);\r\n        target = Util.extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            Logger.write(\"Enabling cache expiration.\", 1 /* Info */);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", 1 /* Info */);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = Util.dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        Logger.write(\"Called cache expiration handler.\", 0 /* Verbose */);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(Util.getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            Logger.log({\r\n                data: e,\r\n                level: 3 /* Error */,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\nexport { Util, readBlobAsText, readBlobAsArrayBuffer, Dictionary, deprecated, beta, UrlException, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 2\n// module chunks = 0","/**\n@license\n * @pnp/logging v1.0.0-beta.10 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: \"[\" + err.name + \"]::\" + err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 0 /* Verbose */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry !== \"undefined\" && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 3\n// module chunks = 0","/**\n@license\n * @pnp/odata v1.0.0-beta.10 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnp/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/pnp/pnp\n * bugs: https://github.com/pnp/pnp/issues\n */\nimport { Dictionary, PnPClientStorage, RuntimeConfig, Util, mergeOptions } from '@pnp/common';\nimport { __decorate, __extends } from 'tslib';\nimport { Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = Util.dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(_parser, _cacheOptions) {\r\n        this._parser = _parser;\r\n        this._cacheOptions = _cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        // add this to the cache based on the options\r\n        return this._parser.parse(response).then(function (data) {\r\n            if (_this._cacheOptions.store !== null) {\r\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    __extends(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        Logger.log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                // handle all requests as text, then parse if they are not empty\r\n                r.text()\r\n                    .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                    .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\r\n                // the request to fail and log the error without parsing the body if anyone needs it for debugging\r\n                Logger.log({\r\n                    data: e,\r\n                    level: 2 /* Warning */,\r\n                    message: \"There was an error parsing the error response body. See data for details.\",\r\n                });\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: \"[[body not available]]\",\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (json.hasOwnProperty(\"d\")) {\r\n            if (json.d.hasOwnProperty(\"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (json.hasOwnProperty(\"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\n\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function () {\r\n    function TextParser() {\r\n    }\r\n    TextParser.prototype.parse = function (r) {\r\n        return r.text();\r\n    };\r\n    return TextParser;\r\n}());\r\nvar BlobParser = /** @class */ (function () {\r\n    function BlobParser() {\r\n    }\r\n    BlobParser.prototype.parse = function (r) {\r\n        return r.blob();\r\n    };\r\n    return BlobParser;\r\n}());\r\nvar JSONParser = /** @class */ (function () {\r\n    function JSONParser() {\r\n    }\r\n    JSONParser.prototype.parse = function (r) {\r\n        return r.json();\r\n    };\r\n    return JSONParser;\r\n}());\r\nvar BufferParser = /** @class */ (function () {\r\n    function BufferParser() {\r\n    }\r\n    BufferParser.prototype.parse = function (r) {\r\n        if (Util.isFunc(r.arrayBuffer)) {\r\n            return r.arrayBuffer();\r\n        }\r\n        return r.buffer();\r\n    };\r\n    return BufferParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: context.result,\r\n        level: 0 /* Verbose */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    return next(context)\r\n        .then(function (ctx) { return returnResult(ctx); })\r\n        .catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.verb === \"GET\" && context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (typeof context.cachingOptions !== \"undefined\") {\r\n                    cacheOptions = Util.extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any help batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        context.batchDependency();\r\n                        // handle the case where a parser needs to take special actions with a cached result (such as getAs)\r\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                context.batchDependency();\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = Util.extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    __extends(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar ODataQueryable = /** @class */ (function () {\r\n    function ODataQueryable() {\r\n        this._batch = null;\r\n        this._query = new Dictionary();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    ODataQueryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    ODataQueryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    ODataQueryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (typeof options !== \"undefined\") {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Util.objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    ODataQueryable.prototype.append = function (pathPart) {\r\n        this._url = Util.combinePaths(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}());\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = Util.getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._requests = [];\r\n        this._dependencies = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._requests;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser) {\r\n        var info = {\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._requests.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        var promise = new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        });\r\n        this._dependencies.push(promise);\r\n        return resolver;\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, ProcessHttpClientResponseException, ODataParserBase, ODataDefaultParser, TextParser, BlobParser, JSONParser, BufferParser, setResult, pipe, requestPipelineMethod, PipelineMethods, getDefaultPipeline, AlreadyInBatchException, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/odata/dist/odata.es5.js\n// module id = 4\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { RuntimeConfig } from \"@pnp/common\";\r\nimport { SPfxClient } from \"../net/spfxclient\";\r\nimport { Logger } from \"@pnp/logging\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar NoGraphClientAvailableException = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NoGraphClientAvailableException, _super);\r\n    function NoGraphClientAvailableException(msg) {\r\n        if (msg === void 0) { msg = \"There is no Graph Client available, either set one using configuraiton or provide a valid SPFx Context using setup.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"NoGraphClientAvailableException\";\r\n        Logger.log({ data: null, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return NoGraphClientAvailableException;\r\n}(Error));\r\nexport { NoGraphClientAvailableException };\r\nvar GraphRuntimeConfigImpl = /** @class */ (function () {\r\n    function GraphRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            if (graphPart !== null && typeof graphPart !== \"undefined\" && typeof graphPart.headers !== \"undefined\") {\r\n                return graphPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            // use a configured factory firt\r\n            if (typeof graphPart !== \"undefined\" && typeof graphPart.fetchClientFactory !== \"undefined\") {\r\n                return graphPart.fetchClientFactory;\r\n            }\r\n            // then try and use spfx context if available\r\n            if (typeof RuntimeConfig.spfxContext !== \"undefined\") {\r\n                return function () { return new SPfxClient(RuntimeConfig.spfxContext.graphHttpClient); };\r\n            }\r\n            throw new NoGraphClientAvailableException();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphRuntimeConfigImpl;\r\n}());\r\nexport { GraphRuntimeConfigImpl };\r\nexport var GraphRuntimeConfig = new GraphRuntimeConfigImpl();\r\n//# sourceMappingURL=graphlibconfig.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/config/graphlibconfig.js\n// module id = 5\n// module chunks = 0","import { Util, mergeHeaders, } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"../config/graphlibconfig\";\r\nvar GraphHttpClient = /** @class */ (function () {\r\n    function GraphHttpClient() {\r\n        this._impl = GraphRuntimeConfig.fetchClientFactory();\r\n    }\r\n    GraphHttpClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, GraphRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        var opts = Util.extend(options, { headers: headers });\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = Util.extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, {}, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(Util.getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    GraphHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Util.extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return GraphHttpClient;\r\n}());\r\nexport { GraphHttpClient };\r\n//# sourceMappingURL=graphhttpclient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/net/graphhttpclient.js\n// module id = 6\n// module chunks = 0","var SPfxClient = /** @class */ (function () {\r\n    function SPfxClient(_client, _configuration) {\r\n        if (_configuration === void 0) { _configuration = {}; }\r\n        this._client = _client;\r\n        this._configuration = _configuration;\r\n    }\r\n    SPfxClient.prototype.fetch = function (url, options) {\r\n        return this._client.fetch(url, this._configuration, options);\r\n    };\r\n    return SPfxClient;\r\n}());\r\nexport { SPfxClient };\r\n//# sourceMappingURL=spfxclient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/net/spfxclient.js\n// module id = 7\n// module chunks = 0","export * from \"./src/graph\";\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/index.js\n// module id = 8\n// module chunks = 0","export { graph, GraphRest } from \"./rest\";\r\nexport { GraphBatch, } from \"./batch\";\r\nexport { GraphQueryable, GraphQueryableCollection, GraphQueryableInstance, GraphQueryableSearchableCollection, } from \"./graphqueryable\";\r\nexport { SPfxClient, } from \"./net/spfxclient\";\r\n//# sourceMappingURL=graph.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/graph.js\n// module id = 9\n// module chunks = 0","import { V1 } from \"./v1\";\r\nimport { setup as _setup, } from \"./config/graphlibconfig\";\r\nvar GraphRest = /** @class */ (function () {\r\n    function GraphRest() {\r\n    }\r\n    Object.defineProperty(GraphRest.prototype, \"v1\", {\r\n        get: function () {\r\n            return new V1(\"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    return GraphRest;\r\n}());\r\nexport { GraphRest };\r\nexport var graph = new GraphRest();\r\n//# sourceMappingURL=rest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/rest.js\n// module id = 10\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryable } from \"./graphqueryable\";\r\nimport { Groups } from \"./groups\";\r\n// import { Me } from \"./me\";\r\n/**\r\n * Root object wrapping v1 functionality for MS Graph\r\n *\r\n */\r\nvar V1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(V1, _super);\r\n    /**\r\n     * Creates a new instance of the V1 class\r\n     *\r\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\r\n     * @param path Optional additional path\r\n     */\r\n    function V1(baseUrl, path) {\r\n        if (path === void 0) { path = \"v1.0\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(V1.prototype, \"groups\", {\r\n        get: function () {\r\n            return new Groups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return V1;\r\n}(GraphQueryable));\r\nexport { V1 };\r\n//# sourceMappingURL=v1.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/v1.js\n// module id = 11\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 12\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { Members, Owners } from \"./members\";\r\nimport { Util } from \"@pnp/common\";\r\nimport { Calendar, Events } from \"./calendars\";\r\nimport { Conversations, Senders } from \"./conversations\";\r\nimport { Plans } from \"./plans\";\r\nimport { Photo } from \"./photos\";\r\nexport var GroupType;\r\n(function (GroupType) {\r\n    /**\r\n     * Office 365 (aka unified group)\r\n     */\r\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\r\n    /**\r\n     * Dynamic membership\r\n     */\r\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\r\n    /**\r\n     * Security\r\n     */\r\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\r\n})(GroupType || (GroupType = {}));\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Groups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Groups, _super);\r\n    function Groups(baseUrl, path) {\r\n        if (path === void 0) { path = \"groups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a group from the collection using the specified id\r\n     *\r\n     * @param id Id of the group to get from this collection\r\n     */\r\n    Groups.prototype.getById = function (id) {\r\n        return new Group(this, id);\r\n    };\r\n    /**\r\n     * Create a new group as specified in the request body.\r\n     *\r\n     * @param name Name to display in the address book for the group\r\n     * @param mailNickname Mail alias for the group\r\n     * @param groupType Type of group being created\r\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\r\n     */\r\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = Util.extend({\r\n            displayName: name,\r\n            mailEnabled: groupType === GroupType.Office365,\r\n            mailNickname: mailNickname,\r\n            securityEnabled: groupType !== GroupType.Office365,\r\n        }, additionalProperties);\r\n        // include a group type if required\r\n        if (groupType !== GroupType.Security) {\r\n            postBody = Util.extend(postBody, {\r\n                groupTypes: [groupType === GroupType.Office365 ? \"Unified\" : \"DynamicMembership\"],\r\n            });\r\n        }\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                group: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Groups;\r\n}(GraphQueryableCollection));\r\nexport { Groups };\r\n/**\r\n * Represents a group entity\r\n */\r\nvar Group = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Group.prototype, \"caldendar\", {\r\n        /**\r\n         * The calendar associated with this group\r\n         */\r\n        get: function () {\r\n            return new Calendar(this, \"calendar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"events\", {\r\n        /**\r\n         * Retrieve a list of event objects\r\n         */\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"owners\", {\r\n        /**\r\n         * Gets the collection of owners for this group\r\n         */\r\n        get: function () {\r\n            return new Owners(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"plans\", {\r\n        /**\r\n         * The collection of plans for this group\r\n         */\r\n        get: function () {\r\n            return new Plans(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"members\", {\r\n        /**\r\n         * Gets the collection of members for this group\r\n         */\r\n        get: function () {\r\n            return new Members(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"conversations\", {\r\n        /**\r\n         * Gets the conversations collection for this group\r\n         */\r\n        get: function () {\r\n            return new Conversations(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\r\n        /**\r\n         * Gets the collection of accepted senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"acceptedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\r\n        /**\r\n         * Gets the collection of rejected senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"rejectedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"photo\", {\r\n        /**\r\n         * The photo associated with the group\r\n         */\r\n        get: function () {\r\n            return new Photo(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.addFavorite = function () {\r\n        return this.clone(Group, \"addFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Return all the groups that the specified group is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(Group, \"getMemberGroups\").postCore({\r\n            body: JSON.stringify({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this group\r\n     */\r\n    Group.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a group object\r\n     *\r\n     * @param properties Set of properties of this group to update\r\n     */\r\n    Group.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.removeFavorite = function () {\r\n        return this.clone(Group, \"removeFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\r\n     */\r\n    Group.prototype.resetUnseenCount = function () {\r\n        return this.clone(Group, \"resetUnseenCount\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will enable the current user to receive email notifications for this group,\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.subscribeByMail = function () {\r\n        return this.clone(Group, \"subscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will prevent the current user from receiving email notifications for this group\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.unsubscribeByMail = function () {\r\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\r\n     *\r\n     * @param start Start date and time of the time range\r\n     * @param end End date and time of the time range\r\n     */\r\n    Group.prototype.getCalendarView = function (start, end) {\r\n        var view = this.clone(Group, \"calendarView\");\r\n        view.query.add(\"startDateTime\", start.toISOString());\r\n        view.query.add(\"endDateTime\", end.toISOString());\r\n        return view.get();\r\n    };\r\n    return Group;\r\n}(GraphQueryableInstance));\r\nexport { Group };\r\n//# sourceMappingURL=groups.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/groups.js\n// module id = 13\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nvar Members = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Members, _super);\r\n    function Members(baseUrl, path) {\r\n        if (path === void 0) { path = \"members\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\r\n     * the members navigation property. You can add users or other groups.\r\n     * Important: You can add only users to Office 365 groups.\r\n     *\r\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\r\n     */\r\n    Members.prototype.add = function (id) {\r\n        return this.clone(Members, \"$ref\").postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Members.prototype.getById = function (id) {\r\n        return new Member(this, id);\r\n    };\r\n    return Members;\r\n}(GraphQueryableCollection));\r\nexport { Members };\r\nvar Member = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Member, _super);\r\n    function Member() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Member;\r\n}(GraphQueryableInstance));\r\nexport { Member };\r\nvar Owners = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Owners, _super);\r\n    function Owners(baseUrl, path) {\r\n        if (path === void 0) { path = \"owners\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Owners;\r\n}(Members));\r\nexport { Owners };\r\n//# sourceMappingURL=members.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/members.js\n// module id = 14\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\n// import { Attachments } from \"./attachments\";\r\nvar Calendars = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendars, _super);\r\n    function Calendars(baseUrl, path) {\r\n        if (path === void 0) { path = \"calendars\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Calendars;\r\n}(GraphQueryableCollection));\r\nexport { Calendars };\r\nvar Calendar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendar, _super);\r\n    function Calendar() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Calendar.prototype, \"events\", {\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Calendar;\r\n}(GraphQueryableInstance));\r\nexport { Calendar };\r\nvar Events = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Events, _super);\r\n    function Events(baseUrl, path) {\r\n        if (path === void 0) { path = \"events\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Events.prototype.getById = function (id) {\r\n        return new Event(this, id);\r\n    };\r\n    /**\r\n     * Adds a new event to the collection\r\n     *\r\n     * @param properties The set of properties used to create the event\r\n     */\r\n    Events.prototype.add = function (properties) {\r\n        var _this = this;\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                event: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Events;\r\n}(GraphQueryableCollection));\r\nexport { Events };\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    function Event() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // TODO:: when supported\r\n    // /**\r\n    //  * Gets the collection of attachments for this event\r\n    //  */\r\n    // public get attachments(): Attachments {\r\n    //     return new Attachments(this);\r\n    // }\r\n    /**\r\n     * Update the properties of an event object\r\n     *\r\n     * @param properties Set of properties of this event to update\r\n     */\r\n    Event.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this event\r\n     */\r\n    Event.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Event;\r\n}(GraphQueryableInstance));\r\nexport { Event };\r\n//# sourceMappingURL=calendars.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/calendars.js\n// module id = 15\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { Attachments } from \"./attachments\";\r\nvar Conversations = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversations, _super);\r\n    function Conversations(baseUrl, path) {\r\n        if (path === void 0) { path = \"conversations\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Create a new conversation by including a thread and a post.\r\n     *\r\n     * @param properties Properties used to create the new conversation\r\n     */\r\n    Conversations.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a conversation from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Conversations.prototype.getById = function (id) {\r\n        return new Conversation(this, id);\r\n    };\r\n    return Conversations;\r\n}(GraphQueryableCollection));\r\nexport { Conversations };\r\nvar Threads = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Threads, _super);\r\n    function Threads(baseUrl, path) {\r\n        if (path === void 0) { path = \"threads\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Threads.prototype.getById = function (id) {\r\n        return new Thread(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Threads.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    return Threads;\r\n}(GraphQueryableCollection));\r\nexport { Threads };\r\nvar Posts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Posts, _super);\r\n    function Posts(baseUrl, path) {\r\n        if (path === void 0) { path = \"posts\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Posts.prototype.getById = function (id) {\r\n        return new Post(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Posts.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    return Posts;\r\n}(GraphQueryableCollection));\r\nexport { Posts };\r\nvar Conversation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversation, _super);\r\n    function Conversation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Conversation.prototype, \"threads\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Threads(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this conversation\r\n     */\r\n    Conversation.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: JSON.stringify(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Conversation.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Conversation;\r\n}(GraphQueryableInstance));\r\nexport { Conversation };\r\nvar Thread = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Thread.prototype, \"posts\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Posts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Thread.prototype.reply = function (post) {\r\n        return this.clone(Thread, \"reply\").postCore({\r\n            body: JSON.stringify({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Thread.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Thread;\r\n}(GraphQueryableInstance));\r\nexport { Thread };\r\nvar Post = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Post, _super);\r\n    function Post() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Post.prototype, \"attachments\", {\r\n        get: function () {\r\n            return new Attachments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this post\r\n     */\r\n    Post.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Forward a post to a recipient\r\n     */\r\n    Post.prototype.forward = function (info) {\r\n        return this.clone(Post, \"forward\").postCore({\r\n            body: JSON.stringify(info),\r\n        });\r\n    };\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Post.prototype.reply = function (post) {\r\n        return this.clone(Post, \"reply\").postCore({\r\n            body: JSON.stringify({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    return Post;\r\n}(GraphQueryableInstance));\r\nexport { Post };\r\nvar Senders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Senders, _super);\r\n    function Senders(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Add a new user or group to this senders collection\r\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.add = function (id) {\r\n        return this.clone(Senders, \"$ref\").postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the entity from the collection\r\n     *\r\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.remove = function (id) {\r\n        var remover = this.clone(Senders, \"$ref\");\r\n        remover.query.add(\"$id\", id);\r\n        return remover.deleteCore();\r\n    };\r\n    return Senders;\r\n}(GraphQueryableCollection));\r\nexport { Senders };\r\n//# sourceMappingURL=conversations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/conversations.js\n// module id = 16\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nvar Attachments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachments, _super);\r\n    function Attachments(baseUrl, path) {\r\n        if (path === void 0) { path = \"attachments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    Attachments.prototype.getById = function (id) {\r\n        return new Attachment(this, id);\r\n    };\r\n    /**\r\n     * Add attachment to this collection\r\n     *\r\n     * @param name Name given to the attachment file\r\n     * @param bytes File content\r\n     */\r\n    Attachments.prototype.addFile = function (name, bytes) {\r\n        return this.postCore({\r\n            body: JSON.stringify({\r\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\r\n                contentBytes: bytes,\r\n                name: name,\r\n            }),\r\n        });\r\n    };\r\n    return Attachments;\r\n}(GraphQueryableCollection));\r\nexport { Attachments };\r\nvar Attachment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachment, _super);\r\n    function Attachment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Attachment;\r\n}(GraphQueryableInstance));\r\nexport { Attachment };\r\n//# sourceMappingURL=attachments.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/attachments.js\n// module id = 17\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nvar Plans = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plans, _super);\r\n    function Plans(baseUrl, path) {\r\n        if (path === void 0) { path = \"planner/plans\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a plan from this collection by id\r\n     *\r\n     * @param id Plan's id\r\n     */\r\n    Plans.prototype.getById = function (id) {\r\n        return new Plan(this, id);\r\n    };\r\n    return Plans;\r\n}(GraphQueryableCollection));\r\nexport { Plans };\r\nvar Plan = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plan, _super);\r\n    function Plan() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Plan;\r\n}(GraphQueryableInstance));\r\nexport { Plan };\r\n//# sourceMappingURL=plans.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/plans.js\n// module id = 18\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance } from \"./graphqueryable\";\r\nimport { BlobParser, BufferParser } from \"@pnp/odata\";\r\nvar Photo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Photo, _super);\r\n    function Photo(baseUrl, path) {\r\n        if (path === void 0) { path = \"photo\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the image bytes as a blob (browser)\r\n     */\r\n    Photo.prototype.getBlob = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the image file byets as a Buffer (node.js)\r\n     */\r\n    Photo.prototype.getBuffer = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BufferParser());\r\n    };\r\n    /**\r\n     * Sets the file bytes\r\n     *\r\n     * @param content Image file contents, max 4 MB\r\n     */\r\n    Photo.prototype.setContent = function (content) {\r\n        return this.clone(Photo, \"$value\", false).patchCore({\r\n            body: content,\r\n        });\r\n    };\r\n    return Photo;\r\n}(GraphQueryableInstance));\r\nexport { Photo };\r\n//# sourceMappingURL=photos.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/photos.js\n// module id = 19\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Util, beta } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"./config/graphlibconfig\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\nvar GraphBatchParseException = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphBatchParseException, _super);\r\n    function GraphBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"GraphBatchParseException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return GraphBatchParseException;\r\n}(Error));\r\nexport { GraphBatchParseException };\r\nvar GraphBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphBatch, _super);\r\n    function GraphBatch(batchUrl) {\r\n        if (batchUrl === void 0) { batchUrl = \"https://graph.microsoft.com/beta/$batch\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.batchUrl = batchUrl;\r\n        return _this;\r\n    }\r\n    GraphBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        var client = new GraphHttpClient();\r\n        var batchRequest = {\r\n            requests: this.formatRequests(),\r\n        };\r\n        var batchOptions = {\r\n            \"body\": JSON.stringify(batchRequest),\r\n            \"headers\": {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            \"method\": \"POST\",\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // let nextLinkFlag = false;\r\n        return client.fetch(this.batchUrl, batchOptions)\r\n            .then(function (r) { return r.json(); })\r\n            .then(this._parseResponse)\r\n            .then(function (parsedResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return parsedResponse.responses.reduce(function (chain, response, index) {\r\n                var request = _this.requests[index];\r\n                if (Util.objectDefinedNotNull(request)) {\r\n                    Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }\r\n                else {\r\n                    // do we have a next url? if no this is an error\r\n                    if (parsedResponse.nextLink) {\r\n                        throw new GraphBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                    }\r\n                    // nextLinkFlag = true;\r\n                    // keep the chain moving, but don't add anything for this request yet\r\n                    // here we need to process the next link - so what do we do?\r\n                    // need to append a .then()\r\n                    // TODO::\r\n                    return chain;\r\n                }\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    GraphBatch.prototype.formatRequests = function () {\r\n        return this.requests.map(function (reqInfo, index) {\r\n            var requestFragment = {\r\n                id: \"\" + ++index,\r\n                method: reqInfo.method,\r\n                url: reqInfo.url,\r\n            };\r\n            var headers = {};\r\n            // merge global config headers\r\n            if (typeof GraphRuntimeConfig.headers !== \"undefined\" && GraphRuntimeConfig.headers !== null) {\r\n                headers = Util.extend(headers, GraphRuntimeConfig.headers);\r\n            }\r\n            if (typeof reqInfo.options !== \"undefined\") {\r\n                // merge per request headers\r\n                if (typeof reqInfo.options.headers !== \"undefined\" && reqInfo.options.headers !== null) {\r\n                    headers = Util.extend(headers, reqInfo.options.headers);\r\n                }\r\n                // add a request body\r\n                if (typeof reqInfo.options.body !== \"undefined\" && reqInfo.options.body !== null) {\r\n                    requestFragment = Util.extend(requestFragment, {\r\n                        body: reqInfo.options.body,\r\n                    });\r\n                }\r\n            }\r\n            requestFragment = Util.extend(requestFragment, {\r\n                headers: headers,\r\n            });\r\n            return requestFragment;\r\n        });\r\n    };\r\n    GraphBatch.prototype._parseResponse = function (graphResponse) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var parsedResponses = new Array(_this.requests.length).fill(null);\r\n            for (var i = 0; i < graphResponse.responses.length; ++i) {\r\n                var response = graphResponse.responses[i];\r\n                // we create the request id by adding 1 to the index, so we place the response by subtracting one to match\r\n                // the array of requests and make it easier to map them by index\r\n                var responseId = parseInt(response.id, 10) - 1;\r\n                if (response.status === 204) {\r\n                    parsedResponses[responseId] = new Response();\r\n                }\r\n                else {\r\n                    parsedResponses[responseId] = new Response(null, {\r\n                        headers: response.headers,\r\n                        status: response.status,\r\n                    });\r\n                }\r\n            }\r\n            resolve({\r\n                nextLink: graphResponse.nextLink,\r\n                responses: parsedResponses,\r\n            });\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        beta(\"Graph batching functionality is in beta.\")\r\n    ], GraphBatch.prototype, \"executeImpl\", null);\r\n    return GraphBatch;\r\n}(ODataBatch));\r\nexport { GraphBatch };\r\n//# sourceMappingURL=batch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/graph/es5/src/batch.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}